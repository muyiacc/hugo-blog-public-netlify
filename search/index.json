[{"content":"简介 安装 qBittorrent/qBittorrentEE qBittorrentEE 全称为 qBittorrent-Enhanced-Edition，是 qBittorrent 的增强版，自带防止迅雷吸血\n下载地址：\nqBittorrent：https://www.qbittorrent.org/download qBittorrentEE：https://github.com/c0re100/qBittorrent-Enhanced-Edition/releases 二选其一\n安装位置建议非 C 盘，非空目录\n配置 qBittorrent/qBittorrentEE tracker 服务器 设置 -\u0026gt; Bittorrent\n滑到最下面配置 tracker 服务器。\ntracker 服务器列表\n维护更新的网站：https://trackerslist.com/#/zh\n订阅链接：https://cf.trackerslist.com/all.txt\n直接使用：\n点击展开tracker列表http://1337.abcvg.info:80/announce http://207.241.226.111:6969/announce http://207.241.231.226:6969/announce http://[2a04:ac00:1:3dd8::1:2710]:2710/announce http://bittorrent-tracker.e-n-c-r-y-p-t.net:1337/announce http://bt.okmp3.ru:2710/announce http://ch3oh.ru:6969/announce http://ipv4.rer.lol:2710/announce http://ipv4announce.sktorrent.eu:6969/announce http://ipv6.rer.lol:6969/announce http://nyaa.tracker.wf:7777/announce http://open.tracker.cl:1337/announce http://open.tracker.ink:6969/announce http://p4p.arenabg.com:1337/announce http://public.tracker.vraphim.com:6969/announce http://retracker.hotplug.ru:2710/announce http://t.overflow.biz:6969/announce http://taciturn-shadow.spb.ru:6969/announce http://tk.greedland.net:80/announce http://torrentsmd.com:8080/announce http://tr.nyacat.pw:80/announce http://tr1.aag.moe:2095/announce http://tracker-zhuqiy.dgj055.icu:80/announce http://tracker.beeimg.com:6969/announce http://tracker.bt4g.com:2095/announce http://tracker.edkj.club:6969/announce http://tracker.mywaifu.best:6969/announce http://tracker.opentrackr.org:1337/announce http://tracker.qu.ax:6969/announce http://tracker.renfei.net:8080/announce http://tracker.srv00.com:6969/announce http://tracker.vraphim.com:6969/announce http://tracker.waaa.moe:6969/announce http://tracker2.itzmx.com:6961/announce http://tracker3.itzmx.com:6961/announce http://tracker4.itzmx.com:2710/announce http://wepzone.net:6969/announce http://www.all4nothin.net:80/announce.php http://www.wareztorrent.com:80/announce https://1337.abcvg.info:443/announce https://api.ipv4online.uk:443/announce https://retracker.x2k.ru:443/announce https://sparkle.ghostchu-services.top:443/announce https://t.213891.xyz:443/announce https://torrent.tracker.durukanbal.com:443/announce https://tr.burnabyhighstar.com:443/announce https://tr.nyacat.pw:443/announce https://tr.zukizuki.org:443/announce https://tr2.trkb.ru:443/announce https://tracker-zhuqiy.dgj055.icu:443/announce https://tracker.aburaya.live:443/announce https://tracker.bjut.jp:443/announce https://tracker.bt4g.com:443/announce https://tracker.cloudit.top:443/announce https://tracker.gcrenwp.top:443/announce https://tracker.itscraftsoftware.my.id:443/announce https://tracker.kuroy.me:443/announce https://tracker.leechshield.link:443/announce https://tracker.lilithraws.org:443/announce https://tracker.moeking.me:443/announce https://tracker.pmman.tech:443/announce https://tracker.yemekyedim.com:443/announce https://tracker1.520.jp:443/announce https://trackers.mlsub.net:443/announce udp://207.241.226.111:6969/announce udp://207.241.231.226:6969/announce udp://52.58.128.163:6969/announce udp://[2a03:7220:8083:cd00::1]:451/announce udp://[2a04:ac00:1:3dd8::1:2710]:2710/announce udp://[2a0f:e586:f:f::81]:6969/announce udp://bandito.byterunner.io:6969/announce udp://bittorrent-tracker.e-n-c-r-y-p-t.net:1337/announce udp://bt.ktrackers.com:6666/announce udp://bt.rer.lol:2710/announce udp://bt.rer.lol:6969/announce udp://concen.org:6969/announce udp://cq.kmzs123.cn:17272/announce udp://d40969.acod.regrucolo.ru:6969/announce udp://ec2-18-191-163-220.us-east-2.compute.amazonaws.com:6969/announce udp://evan.im:6969/announce udp://exodus.desync.com:6969/announce udp://ipv4.rer.lol:2710/announce udp://ipv4announce.sktorrent.eu:6969/announce udp://ismaarino.com:1234/announce udp://martin-gebhardt.eu:25/announce udp://mikrotik2.draatman.net:6969/announce udp://ns1.monolithindustries.com:6969/announce udp://odd-hd.fr:6969/announce udp://open.demonii.com:1337/announce udp://open.dstud.io:6969/announce udp://open.stealth.si:80/announce udp://open.tracker.cl:1337/announce udp://open.tracker.ink:6969/announce udp://opentor.org:2710/announce udp://opentracker.io:6969/announce udp://p2p.publictracker.xyz:6969/announce udp://p4p.arenabg.com:1337/announce udp://public.tracker.vraphim.com:6969/announce udp://r.l5.ca:6969/announce udp://retracker.hotplug.ru:2710/announce udp://retracker.lanta.me:2710/announce udp://seedpeer.net:6969/announce udp://serpb.vpsburti.com:6969/announce udp://t.overflow.biz:6969/announce udp://tr.movian.eu:6969/announce udp://tr3.ysagin.top:2715/announce udp://trackarr.org:6969/announce udp://tracker.0x7c0.com:6969/announce udp://tracker.birkenwald.de:6969/announce udp://tracker.breizh.pm:6969/announce udp://tracker.cyberia.is:6969/announce udp://tracker.darkness.services:6969/announce udp://tracker.deadorbit.nl:6969/announce udp://tracker.dler.com:6969/announce udp://tracker.dler.org:6969/announce udp://tracker.draatman.uk:6969/announce udp://tracker.edkj.club:6969/announce udp://tracker.filemail.com:6969/announce udp://tracker.fnix.net:6969/announce udp://tracker.gigantino.net:6969/announce udp://tracker.gmi.gd:6969/announce udp://tracker.kmzs123.tk:17272/announce udp://tracker.opentrackr.org:1337/announce udp://tracker.qu.ax:6969/announce udp://tracker.skynetcloud.site:6969/announce udp://tracker.skyts.net:6969/announce udp://tracker.srv00.com:6969/announce udp://tracker.tiny-vps.com:6969/announce udp://tracker.torrent.eu.org:451/announce udp://tracker.torrust-demo.com:6969/announce udp://tracker.tryhackx.org:6969/announce udp://tracker.yume-hatsuyuki.moe:6969/announce udp://tracker1.myporn.club:9337/announce udp://tracker2.dler.org:80/announce udp://tracker2.itzmx.com:6961/announce udp://tracker3.itzmx.com:6961/announce udp://tracker4.itzmx.com:2710/announce udp://ttk2.nbaonlineservice.com:6969/announce udp://u4.trakx.crim.ist:1337/announce udp://u6.trakx.crim.ist:1337/announce udp://udp.tracker.projectk.org:23333/announce udp://wepzone.net:6969/announce udp://www.torrent.eu.org:451/announce wss://tracker.openwebtorrent.com:443/announce WebUI 设置 -\u0026gt; Web UI\n开启Web用户界面，可以通过网页打开界面，可以远程使用，后续的 防止吸血也要用到。\n配置用户名和密码\n开启对本地主机客户端跳过身份验证\n安装 qBittorrent-ClientBlocker 为了防止被恶意 客户端/IP 吸血，封禁某些不友好的 IP/客户端，保护 BT 网络，保护宽带。\n下载地址：https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/releases\n解压出来之后，修改 config.json\n配置 \u0026quot;clientURL\u0026quot;: \u0026quot;\u0026quot;,\n设置为 前面开启的 Web UI 地址和端口，比如\n1 \u0026#34;clientURL\u0026#34;: \u0026#34;http://localhost:8020\u0026#34;, 之后双击 qBittorrent-ClientBlocker.exe 即可运行。\n快捷方式启动 这两个每次都分开启动，有点繁琐，可以新建快捷方式启动，点击之后可以同时启动。\n桌面右键 -\u0026gt; 新建快捷方式，修改以下内容之后，再填入\n1 C:\\Windows\\System32\\cmd.exe /c \u0026#34;(tasklist | findstr qBittorrent-ClientBlocker || start D:\\download_tool\\qBittorrent-ClientBlocker-3.6-windows-amd64\\qBittorrent-ClientBlocker.exe --hidewindow) \u0026amp;\u0026amp; start D:\\download_tool\\qBittorrent-Enhanced-Edition\\qbittorrent.exe\u0026#34; 需要修改的地方：\nD:\\download_tool\\qBittorrent-ClientBlocker-3.6-windows-amd64\\qBittorrent-ClientBlocker.exe 修改为自己的路径\nD:\\download_tool\\qBittorrent-Enhanced-Edition\\qbittorrent.exe 修改为自己的路径\n点击 下一步，输入自己的快捷方式的名称，比如\n1 qBittorrent and qBittorrent-ClientBlocker 快捷方式 点击完成即可。\n如果不喜欢默认的图标，可以 鼠标移动到 快捷方式上，右键 -\u0026gt; 属性，找到 更改图标，设置 qBittorrent所在的图标，比如\n1 D:\\download_tool\\qBittorrent-Enhanced-Edition\\qbittorrent.exe ","date":"2025-01-09T18:50:27+08:00","permalink":"https://blog.seektao.cc/p/250109185027/","title":"Windows安装qBittorrent(EE)，qBittorrent-ClientBlocker"},{"content":"简介 封禁某些不友好的 IP/客户端，保护 BT 网络，保护宽带\n安装 下载地址：https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/releases\narmv7：https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/releases/download/3.6/qBittorrent-ClientBlocker-3.6-linux-armv7.tar.gz\n创建文件夹\n1 mkdir -p /opt/qBittorrent-ClientBlocker 解压文件\n1 tar -zxcvf qBittorrent-ClientBlocker-3.6-linux-armv7.tar.gz -C /opt/qBittorrent-ClientBlocker 修改 config.json\n1 2 cd /opt/qBittorrent-ClientBlocker vim config.json 将 \u0026quot;clientURL\u0026quot;: \u0026quot;\u0026quot;, 修改为自己的 qbittorrent 所在 ip端口，比如\n1 \u0026#34;clientURL\u0026#34;: \u0026#34;http://localhost:8020\u0026#34;, 启动\n1 ./qBittorrent-ClientBlocker 系统服务 1 vim /etc/systemd/system/qbittorrent-clientblocker.service 填入以下内容\n1 2 3 4 5 6 7 8 9 10 11 12 [Unit] Description=qBittorrent-ClientBlocker service Wants=network-online.target After=qbittorrent-nox.service [Service] Type=simple Restart=always ExecStart=/bin/sh -c \u0026#34;cd /opt/qBittorrent-ClientBlocker \u0026amp;\u0026amp; /opt/qBittorrent-ClientBlocker/qBittorrent-ClientBlocker --nochdir\u0026#34; [Install] WantedBy=default.target 启动服务\n1 systemctl start qbittorrent-clientblocker.service 查看服务\n1 systemctl status qbittorrent-clientblocker.service 关闭服务\n1 systemctl stop qbittorrent-clientblocker.service 开机自启\n1 systemctl enable qbittorrent-clientblocker.service ","date":"2025-01-09T14:02:03+08:00","permalink":"https://blog.seektao.cc/p/250109140203/","title":"Linux安装qBittorrent-ClientBlocker"},{"content":"介绍 aria2-pro 是一个配置好的aria2镜像\n官方网址：https://p3terx.com/archives/docker-aria2-pro.html\n安装 docker\n1 2 3 4 5 6 7 8 9 10 11 12 13 docker run -d \\ --name aria2-pro \\ --restart unless-stopped \\ --log-opt max-size=1m \\ --network host \\ -e PUID=$UID \\ -e PGID=$GID \\ -e RPC_SECRET=\u0026lt;TOKEN\u0026gt; \\ -e RPC_PORT=6800 \\ -e LISTEN_PORT=6888 \\ -v $PWD/aria2-config:/config \\ -v $PWD/aria2-downloads:/downloads \\ p3terx/aria2-pro 替换\u0026lt;TOKEN\u0026gt;字段(RPC密钥)即可启动。\ndocker-compose.yml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 version: \u0026#34;3.8\u0026#34; services: Aria2-Pro: container_name: aria2-pro image: p3terx/aria2-pro environment: - PUID=65534 - PGID=65534 - UMASK_SET=022 - RPC_SECRET=aria2 - RPC_PORT=6800 - LISTEN_PORT=6888 - DISK_CACHE=64M - IPV6_MODE=false - UPDATE_TRACKERS=true - CUSTOM_TRACKER_URL= - TZ=Asia/Shanghai volumes: - ${PWD}/aria2-config:/config - ${PWD}/aria2-downloads:/downloads # If you use host network mode, then no port mapping is required. # This is the easiest way to use IPv6 networks. network_mode: host # network_mode: bridge # ports: # - 6800:6800 # - 6888:6888 # - 6888:6888/udp restart: unless-stopped # Since Aria2 will continue to generate logs, limit the log size to 1M to prevent your hard disk from running out of space. logging: driver: json-file options: max-size: 1m # AriaNg is just a static web page, usually you only need to deploy on a single host. AriaNg: container_name: ariang image: p3terx/ariang command: --port 6880 --ipv6 network_mode: host # network_mode: bridge # ports: # - 6880:6880 restart: unless-stopped logging: driver: json-file options: max-size: 1m 替换\u0026lt;TOKEN\u0026gt;字段(RPC密钥)即可启动。\n","date":"2025-01-08T22:37:00+08:00","permalink":"https://blog.seektao.cc/p/250108223700/","title":"docker安装aria2-pro"},{"content":"介绍 家用 linux 服务器没有图形化界面，且是 armv7 结构，安装 qBittorrent\n安装 1 apt update 1 apt install qbittorrent-nox 启动 1 qbittorrent-nox 默认端口： 8080 默认用户：admin 默认密码：adminadmin 配置文件所在位置\n1 ~/.config/qBittorrent 修改端口 1 qbittorrent-nox --webui-port=XXXX 创建系统服务 1 vim /etc/systemd/system/qbittorrent-nox.service 填入以下内容\n1 2 3 4 5 6 7 8 9 10 [Unit] Description=qBittorrent Headless After=network.target [Service] ExecStart=/usr/bin/qbittorrent-nox --webui-port=8020 Restart=always [Install] WantedBy=multi-user.target 启动服务\n1 systemctl start qbittorrent-nox.service 查看服务\n1 systemctl status qbittorrent-nox.service 关闭服务\n1 systemctl stop qbittorrent-nox.service 开机自启\n1 systemctl enable qbittorrent-nox.service ","date":"2025-01-08T20:31:10+08:00","permalink":"https://blog.seektao.cc/p/250108203110/","title":"Linux无图形化界面安装qBittorrent"},{"content":"简介 官网：https://www.rust-lang.org/zh-CN/\n安装 Windows 使用 Rustup（官方推荐）\n1 https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe 跟着操作进行即可，会安装 Visual Studio Installer，空间会占用几个G。\n接着安装 Rust，直接默认即可。\n使用 WSL\n1 curl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh 编辑器 VSCode 插件推荐\nrust-analyzer 语法分析 Error Lens 错误提示 Even Better TOML 美化 toml 文件 Cargo 创建一个新项目\n1 cargo new project 运行项目\n1 cargo run ","date":"2024-12-28T14:01:34+08:00","permalink":"https://blog.seektao.cc/p/241228140134/","title":"Rust安装"},{"content":"众所周知，Windows 的更新很频繁，有时候会在重要的时候更新导致系统卡顿，甚至打断当前的动作，很多介绍的关闭更新教程会导致 Windows 的 store 商店无法使用，并且我也不建议安装其他第三方软件对系统更改（你甚至不知道它会干什么）。\n本次介绍的的方式为”曲线救国“，因为 Windows 本身支持延长时间，但是只能延长5周，我们需要做的就是增加延长更新的时间，让它一直无法更新，通过设置后，你可以延长 1 个月，1 年，10 年，甚至 100 年，这样就达到了“关闭更新”的作用。比如：\n本次使用的是修改注册表的方式，操作的时候请仔细小心！以免删除了系统某些注册表，导致系统出现问题\nWin+R 打开注册表 ，输入\n1 regedit 注册表编辑器地址栏输入\n1 计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WindowsUpdate\\UX\\Settings 在其空白处，右键，选择 新建(N) - DWORD(32位)值(D)\n命名为\n1 FlightSettingsMaxPauseDays 双击新建的项，基数改为 十进制，数值数据表示天数，比如填入 36500，表示支持最大延长 100 年\n保存退出，打开 Windows更新设置，在暂停更新（Windows 10 在高级选项中）那里，就可以选择暂停更新的日子，如果设置了最大100年，现在就可以选择 100年之后。\n如果你想重新开启系统更新，只需要点击继续更新即可。想要再次暂停，只需要设置暂停更新的日志，就是这么简单，就是这么方便。\n","date":"2024-12-23T16:27:47+08:00","permalink":"https://blog.seektao.cc/p/241223162747/","title":"Windows延长更新时间，关闭更新"},{"content":"简介 Windwos 下安装 aria2\n安装 aria2 下载地址：https://github.com/aria2/aria2/releases/\n快速下载：点击我下载aria2-1.37.0-win-64bit-build1.zip\n在 D 盘新建目录 D:\\download_tool\\aria2\n配置文件 使用 配置好的仓库 muyiacc/aria2\n下载解压到 D:\\download_tool\\aria2 同一目录\n配置详情，查看 仓库介绍 即可。\n特别提醒，默认 rpc 密钥为 aria2，也可以修改 aria2.conf 中的 rpc-secret=aria2，也可以注释关闭。\n启动 1 D:/download_tool/aria2/aria2c --conf-path=D:/download_tool/aria2/aria2.conf 系统服务 为了开机自动起，设置系统服务。\n须先安装 nssm , 管理员运行\n1 nssm install aria2 D:/download_tool/aria2/aria2c --conf-path=D:/download_tool/aria2/aria2.conf WebUI - AriaNg 为了方便使用，使用 WebUI。\nAriaNg下载地址：https://github.com/mayswind/AriaNg/releases/download/1.3.8/AriaNg-1.3.8-AllInOne.zip\n下载后，点击 index.html 即可使用浏览器打开。\n把打开的地址收藏书签，即可快速使用。\n如果无法连接，需要检查\naria2 是否启动 AriaNg 是否设置了密钥 设置密钥：AriaNg 设置 -\u0026gt; RPC(localhost:6800) -\u0026gt; Aria2 RPC 密钥\n","date":"2024-12-23T13:32:31+08:00","permalink":"https://blog.seektao.cc/p/241223133231/","title":"Windows安装aria2"},{"content":"日本 1 FUK,OKA,KIX,NRT ","date":"2024-12-19T11:10:58+08:00","permalink":"https://blog.seektao.cc/p/241219111058/","title":"机场三字码"},{"content":" Workers：https://developers.cloudflare.com/workers/\nD1：https://developers.cloudflare.com/d1/\nKV：https://developers.cloudflare.com/kv/\nPages：https://developers.cloudflare.com/pages/\n机场三字码：https://www.cloudflarestatus.com/\n","date":"2024-12-19T11:07:49+08:00","permalink":"https://blog.seektao.cc/p/241219110749/","title":"Cloudflare官方网站"},{"content":"众所周知，Z-library 由于性质的原因，访问地址经常失效，有什么好办法可以获取访问地址呢，根据我的经验，有两种比较好的方式。\n客户端 浏览器插件 浏览器插件 浏览器插件可以探测可用网址，且方便浏览器访问。浏览器插件暂时只支持 Firefox ，通过 Firefox 官方插件仓库是搜索不到的，需要通过已访问网址安装。\n这里给出可用的网址在线安装，由于网址会失效，所以有时效性。\n1 https://1lib.sk/soft/mozilla-addon-latest.xpi?1 通过 Firefox 浏览器访问即可自动安装，安装后点击图标可以访问。\n客户端 客户端会自动探测可用网址，这样就避免了收藏的单一网址失效。\n这里分享客户端安装程序\nWindows: Linux: MacOS(Big Sur (11.0) or later): MacOS(Intel): Android: 链接: https://pan.baidu.com/s/1S9Rzv9yX5homxaXkgprJJA?pwd=bdsa 提取码: bdsa 复制这段内容后打开百度网盘手机App，操作更方便哦\n可用网址 Web\nhttps://z-library.sk\nTOR:\nhttp://bookszlibb74ugqojhzhg2a63w5i2atv5bqarulgczawnbmsb6s6qead.onion\n","date":"2024-11-17T15:15:16+08:00","permalink":"https://blog.seektao.cc/p/241117151516/","title":"Z-library访问方法总结"},{"content":"在使用 vscode debug 启动模拟器的时候，debug console 隔 1 秒就会输出大量的模拟器日志信息，多数都是像下面的内容，键入内容则会生成其他的。\n1 2 3 4 D/EGL_emulation(10388): app_time_stats: avg=502.14ms min=498.97ms max=508.27ms count=3 D/EGL_emulation(10388): app_time_stats: avg=496.50ms min=492.09ms max=500.81ms count=3 D/EGL_emulation(10388): app_time_stats: avg=502.75ms min=501.56ms max=503.94ms count=2 D/EGL_emulation(10388): app_time_stats: avg=500.09ms min=489.25ms max=508.54ms count=3 这个产生的速度之快，连日志打印信息都难以捕捉，网上找了好久都找不到解决办法，\n根据 vscode 自带的日志过滤框使用正则 匹配，比如^.*app_time_stats.*$ 连正常的日志都会被过滤，真是煞费精力。\n最后不写正则了，看到过滤框自带的提示信息，一番摸索，终于解决了。\n这是其解决办法\n1 !app_time_stat,!I/ImeTracker,!D,!W 如果你自己有额外的需要过滤信息，可以仿照上面的写法\n, 表示多个多个规则。\n","date":"2024-11-05T12:02:22+08:00","permalink":"https://blog.seektao.cc/p/241105120222/","title":"VSCode调试控制台隐藏Flutter使用模拟器输出的大量日志"},{"content":"今天介绍的一款浏览器插件，作用时嗅探，下载\n超级好用。\n名字叫 猫抓\n","date":"2024-11-03T23:32:25+08:00","permalink":"https://blog.seektao.cc/p/241103233225/","title":"超级强大的嗅探工具！！！"},{"content":"下一步下一步\u0026hellip;\n连接网络这里，跳过设置网络\nShift + F10 打开命令行\n1 oobe\\byPassNRO.cmd 注意是大写的英文字母 O，而不是数字 0\n执行后会重启\n进行到 网络连接之后，就会出现 我没有Inter网络连接，选择即可跳过\n","date":"2024-11-03T19:24:25+08:00","permalink":"https://blog.seektao.cc/p/241103192425/","title":"Window11安装，跳过网络连接"},{"content":"前言 lx-music，也就是落雪音乐\n之前多平台使用的时候，比如换设备，卸载后重装，数据都会丢失。\n如果需要备份数据需要手动导出。在跨设备操作同步，感觉比较麻烦。\n有没有一个像 网易云音乐，qq 音乐那种账号机制，自动同步歌单，收藏列表呢。跨设备也能自动执行。\n其实落雪音乐是拥有一个同步服务的，早期的时候部署方式不方便，自己尝试部署，最终还是没有解决问题，所以没有安装成功。\n今天突然想起来，然后再次尝试部署，成功了\n本文就带你来如何部署落雪音乐同步服务 lx-music-sync-server。\n安装 docker-compose 使用之前需要进行一些准备操作\n创建文件夹\n1 2 sudo mkdir -p /opt/container/lx-music-sync-server cd /opt/container/lx-music-sync-server-server 新建 config.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 module.exports = { serverName: \u0026#39;My Sync Server\u0026#39;, // 同步服务名称 \u0026#39;proxy.enabled\u0026#39;: false, // 是否使用代理转发请求到本服务器 \u0026#39;proxy.header\u0026#39;: \u0026#39;x-real-ip\u0026#39;, // 代理转发的请求头 原始IP maxSnapshotNum: 10, // 公共最大备份快照数 \u0026#39;list.addMusicLocationType\u0026#39;: \u0026#39;top\u0026#39;, // 公共添加歌曲到我的列表时的方式 top | bottom，参考客户端的设置-列表设置-添加歌曲到我的列表时的方式 users: [ // 用户配置例子，有两种配置格式 // { // name: \u0026#39;user1\u0026#39;, // 用户名，必须，不能与其他用户名重复 // password: \u0026#39;123.def\u0026#39;, // 连接密码，必须，不能与其他用户密码重复，若在外网，务必增加密码复杂度 // maxSnapshotNum: 10, // 可选，最大备份快照数 // \u0026#39;list.addMusicLocationType\u0026#39;: \u0026#39;top\u0026#39;, // 可选，添加歌曲到我的列表时的方式 top | bottom，参考客户端的设置-列表设置-添加歌曲到我的列表时的方式 // }, ], // 所有名称以 env. 开头的配置将解析成环境变量 // \u0026#39;env.PORT\u0026#39;: \u0026#39;9527\u0026#39;, // \u0026#39;env.BIND_IP\u0026#39;: \u0026#39;0.0.0.0\u0026#39;, // ...其他环境变量看Readme.md可用环境变量附录 } 上面的文件是容器内部使用配置文件，自己先创建好，设置用户名和密码，在进行后面的操作之前，请先修改好。\n新建 docker-compose.yml\n1 2 3 4 5 6 7 8 9 10 services: lx-sync: image: lyswhut/lx-music-sync-server container_name: lx-sync restart: unless-stopped ports: - 9527:9527 volumes: - ./lx_sync_data:/server/data - ./config.js:/server/config.js 先启动查看是否有错误\n1 sudo docker compose up 如果没有错误\n1 sudo docker compose up -d 反向代理 Nginx 这里只列举 核心部分\n1 2 3 4 5 6 7 8 9 10 11 12 13 server { # ... location / { proxy_set_header X-Real-IP $remote_addr; # 该头部与config.js文件的 proxy.header 对应 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_pass http://127.0.0.1:9527; proxy_http_version 1.1; # websocket 必须要配置 proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection $connection_upgrade; } } 使用 Windows 具体的设置路径：设置 - 数据同步 - 客户端模式\n设置 服务地址后，启动同步功能即可\n就会在后面默默发光发热了\nAndroid 同 Windows 一样\nLinux ","date":"2024-11-03T16:10:54+08:00","permalink":"https://blog.seektao.cc/p/241103161054/","title":"lx-music落雪音乐同步服务部署"},{"content":"Github https://api.github.com/repos/ + 用户名/仓库\n例如：https://api.github.com/repos/muyiacc/vue-learn\n","date":"2024-11-03T08:35:19+08:00","permalink":"https://blog.seektao.cc/p/241103083519/","title":"API收集"},{"content":"pnpm i 运行时，出现类似如下的操作，\n1 2 3 4 5 6 pnpm : File D:\\develop\\nodejs\\pnpm.ps1 cannot be loaded because running scripts is disabled on this system. For more inform At line:1 char:1 + pnpm i + ~~~~ + CategoryInfo : SecurityError: (:) [], PSSecurityException + FullyQualifiedErrorId : UnauthorizedAccess 这表示脚本运行被禁止了，使用 powershell 查看\n1 Get-ExecutionPolicy 修改为 Get-ExecutionPolicy 可以解决\n1 set-ExecutionPolicy RemoteSigned ","date":"2024-11-02T16:53:07+08:00","permalink":"https://blog.seektao.cc/p/241102165307/","title":"解决pnpm运行时出现错误"},{"content":"快捷键 F12 跳转到方法定义\nAlt + F12 跳转到方法定义\nAlt + F12 向下复制一行\nAlt + F12 向下复制一行\n折叠全部 Ctrl\n","date":"2024-10-30T09:58:09+08:00","permalink":"https://blog.seektao.cc/p/241030095809/","title":"VSCode使用经验"},{"content":"注册入口：https://www.aliyunbaike.com/go/freemail\n","date":"2024-10-27T21:54:01+08:00","permalink":"https://blog.seektao.cc/p/241027215401/","title":"免费阿里企业邮箱"},{"content":"原因 在OpenSSH的sshd服务配置中，UseDNS 参数用于指定是否在用户登录时进行反向DNS查找。具体而言，当 UseDNS 设置为 no 时，sshd服务在用户登录时不会进行反向DNS查找，而设置为 yes 时，sshd服务会尝试进行反向DNS查找。\n反向DNS查找是通过IP地址查找对应的域名的过程。在某些情况下，启用反向DNS查找可能会导致登录延迟，特别是当DNS服务器响应较慢或不可用时。因此，将 UseDNS 设置为 no 可以在一定程度上提高SSH登录的速度，尤其是在网络环境不稳定或DNS配置不正确的情况下。\n在一些安全意识较高的环境中，管理员可能会选择禁用反向DNS查找，以减少潜在的登录延迟，并确保登录过程更加可控。\nGSSAPIAuthentication 是 SSH 服务器配置中的一个参数，用于控制是否启用 GSSAPI（Generic Security Services Application Program Interface）身份验证。GSSAPI 是一种用于网络身份验证的标准接口，通常与 Kerberos 结合使用。\n实战 修改 /etc/ssh/sshd_config\n1 2 3 4 #UseDNS yes 这里把注释打开，并设置值为no UseDNS no #另外需要把GSSAPIAuthentication参数设置为no GSSAPIAuthentication no 如果你的长这样\n1 2 #UseDNS yes GSSAPIAuthentication yes 可以用下面的语句直接替换\n1 2 sudo sed -i \u0026#39;s/#UseDNS yes/UseDNS no/\u0026#39; /etc/ssh/sshd_config sudo sed -i \u0026#39;s/GSSAPIAuthentication yes/GSSAPIAuthentication no/\u0026#39; /etc/ssh/sshd_config 重启sshd服务\n1 2 3 service sshd restart 或者 systemctl restart sshd ","date":"2024-10-25T19:25:45+08:00","permalink":"https://blog.seektao.cc/p/241025192545/","title":"SSH连接虚拟机速度慢解决办法"},{"content":"简述 LazyVim 是一个由 lazy.nvim 支持的 Neovim 安装程序，可以方便地定制和扩展您的配置。\n✨ Features 🔥 Transform your Neovim into a full-fledged IDE 💤 Easily customize and extend your config with lazy.nvim 🚀 Blazingly fast 🧹 Sane default settings for options, autocmds, and keymaps 📦 Comes with a wealth of plugins pre-configured and ready to use ⚡️ Requirements Neovim \u0026gt;= 0.9.0 (needs to be built with LuaJIT)\nGit \u0026gt;= 2.19.0 (for partial clones support)\na Nerd Font(v3.0 or greater) *(optional, but needed to display some icons)*\nlazygit *(optional)*\na C compiler for nvim-treesitter. See here\nfor telescope.nvim (optional)\nlive grep: ripgrep find files: fd a terminal that support true color and undercurl :\nkitty *(Linux \u0026amp; Macos)* wezterm *(Linux, Macos \u0026amp; Windows)* alacritty *(Linux, Macos \u0026amp; Windows)* iterm2 *(Macos)* 安装 Linux/MacOS Make a backup of your current Neovim files:\n1 2 3 4 5 6 7 # required mv ~/.config/nvim{,.bak} # optional but recommended mv ~/.local/share/nvim{,.bak} mv ~/.local/state/nvim{,.bak} mv ~/.cache/nvim{,.bak} Clone the starter\n1 git clone https://github.com/LazyVim/starter ~/.config/nvim Remove the .git folder, so you can add it to your own repo later\n1 rm -rf ~/.config/nvim/.git Start Neovim!\n1 nvim Refer to the comments in the files on how to customize LazyVim.\nWindows Install the LazyVim Starter with PowerShell\nMake a backup of your current Neovim files:\n1 2 3 4 5 # required Move-Item $env:LOCALAPPDATA\\nvim $env:LOCALAPPDATA\\nvim.bak # optional but recommended Move-Item $env:LOCALAPPDATA\\nvim-data $env:LOCALAPPDATA\\nvim-data.bak Clone the starter\n1 git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\\nvim Remove the .git folder, so you can add it to your own repo later\n1 Remove-Item $env:LOCALAPPDATA\\nvim\\.git -Recurse -Force Start Neovim!\n1 nvim Refer to the comments in the files on how to customize LazyVim.\nLinux/MacOS ","date":"2024-10-25T16:29:17+08:00","permalink":"https://blog.seektao.cc/p/241025162917/","title":"LazyVim安装配置"},{"content":"注释 类型转换 转换为布尔类型 如果对非 0 的整数(int 包含正数和负数)进行 bool 类型的转换 那么就全都是 True 在整数的范围内 0 强制类型转换为 bool 类型的结果是 false 将浮点数转换为bool类型的数据的时候 正的浮点数和负的浮点数的结果是true 如果是0.0 那么结果是false 只要字符串中有内容 那么在强制类型转换为bool的时候 那么就返回True 只要列表中有数据 那么强制类型转换为bool的时候 就返回True 只要元组中有数据 那么强制类型转换为bool的时候 就会返回True 只要字典中有内容 那么在强制类型转换为bool的时候 就会返回True 1 2 3 4 5 6 7 8 什么情况下是False print(bool(0)) print(bool(0.0)) print(bool(\u0026#39;\u0026#39;)) print(bool(\u0026#34;\u0026#34;)) print(bool([])) print(bool(())) print(bool({})) ","date":"2024-10-24T19:03:58+08:00","permalink":"https://blog.seektao.cc/p/241024190358/","title":"Python基础语法知识"},{"content":"地址：https://github.com/tibold/svg-explorer-extension\n下载安装之后即可实现：大图模式下预览 svg 格式图片，而不需要一个一个打开浏览器再预览 svg\n","date":"2024-10-24T10:53:59+08:00","permalink":"https://blog.seektao.cc/p/241024105359/","title":"第1期：Windows文件管理预览svg格式图片"},{"content":"本期脚本：copy-paste-url\n顾名思义——用 ctrl + v 将链接复制粘贴到 mpv 中，开始播放视频。这需要一个打开的 mpv 窗口，比如 mpv ——怠速——强制窗口或者已经在播放视频的窗口。此外，这个脚本还使用了 powershell (用于 windows)或 xlip (用于 linux) ，因此也需要安装这个脚本。\n","date":"2024-10-13T17:51:36+08:00","image":"https://s2.loli.net/2024/10/13/r4LPeIDqyvtOFUS.png","permalink":"https://blog.seektao.cc/p/241013175136/","title":"MPV播放器入门指南-脚本-第二期：粘贴播放+MPV播放视频平台的视频"},{"content":"margin\n属性 overflow 溢出\nhidden scroll auto font-style italic oblique border 1 2 3 div { border: 1px solder #000; } 1 2 3 4 5 6 7 8 9 div { width: 200px; height: 200px; background-color: gray; border-top: 5px solid blue; border-right: 5px solid red; border-bottom: 5px solid green; border-left: 5px solid black; } 1 3112202404 ","date":"2024-10-12T11:13:37+08:00","permalink":"https://blog.seektao.cc/p/241012111337/","title":"CSS一文全通"},{"content":"创建项目框架 1 2 3 4 5 6 7 8 # pnpm 本次使用包管理工具，后续都采用 pnpm pnpm create vie # 或者 yarn yarn create vite # 或者 npm npm creat vite 1 2 3 4 # 安装依赖 pnpm install # 启动 pnpm run dev 设置路径别名 src/vite.config.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 import { defineConfig } from \u0026#39;vite\u0026#39; import vue from \u0026#39;@vitejs/plugin-vue\u0026#39; // https://vite.dev/config/ export default defineConfig({ plugins: [vue()], // 设置路径别名 resolve: { alias: { \u0026#39;@\u0026#39;: \u0026#39;/src\u0026#39;, } } }) 为了能实现鼠标点击路径跳转，需要安装 别名路径跳转\n设置路由 删除 App.vue多余内容，HelloWorld.vue，添加 vue-router 依赖\n1 pnpm add vue-router 新建一个组件\nsrc/views/Main.vue\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt;这是Main组件\u0026lt;/h1\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;style scoped\u0026gt; \u0026lt;/style\u0026gt; 设置路由\nsrc/router/index.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import { createRouter, createWebHashHistory } from \u0026#34;vue-router\u0026#34; // 路由规则 const routes = [ { // main 组件 path: \u0026#39;/\u0026#39;, name: \u0026#39;main\u0026#39;, component: () =\u0026gt; import(\u0026#34;@/views/Main.vue\u0026#34;) } ] // 导出路由配置 const router = createRouter({ // 设置路由模式 history: createWebHashHistory(), // 设置路由，同名，后面不用写 routes, }) export default router; 引入路由\nsrc/main.js\n1 2 3 4 5 6 import { createApp } from \u0026#39;vue\u0026#39; import App from \u0026#39;./App.vue\u0026#39; import router from \u0026#39;./router\u0026#39; const app = createApp(App) app.use(router).mount(\u0026#39;#app\u0026#39;) 设置 App.vue\nsrc/App.vue\n1 2 3 4 5 6 7 8 9 10 \u0026lt;script setup\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;router-view\u0026gt;\u0026lt;/router-view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;style \u0026gt; \u0026lt;/style\u0026gt; 访问 localhost:5173 查看是否成功\n引入 element-plus 安装\n1 pnpm install element-plus 按需导入之自动导入\n安装unplugin-vue-components 和 unplugin-auto-import这两款插件\n1 pnpm install -D unplugin-vue-components unplugin-auto-import src/vite.config.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import { defineConfig } from \u0026#39;vite\u0026#39; import vue from \u0026#39;@vitejs/plugin-vue\u0026#39; import AutoImport from \u0026#39;unplugin-auto-import/vite\u0026#39; import Components from \u0026#39;unplugin-vue-components/vite\u0026#39; import { ElementPlusResolver } from \u0026#39;unplugin-vue-components/resolvers\u0026#39; // https://vite.dev/config/ export default defineConfig({ plugins: [ vue(), AutoImport({ resolvers: [ElementPlusResolver()], }), Components({ resolvers: [ElementPlusResolver()], }), ], // 设置路径别名 resolve: { alias: { \u0026#39;@\u0026#39;: \u0026#39;/src\u0026#39;, } } }) 主页添加按钮查看是否成功\nsrc/views/Main.vue\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt;这是Main组件\u0026lt;/h1\u0026gt; \u0026lt;div class=\u0026#34;mb-4\u0026#34;\u0026gt; \u0026lt;el-button\u0026gt;Default\u0026lt;/el-button\u0026gt; \u0026lt;el-button type=\u0026#34;primary\u0026#34;\u0026gt;Primary\u0026lt;/el-button\u0026gt; \u0026lt;el-button type=\u0026#34;success\u0026#34;\u0026gt;Success\u0026lt;/el-button\u0026gt; \u0026lt;el-button type=\u0026#34;info\u0026#34;\u0026gt;Info\u0026lt;/el-button\u0026gt; \u0026lt;el-button type=\u0026#34;warning\u0026#34;\u0026gt;Warning\u0026lt;/el-button\u0026gt; \u0026lt;el-button type=\u0026#34;danger\u0026#34;\u0026gt;Danger\u0026lt;/el-button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;style scoped\u0026gt;\u0026lt;/style\u0026gt; 效果展示：\n","date":"2024-10-12T08:51:29+08:00","permalink":"https://blog.seektao.cc/p/241012085129/","title":"Vue3实战"},{"content":"数据库 查看所有数据库\n1 \\l 切换数据库\n1 \\c 数据库名 查看当前数据库\n1 SELECT current_database(); 表 查看所有表\n1 \\dt 查看特定数据表的结构\n1 \\d 表名 查看当前模式下的所有表\n1 \\dt * 查看特定数据表的结构\n1 \\d 表名 查看表的详细信息\n1 \\d+ 表名 查看特定数据表的结构\n1 \\d 表名 ","date":"2024-10-11T22:42:04+08:00","permalink":"https://blog.seektao.cc/p/241011224204/","title":"Postgres之PSQL使用"},{"content":"插件：\nScala Syntax (official) Scala (Metals) ","date":"2024-10-09T21:30:26+08:00","permalink":"https://blog.seektao.cc/p/241009213026/","title":"VS Code配置scala环境"},{"content":"常用快捷键 f 全屏 ecs 关闭控制台，退出全屏 q 停止播放并退出 Q 保存当前播放信息，停止播放并退出，如果重新播放，尽可能恢复之前保存的播放信息 9 或 / 调小音量 0 或 * 调大音量 m 静音，再按 取消静音 j 下一个字幕轨 J 上一个字幕轨 [ 播放速度减小10% ] 播放速度增加10% backspace 将速度重置为正常 space 或 p 暂停，再按取消暂停 o 或 P 显示OSD（屏幕显示），包括 当前播放时间，总时间，播放进度，进度条 O 持续显示当前播放时间，总时间，播放进度 . 点击逐帧播放下一帧，长按连续播放 , 点击逐帧播放上一帧，长按连续播放 l 设置循环段，第一次按下是循环开始点，第二次按下是循环结束点，第三次是清除循环 L 切换为全局循环 快捷键及图示 快捷键 中文 英文 LEFT and RIGHT 向后/向前跳转5秒。Shift+箭头进行1秒精确跳转（见\u0026ndash;hr-seek）。 Seek backward/forward 5 seconds. Shift+arrow does a 1 second exact seek (see \u0026ndash;hr-seek). UP and DOWN 向前/向后跳转1分钟。Shift+箭头进行5秒精确跳转（见\u0026ndash;hr-seek）。 Seek forward/backward 1 minute. Shift+arrow does a 5 second exact seek (see \u0026ndash;hr-seek). Ctrl+LEFT and Ctrl+RIGHT 跳转到上一个/下一个字幕。受一些限制，可能并不总是有效；参见sub-seek命令。 Seek to the previous/next subtitle. Subject to some restrictions and might not always work; see sub-seek command. Ctrl+Shift+LEFT and Ctrl+Shift+RIGHT 调整字幕延迟，以便下一个或上一个字幕立即显示。这对于将字幕与音频同步特别有用。 Adjust subtitle delay so that the next or previous subtitle is displayed now. This is especially useful to sync subtitles to audio. [ and ] 将当前播放速度减小/增加10%。 Decrease/increase current playback speed by 10%. { and } 当前播放速度减半/加倍。 Halve/double current playback speed. BACKSPACE 将播放速度重置为正常。 Reset playback speed to normal. Shift+BACKSPACE 撤销上次跳转。仅当播放列表条目未更改时有效。再次按下将返回到原始位置。有关详细信息，请参阅revert-seek命令。 Undo the last seek. This works only if the playlist entry was not changed. Hitting it a second time will go back to the original position. See revert-seek command for details. Shift+Ctrl+BACKSPACE 标记当前位置。然后Shift+BACKSPACE将使用该标记位置作为还原位置（一旦您跳回，标记将被重置）。您可以使用此功能在文件中进行跳转，然后返回到您离开的确切位置。 Mark the current position. This will then be used by Shift+BACKSPACE as revert position (once you seek back, the marker will be reset). You can use this to seek around in the file and then return to the exact position where you left off. \u0026lt; and \u0026gt; 在播放列表中向后/向前。 Go backward/forward in the playlist. ENTER 在播放列表中向前。 Go forward in the playlist. p and SPACE 暂停（再次按下取消暂停）。 Pause (pressing again unpauses). . 向前一步。按一次将暂停，每连续按下一次将播放一帧，然后再次进入暂停模式。 Step forward. Pressing once will pause, every consecutive press will play one frame and then go into pause mode again. , 向后一步。按一次将暂停，每连续按下一次将倒放一帧，然后再次进入暂停模式。 Step backward. Pressing once will pause, every consecutive press will play one frame in reverse and then go into pause mode again. q 停止播放并退出。 Stop playing and quit. Q 类似于q，但存储当前播放位置。如果可能的话，稍后再次播放相同的文件将在旧的播放位置继续播放。请参阅RESUMING PLAYBACK。 Like q, but store the current playback position. Playing the same file later will resume at the old playback position if possible. See RESUMING PLAYBACK. / and * 减小/增大音量。 Decrease/increase volume. 9 and 0 减小/增大音量。 Decrease/increase volume. m 静音。 Mute sound. _ 循环浏览可用的视频轨道。 Cycle through the available video tracks. # 循环浏览可用的音频轨道。 Cycle through the available audio tracks. E 循环浏览可用的版本。 Cycle through the available Editions. f 切换全屏（另请参阅\u0026ndash;fs）。 Toggle fullscreen (see also \u0026ndash;fs). ESC 退出全屏模式。 Exit fullscreen mode. T 切换置顶（另请参阅\u0026ndash;ontop）。 Toggle stay-on-top (see also \u0026ndash;ontop). w and W 减小/增大平移和扫描范围。当前e键目前执行相同操作，但不建议使用。 Decrease/increase pan-and-scan range. The e key does the same as W currently, but use is discouraged. o and P 在OSD上显示进度条、已用时间和总持续时间。 Show progression bar, elapsed time and total duration on the OSD. O 在OSD状态之间切换正常和播放时间/持续时间。 Toggle OSD states between normal and playback time/duration. v 切换字幕可见性。 Toggle subtitle visibility. j and J 循环浏览可用的字幕。 Cycle through the available subtitles. z and Z 通过+/- 0.1秒调整字幕延迟。当前x键执行相同操作，但不建议使用。 Adjust subtitle delay by +/- 0.1 seconds. The x key does the same as Z currently, but use is discouraged. l 设置/清除A-B循环点。有关详细信息，请参阅ab-loop命令。 Set/clear A-B loop points. See ab-loop command for details. L 切换无限循环。 Toggle infinite looping. Ctrl++ and Ctrl+- 通过+/- 0.1秒调整音频延迟（A/V同步）。 Adjust audio delay (A/V sync) by +/- 0.1 seconds. Shift+g and Shift+f 通过+/- 10%调整字幕字体大小。 Adjust subtitle font size by +/- 10%. u 在SSA/ASS字幕中切换仅应用\u0026ndash;sub-ass-*覆盖（默认）和几乎完全覆盖它们的常规字幕样式。有关更多信息，请参阅\u0026ndash;sub-ass-override。 Switch between applying only \u0026ndash;sub-ass-* overrides (default) to SSA/ASS subtitles, and overriding them almost completely with the normal subtitle style. See \u0026ndash;sub-ass-override for more info. V 切换字幕VSFilter纵横比兼容模式。有关更多信息，请参阅\u0026ndash;sub-ass-vsfilter-aspect-compat。 Toggle subtitle VSFilter aspect compatibility mode. See \u0026ndash;sub-ass-vsfilter-aspect-compat for more info. r and R 上/下移动字幕。当前t键执行相同操作，但不建议使用。 Move subtitles up/down. The t key does the same as R currently, but use is discouraged. s 拍摄截图。 Take a screenshot. S 拍摄截图，不带字幕。（这取决于VO驱动程序支持与否。） Take a screenshot, without subtitles. (Whether this works depends on VO driver support.) Ctrl+s 拍摄截图，如窗口显示（带字幕、OSD和缩放视频）。 Take a screenshot, as the window shows it (with subtitles, OSD, and scaled video). PGUP and PGDWN 跳转到上一个/下一个章节的开始。在大多数情况下，“上一个”实际上将会到达当前章节的开始；请参阅\u0026ndash;chapter-seek-threshold。 Seek to the beginning of the previous/next chapter. In most cases, \u0026ldquo;previous\u0026rdquo; will actually go to the beginning of the current chapter; see \u0026ndash;chapter-seek-threshold. Shift+PGUP and Shift+PGDWN 向后或向前跳转10分钟。（这曾经映射到不带Shift的PGUP/PGDWN。） Seek backward or forward by 10 minutes. (This used to be mapped to PGUP/PGDWN without Shift.) d 激活/停用去隔行。 Activate/deactivate deinterlacer. A 循环切换宽高比覆盖。 Cycle aspect ratio override. Ctrl+h 切换硬件视频解码开/关。 Toggle hardware video decoding on/off. Alt+LEFT, Alt+RIGHT, Alt+UP, Alt+DOWN 移动视频矩形（平移）。 Move the video rectangle (panning). Alt++ and Alt+- 将Alt与+或-键组合可更改视频缩放。 Combining Alt with the + or - keys changes video zoom. Alt+BACKSPACE 重置平移/缩放设置。 Reset the pan/zoom settings. F8 显示播放列表和其中的当前位置（仅在使用UI窗口时有用，在终端上损坏）。 Show the playlist and the current position in it (useful only if a UI window is used, broken on the terminal). F9 显示音频和字幕流列表（仅在使用UI窗口时有用，在终端上损坏）。 Show the list of audio and subtitle streams (useful only if a UI window is used, broken on the terminal). i and I 显示/切换显示有关当前播放文件的统计信息的叠加层，例如编解码器、帧速率、丢帧数等。有关更多信息，请参阅STATS。 Show/toggle an overlay displaying statistics about the currently playing file such as codec, framerate, number of dropped frames and so on. See STATS for more information. DEL 在OSC之间循环显示可见性：从不/自动（鼠标移动）/始终 Cycle OSC visibility between never / auto (mouse-move) / always ` 显示控制台。（ESC关闭它。有关CONSOLE的详细信息，请参阅CONSOLE。） Show the console. (ESC closes it again. See CONSOLE.) 1 and 2 调整对比度。 Adjust contrast. 3 and 4 调整亮度。 Adjust brightness. 5 and 6 调整伽马值。 Adjust gamma. 7 and 8 调整饱和度。 Adjust saturation. Alt+0 (and Command+0 on macOS) 将视频窗口调整为原始大小的一半。 Resize video window to half its original size. Alt+1 (and Command+1 on macOS) 将视频窗口调整为其原始大小。 Resize video window to its original size. Alt+2 (and Command+2 on macOS) 将视频窗口调整为其原始大小的两倍。 Resize video window to double its original size. Command + f (macOS only) 切换全屏（另请参阅\u0026ndash;fs）。 Toggle fullscreen (see also \u0026ndash;fs). PAUSE 暂停。 Pause. STOP 停止播放并退出。 Stop playing and quit. PREVIOUS and NEXT 向后/向前跳转1分钟。 Seek backward/forward 1 minute. ZOOMIN and ZOOMOUT 更改视频缩放。 Changes video zoom. ","date":"2024-10-09T15:58:09+08:00","image":"https://s2.loli.net/2024/10/09/wezYV4D5Q8J36HT.png","permalink":"https://blog.seektao.cc/p/241009155809/","title":"MPV播放器入门指南-快捷键"},{"content":"安装 Windows： 通过 npm 安装 1 npm install --global yarn 下载安装程序安装 下载地址：https://classic.yarnpkg.com/latest.msi\n通过 Chocolatey 安装 1 choco install yarn 通过 Scoop 安装 1 scoop install yarn Linux： 通过 npm 安装 1 npm install --global yarn 下载安装程序安装 Debian / Ubuntu 1 2 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \u0026#34;deb https://dl.yarnpkg.com/debian/ stable main\u0026#34; | sudo tee /etc/apt/sources.list.d/yarn.list 1 sudo apt update \u0026amp;\u0026amp; sudo apt install yarn CentOS / Fedora / RHE 1 curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo 1 2 3 sudo yum install yarn ## OR ## sudo dnf install yarn Arch Linux 1 pacman -S yarn MacOS： 通过 npm 安装 1 npm install --global yarn 下载安装程序安装 1 brew install yarn 安装脚本 1 curl -o- -L https://yarnpkg.com/install.sh | bash 使用 ","date":"2024-10-08T08:29:30+08:00","permalink":"https://blog.seektao.cc/p/241008082930/","title":"yarn安装使用"},{"content":"最近有安装字体的需求，需要寻找一款字体管理软件\n在搜寻之下，找到了一款免费，现代化的字体管理软件：FontBase\n官网：https://fontba.se/\n预览：\n","date":"2024-10-07T17:07:49+08:00","permalink":"https://blog.seektao.cc/p/241007170749/","title":"Windows上字体管理软件：FontBase"},{"content":"Go原生没有提供切片在指定索引添加元素或切片的方法，只有一个内置函数 apped()\n所以采用 apped() 实现 在指定索引插入元素\n以下为代码及分析\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 // append() 从中间下标i插入元素 aslice = []int{1, 2, 3, 4, 5} i := 3 // 下标 i newElement := 10 // 新的元素 /* 拆解步骤： 1. appen(a, b)：追加b元素到一个a切片 2. 为了实现从中间添加，把原来的分为两部分： 第一部分是 下标 i 前面的 记为 a 第二部分是 下标 i 后面的 3. 第二部分 再使用 appen() 和 下标 i 的元素 组成 一个新的切片 记为 b 4. 将 第一部分 a 和 新的切片 b 组成 数组 c */ a := aslice[:i] // 第一部分 a b := append([]int{newElement}, aslice[i:]...) c := append(a, b...) fmt.Println(\u0026#34;原来的切片：\u0026#34;, aslice) // 原来的数组： [1 2 3 4 5] fmt.Println(\u0026#34;新的切片\u0026#34;, c) // 新的数组 [1 2 3 10 4 5] // 简写为一个 newSlice := append(aslice[:i], append([]int{newElement}, aslice[i:]...)...) fmt.Println(\u0026#34;简写：\u0026#34;, newSlice) // 简写： [1 2 3 10 4 5] fmt.Println(\u0026#34;固定格式为：append(切片[:下标], append(新的元素, 切片[下标:]...)...)\u0026#34;) // 案例： 在切片aa []int{24,21,325,208,2370,32,65,321} 索引 index 为 5 处 新增一个切片bb []int{1,2,3} aa := []int{24, 21, 325, 208, 2370, 32, 65, 321} index := 5 bb := []int{1, 2, 3} aa = append(aa[:index], append(bb, aa[index:]...)...) fmt.Println(aa) // [24 21 325 208 2370 1 2 3 32 65 321] 封装为函数\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // Insert 泛型函数，在切片中指定位置插入新元素或切片 func Insert[T any](slice []T, index int, value any) []T { size := len(slice) if index \u0026lt; 0 || index \u0026gt; size { return slice } if v, ok := value.(T); ok { slice = append(slice[:index], append([]T{v}, slice[index:]...)...) return slice } if v, ok := value.([]T); ok { slice = append(slice[:index], append(v, slice[index:]...)...) return slice } return slice } 调用\n1 2 3 4 5 strSlice := append([]string{\u0026#34;apple\u0026#34;, \u0026#34;pear\u0026#34;}, \u0026#34;orange\u0026#34;) fmt.Println(strSlice) strSlice = Insert(strSlice, 2, \u0026#34;hahaha\u0026#34;) fmt.Println(strSlice) ","date":"2024-10-07T10:57:58+08:00","permalink":"https://blog.seektao.cc/p/241007105758/","title":"Go切片在指定索引插入数组的的固定写法"},{"content":"用户管理 新建用户\n1 2 # -m 创建用户目录 useradd -m username 设置密码\n1 passwd username 将用户添加到 sudo 组，使用 visudo\n1 visudo 追加一行 username ALL=(ALL:ALL) NOPASSWD:ALL，NOPASSWD表示使用 sudo 时不用输入密码，如果需要每次输入密码，可以改为 ALL\n如下：\n1 2 3 # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) ALL username ALL=(ALL:ALL) NOPASSWD:ALL 切换默认 shell 为 bash\n1 chsh -s /bin/bash 重新登录使shell切换生效！\n安装 bash-it\n1 git clone --depth=1 https://github.com/muyiacc/bash-it.git ~/.bash_it \u0026amp;\u0026amp; ~/.bash_it/install.sh \u0026amp;\u0026amp; source ~/.bashrc 更新语言环境 locale 查看当前的 locale 设置\n1 locale 列出系统上已经启用的所有 locale。\n1 locale -a 如果没有想要的语言，需要编辑 /etc/locale.gen，启用新的 locale 支持\n1 sudo vim /etc/locale.gen 比如取消 en_US.UTF-8 UTF-8 前的注释，保存退出\n重新生成配置文件\n1 sudo local-gen 设置默认的 locale，默认配置文件的位置在 /etc/default/locale，使用 update-locale配置\n1 sudo update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 更新当前会话的 locale\n1 source /etc/default/locale 再次检查 locale，如果没有更改，注销重新登录查看\n1 locale 总结：\nlocal：查看当前 locale locale-gen：生成 locale 配置 update-locale 是一个用于更新系统 locale 设置的命令行工具，通常在基于 Debian 的 Linux 发行版（如 Ubuntu）中使用。它可以简化 locale 的配置过程，自动更新相关的环境变量和配置文件。 ","date":"2024-10-06T11:09:05+08:00","permalink":"https://blog.seektao.cc/p/241006110905/","title":"Linux基础配置"},{"content":"有时候需要在 Linux 处理数据，Linux上有三种命令行工具：\nawk：一种强大的文本处理工具，常用于模式匹配和数据提取。 sed：流编辑器，用于对文本进行基本的编辑和转换，适合批量处理文件内容。 grep：用于搜索文本文件中匹配特定模式的行，支持正则表达式。 这三者结合可以很方便的处理和分析数据，是 Linux 系统管理员和开发者的重要工具。 ","date":"2024-10-05T16:34:47+08:00","permalink":"https://blog.seektao.cc/p/241005163447/","title":"Linux三剑客awk、sed、grep"},{"content":"安装 Linux Debian / Ubuntu\n1 2 3 4 5 6 7 8 9 10 11 # Create the file repository configuration: sudo sh -c \u0026#39;echo \u0026#34;deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\u0026#34; \u0026gt; /etc/apt/sources.list.d/pgdg.list\u0026#39; # Import the repository signing key: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - # Update the package lists: sudo apt-get update # Install the latest version of PostgreSQL. # If you want a specific version, use \u0026#39;postgresql-12\u0026#39; or similar instead of \u0026#39;postgresql\u0026#39;: sudo apt-get -y install postgresql-15 Windows 略\n目录结构 1 2 3 4 5 6 7 8 9 10 postgresql └── 15 └── main ├── conf.d ├── environment ├── pg_ctl.conf ├── pg_hba.conf ├── pg_ident.conf ├── postgresql.conf └── start.conf 结构说明： postgresql：这是 PostgreSQL 数据库的根目录，通常包含所有版本的数据库配置和数据文件。 15：表示 PostgreSQL 的版本号。在此例中是版本 15。 main：这是数据库集群的名称，通常是默认集群的名称。一个 PostgreSQL 实例可以有多个数据库集群。 目录和文件： conf.d：这个目录通常用于存放额外的配置文件，允许用户将配置拆分为多个文件，方便管理。 environment：这个文件可能包含环境变量的设置，用于配置数据库的运行环境。 pg_ctl.conf：包含 pg_ctl 命令的配置选项，pg_ctl 是用于控制 PostgreSQL 实例的工具。 pg_hba.conf：该文件用于配置客户端认证，定义哪些用户、从哪些主机可以连接到数据库，以及使用何种认证方法。 pg_ident.conf：用于配置用户身份映射，可以将操作系统用户映射到数据库用户。 postgresql.conf：这是 PostgreSQL 的主配置文件，包含数据库的各种设置，如内存、连接限制、日志记录等。 start.conf：可能包含启动相关的配置，具体内容依赖于 PostgreSQL 的设置和使用。 配置远程连接 修改postgresql.conf 找到postgresql.conf文件（通常位于/etc/postgresql/版本/main/下），并进行编辑。\n1 sudo nano /etc/postgresql/版本/main/postgresql.conf 找到以下行：\n1 #listen_addresses = \u0026#39;localhost\u0026#39; 修改为：\n1 listen_addresses = \u0026#39;*\u0026#39; 这将允许所有IP地址连接到您的数据库。\n修改pg_hba.conf 再次，找到pg_hba.conf文件，并进行编辑。\n1 sudo nano /etc/postgresql/版本/main/pg_hba.conf 在文件末尾添加以下行，允许所有IP地址通过密码连接：\n1 host all all 0.0.0.0/0 scram-sha-256 初次使用 安装完成之后，如何进入像 MySQL 那样的命令行，和数据库交互？\nPostgres 提供了一个终端工具 psql ，在终端输入\n1 psql -U postgres ","date":"2024-10-05T09:42:40+08:00","permalink":"https://blog.seektao.cc/p/241005094240/","title":"Postgres安装，配置"},{"content":"Undetectable 推荐\nDolphin Anty 时间一长需要登陆，如果忘记了密码很不友好。\nHubstudio 每天只能打开20次\nGoLogin 付费\nVMLogin 付费\nIncogniton 更新下载不下来\n","date":"2024-10-04T15:55:49+08:00","permalink":"https://blog.seektao.cc/p/241004155549/","title":"指纹浏览器"},{"content":"版本：131.0\n地址栏输入 about:config\n寻找\nsidebar.verticalTabs设置 true sidebar.revamp设置 true ","date":"2024-10-03T21:37:28+08:00","permalink":"https://blog.seektao.cc/p/241003213728/","title":"Firefox开启垂直标签页"},{"content":"Nginx 安装和配置 信息\n本次以 Debian 为例：如果不是Debian，请参考：官方教程安装，如果已经安装Nginx，可跳过\n前提条件：\n1 sudo apt install curl gnupg2 ca-certificates lsb-release debian-archive-keyring 导入密钥，验证包的正确性：\n1 2 curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\ | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg \u0026gt;/dev/null 验证下载的文件是否包含正确的密钥：\n1 gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg 输出应包含完整指纹573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62如下:\npub rsa2048 2011-08-19 [SC] [expires: 2024-06-14] 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 uid nginx signing key signing-key@nginx.com\n如果指纹不同，删除文件。\n二选一：\n要为稳定的 nginx 包设置 apt 存储库，请运行以下命令： 1 2 3 echo \u0026#34;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/nginx.list 如果希望使用 mainline nginx 包，请改为运行以下命令: 1 2 3 echo \u0026#34;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/nginx.list 设置存储库固定，使用Nginx官方的软件包而不是发行版提供的软件包：\n1 2 echo -e \u0026#34;Package: *\\nPin: origin nginx.org\\nPin: release o=nginx\\nPin-Priority: 900\\n\u0026#34; \\ | sudo tee /etc/apt/preferences.d/99nginx 要安装 nginx，请运行以下命令:\n1 2 sudo apt update sudo apt install nginx Certbot安装 （1）安装snap\ncertbot官方已经说了，各个发行版安装的certbot版本落后，功能不全，推荐我们使用snap安装，我之前就是用的是apt安装，后来一堆问题，血的教训！！\n1 2 3 4 5 6 7 8 # 安装snap sudo apt update sudo apt install snapd # 重启系统 # 安装core sudo snap install core sudo snap refresh core （2）安装certbot\n安装之前确保没有其他方式安装的certbot 如：apt，pip\n可通过这条命令查看 whereis certbot 如果有，卸载它们 sudo apt remove certbot sudo pip uninstall certbot\n1 2 sudo snap install --classic certbot sudo ln -s /snap/bin/certbot /usr/bin/certbot （3）查看版本\n1 sudo certbot --version Certbot 插件 nginx 使用snap安装的版本是已经有的，申请方法为：\n（1）先新建一个 nginx的配置文件，如 /etc/nginx/conf.d/abc.conf\n（2）编辑 abc.conf，填入以下模板，根据自己实际情况修改\n1 2 3 4 5 6 7 8 9 10 11 12 server { listen 80; server_name domain.com; location / { proxy_pass http://127.0.0.1:80; # 替换为你的应用程序地址 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } （3）使用 certbot 的nginx插件申请\n1 2 # 可以先查看哪些可以申请，是否列出了需要的域名 sudo certbot --nginx 额外的，申请前保证域名解析到当前的ip\ncertbot-dns-dnspod 此插件用于dns申请的，好处可以用于申请泛域名证书证书。也就是像 *.seektao.cc这种，一次申请，到处使用，方便至极。\ncertbot-dns-dnspod 是dnspod的插件，默认的certbot是没有的，需要手动安装\n1 2 3 sudo snap install certbot-dns-dnspod sudo snap set certbot trust-plugin-with-root=ok sudo snap connect certbot:plugin certbot-dns-dnspod 安装完成之后新建一个 .ini文件，比如 /etc/certbot/dnspod.ini\n1 2 sudo mkdir /etc/certbot sudo touch /etc/certbot/dnspod.ini 编辑 dnspod.ini，填入下面的内容，点此跳转到dnspod api 申请页面，注意申请的是dnspod token\n1 2 dns_dnspod_api_id = xxxxxxx dns_dnspod_api_token = xxxxxxxxxxxxxbcdef 1 sudo chmod 600 /etc/certbot/dnspod.ini 申请，替换为自己的域名\n1 2 3 4 5 6 7 8 9 10 11 sudo certbot certonly -a dns-dnspod \\ --dns-dnspod-credentials /etc/certbot/dnspod.ini \\ -d \u0026#34;*.yourdomain.com\u0026#34; 接着就是: 输入邮箱， 是否同意注册acme（选Y）， 是否同意发送邮件。。。 接着等待，等待。。就完成了 证书文件保存在 /etc/letsencrypt/live\n1 2 3 4 5 # 其中 [cert name]/privkey.pem：证书的私钥。 [cert name]/fullchain.pem：在大多数服务器软件中使用的证书文件。 [cert name]/chain.pem：在Nginx \u0026gt;=1.3.7 中用于 OCSP stapling。 [cert name]/cert.pem：会破坏许多服务器配置，不应在未进一步阅读文档的情况下使用。 我们用到 privkey.pem，fullchain.pem即可。\n关于 dnspod 申请ssl证书就是如此。\ncertbot-dns-cloudflare 1 2 3 4 5 6 7 8 9 10 11 12 sudo snap install certbot-dns-cloudflare # 如果提示如下错误信息，输入：sudo snap set certbot trust-plugin-with-root=ok # 接着重新执行 sudo snap install certbot-dns-cloudflare error: cannot perform the following tasks: - Run hook prepare-plug-plugin of snap \u0026#34;certbot\u0026#34; (run hook \u0026#34;prepare-plug-plugin\u0026#34;: ----- Only connect this interface if you trust the plugin author to have root on the system. Run `snap set certbot trust-plugin-with-root=ok` to acknowledge this and then run this command again to perform the connection. If that doesn\u0026#39;t work, you may need to remove all certbot-dns-* plugins from the system, then try installing the certbot snap again. -----) 申请api token，点此跳转\n在 /etc/certbot 新建 cloudflare.ini，将下面的值替换为自己申请的api token\n1 2 # Cloudflare API token used by Certbot dns_cloudflare_api_token = xxxxxxxxxxxxxxxxx 建议修改权限\n1 sudo chmod 600 cloudflare.ini 申请方式：将以下的文件和域名替换为自己的\n1 2 3 4 sudo certbot certonly \\ --dns-cloudflare \\ --dns-cloudflare-credentials /etc/certbot/cloudflare.ini \\ -d \u0026#34;*.youdomain.com\u0026#34; certbot-dns-huawei（待编辑） 此插件用于dns申请的，好处可以用于申请泛域名证书证书。也就是像 *.seektao.cc这种，一次申请，到处使用，方便至极。\ncertbot-dns-dnspod 是dnspod的插件，默认的certbot是没有的，需要手动安装\n1 2 3 sudo snap install certbot-dns-dnspod sudo snap set certbot trust-plugin-with-root=ok sudo snap connect certbot:plugin certbot-dns-dnspod 安装完成之后新建一个 .ini文件，比如 /etc/certbot/dnspod.ini\n1 2 sudo mkdir /etc/certbot sudo touch /etc/certbot/dnspod.ini 编辑 dnspod.ini，填入下面的内容，点此跳转到dnspod api 申请页面，注意申请的是dnspod token\n1 2 dns_dnspod_api_id = xxxxxxx dns_dnspod_api_token = xxxxxxxxxxxxxbcdef 1 sudo chmod 600 /etc/certbot/dnspod.ini 申请，替换为自己的域名\n1 2 3 4 5 6 7 8 9 10 11 sudo certbot certonly -a dns-dnspod \\ --dns-dnspod-credentials /etc/certbot/dnspod.ini \\ -d \u0026#34;*.yourdomain.com\u0026#34; 接着就是: 输入邮箱， 是否同意注册acme（选Y）， 是否同意发送邮件。。。 接着等待，等待。。就完成了 证书文件保存在 /etc/letsencrypt/live\n1 2 3 4 5 # 其中 [cert name]/privkey.pem：证书的私钥。 [cert name]/fullchain.pem：在大多数服务器软件中使用的证书文件。 [cert name]/chain.pem：在Nginx \u0026gt;=1.3.7 中用于 OCSP stapling。 [cert name]/cert.pem：会破坏许多服务器配置，不应在未进一步阅读文档的情况下使用。 我们用到 privkey.pem，fullchain.pem即可。\n关于 dnspod 申请ssl证书就是如此。\n自动续期 自动续期添加一个定时任务即可\n1 2 3 4 5 # 设置定时任务 sudo crontab -e # 每月1号的午夜执行 certbot renew 命令来续订证书 0 0 1 * * /usr/local/bin/certbot renew 需要注意自己的certbot执行路径是否正确 which certbot 可以看到certbot执行路径\n一键脚本 经过上面的步骤，你会发现每新增一个服务，需要\n新增nginx配置文件 配置nginx文件 验证并重启nginx服务 这时候发现服务器每新增一个服务，就需要添加、修改nginx配置文件，域名和端口这些都需要修改，申请ssl证书，这些步骤相当麻烦。\n如果没有一个简单的nginx模板，则会更加复杂繁琐。基于以上需求，我编写了一个脚本。功能：配置好服务后，只需要一条命令即可完成nginx配置，并配置ssl证书\n命令为：\n1 脚本名称 域名 端口号 如果需要获取原文和脚本，关注公众号\u0026quot;寻道之旅\u0026quot;，发送\u0026quot;nginx\u0026quot;获取。\n","date":"2024-10-03T15:11:58+08:00","image":"https://s2.loli.net/2024/10/03/maziQBGhWpPJyVD.png","permalink":"https://blog.seektao.cc/p/241003151158/","title":"SSL证书申请，Nginx配置一条龙服务"},{"content":"sqlite3 dbfile 进入sqlite3终端\n.table 查看表\nDELETE FROM table_name; 清空表数据\n","date":"2024-10-02T08:08:30+08:00","permalink":"https://blog.seektao.cc/p/241002080830/","title":"sqlite3的一些基本操作"},{"content":"安装 安装指南：https://www.rust-lang.org/zh-CN/tools/install\nOn Unix, run curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh in your shell. This downloads and runs rustup-init.sh, which in turn downloads and runs the correct version of the rustup-init executable for your platform. On Windows, download and run rustup-init.exe. ","date":"2024-10-02T06:56:28+08:00","permalink":"https://blog.seektao.cc/p/241002065628/","title":"cargo安装"},{"content":"V2Ray 的更新策略是快速迭代，每周更新(无意外的情况下)。版本号的格式是 vX.Y.Z，如 v2.44.0。v 是固定的字母 v，version 的首字母；X、Y、Z 都是数字，X 是大版本号，每年更新一个大版本(现在是 v4.Y.Z，V2Ray 已经走到了第四个年头)，Y 是小版本，每周五更新一个小版本。Z 是区分正式版和测试版，Z 是 0 代表着是正式版，不是 0 说明是测试版。例如，v4.7.0 是正式版，v4.7.1 是测试版，建议只使用正式版，不手动指定的情况下 V2Ray 的安装脚本也只会安装最新的正式版。\n有些细心的朋友可能会注意到有时候周五 V2Ray 刚发布了一个新版本，次日或过两日又更新一个正式版。出现这种情况是因为周五发布的正式版出现了影响使用严重的 BUG，需要立马发布一个新版本。这种情况比较烦，但是为了保证兼容性、性能优化等又需要保证版本不要太老旧。所以我比较建议在周四更新，选这么一个日子是因为有重大的 BUG 肯定在前面几天就已经修复了，小问题(恐怕都不知道有)的话不会影响使用；而且版本号与最新版相比迟那么一两个也没什么关系。\n","date":"2024-10-02T04:21:32+08:00","permalink":"https://blog.seektao.cc/p/241002042132/","title":"版本号命名规则示例"},{"content":" 内容转自：https://v2raya.org/docs/advanced-application/specify-container-proxy/\n指定 Docker 容器代理 本节介绍如何利用桥接的 docker 容器有单独 IP 的特点，通过 source IP 的限制，对特定 docker 容器进行代理，其他走直连。\n指定 Docker 容器代理 此方法只能适用于 v2rayA 与要控制路由的 Docker 容器在同一台机器的情况。\n透明代理使用 redirect 模式 正如 BT 下载直连 中所列方法，我们可以控制每一个桥接的 Docker 容器的路由。\n当 BT 应用运行在 Docker 时，默认的网络模式使用桥接模式（–network=bridge），此时容器会单独获得一个 IP 地址。而 Docker 的默认桥接网络为 172.17.0.0/16，容器会在该地址段中获取一个 IP 使用。如果我们想让所有桥接容器走直连，而特定容器走代理，可使用 RoutingA 进行控制，例如：\n1 2 3 # 将规则插入到较前位置 source(172.17.0.213) -\u0026gt; proxy source(172.17.0.0/16) -\u0026gt; direct 上述规则使得 172.17.0.213 走代理，而 172.17.0.0/16 段直连。\n当 docker 服务重启时，容器的 IP 地址可能会发生变化，因此需要固定容器的 IP 地址，方法参见 StackOverflow\n上的讨论。\n透明代理使用 tproxy 模式 由于一些限制，在此模式下，所有桥接容器默认直连，因此要走代理的容器需要将网络设为 host，即在容器启动时使用 --network host 参数。\n注意，host 模式下该容器将无法进行端口映射，容器内部监听的端口将直接监听在宿主上，容易引起端口冲突。\n","date":"2024-09-09T02:41:37+08:00","permalink":"https://blog.seektao.cc/p/240909024137/","title":"【v2raya高级应用】指定 Docker 容器代理"},{"content":" 警告\n这是告诫! 请注意!\n信息\n这是引言\n提示\n这是小贴示\n注释\n这是注释\n源码：https://github.com/martignoni/hugo-notice\n","date":"2024-09-05T21:17:06+08:00","permalink":"https://blog.seektao.cc/p/240905211706/","title":"博客更新：新增模块 hugo-notice"},{"content":"刷机过程 略\n基本设置 灯 https://www.bilibili.com/read/cv21700714/\n玩客云这设备有个红、绿、蓝三色led灯，在刷入armbian系统以后，这个灯的颜色就会显示异常，往往是一直显示红色。\n如果要自动动手调整led灯的颜色，控制命令如下（需要root用户执行）\n1 2 3 echo 1 \u0026gt; /sys/class/leds/onecloud:blue:alive/brightness echo 1 \u0026gt; /sys/class/leds/onecloud:green:alive/brightness echo 1 \u0026gt; /sys/class/leds/onecloud:red:alive/brightness echo 1是开，echo 0就是关。现在可以组合出多种颜色，蓝绿、红蓝、红绿、红绿蓝。😄\n但这个设置重启后失效。╮(╯▽╰)╭\n静态ip 查看当前网络连接信息\n1 nmcli connection show 设置静态ip\n1 2 3 4 nmcli connection modify \u0026#34;Wired connection 1\u0026#34; ipv4.addresses 192.168.68.9/24 nmcli connection modify \u0026#34;Wired connection 1\u0026#34; ipv4.gateway 192.168.68.1 nmcli connection modify \u0026#34;Wired connection 1\u0026#34; ipv4.dns 223.5.5.5 nmcli connection modify \u0026#34;Wired connection 1\u0026#34; ipv4.method manual 重新启动网络连接：\n1 2 nmcli connection down \u0026#34;Wired connection 1\u0026#34; nmcli connection up \u0026#34;Wired connection 1\u0026#34; 检查网络配置，确保静态 IP 已成功应用：\n1 nmcli connection show \u0026#34;Wired connection 1\u0026#34; 应用 casaos（非必须不建议） 内存占用很大，没需求不建议安装\n一键安装脚本：\n1 wget -qO- https://get.casaos.io | bash casaos商店源 https://play.cuse.eu.org/Cpe204-Appstore-play-arm.zip\n1panel 管理面板，替代 casaos，内存占用大约 50M，功能齐全\n界面预览：\n安装后系统占用对比\n安装前：\n安装后：\n一键安装脚本\n1 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026amp;\u0026amp; bash quick_start.sh v2raya（必装） 代理工具，web端，默认端口 2017，初次下载速度较慢，耐心等待。\n有了它，何必使用软路由，\n1 wget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/keyrings/v2raya.asc 1 2 echo \u0026#34;deb [signed-by=/etc/apt/keyrings/v2raya.asc] https://apt.v2raya.org/ v2raya main\u0026#34; | sudo tee /etc/apt/sources.list.d/v2raya.list sudo apt update 1 sudo apt install v2raya v2ray ## 也可以使用 xray 包 alist 经典的网盘管理工具\n官网：https://alist.nn.ci/zh/\n源码：https://github.com/alist-org/alist\n二进制文件安装\n下载地址：https://github.com/alist-org/alist/releases/download/v3.37.4/alist-linux-arm-7.tar.gz\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # 下载 mkdir -p /opt/alist wget https://github.com/alist-org/alist/releases/download/v3.37.4/alist-linux-arm-7.tar.gz tar -zxvf alist-linux-arm-7.tar.gz -C /opt/alist # 安装启动 cd /opt/alist chmod +x alist ./alist server # 启动会前台阻塞 # 新开一个终端设置密码 ./alist admin set 密码 # 安装服务 vim /usr/lib/systemd/system/alist.service # 填入一下内容 [Unit] Description=alist After=network.target [Service] Type=simple WorkingDirectory=/opt/alist ExecStart=/opt/alist/alist server Restart=on-failure [Install] WantedBy=multi-user.target docker 安装\n1 docker run -d --restart=unless-stopped -v /opt/alist:/opt/alist/data -p 5246:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=\u0026#34;alist\u0026#34; xhofe/alist-aria2:main docker-compose安装\n1 2 3 sudo mkdir -p /opt/alist cd /opt/alist sudo vim docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 version: \u0026#39;3.3\u0026#39; services: alist: image: \u0026#39;xhofe/alist-aria2:latest\u0026#39; volumes: - \u0026#39;./data:/opt/alist/data\u0026#39; - \u0026#39;/home:/home\u0026#39; - \u0026#39;/root:/root\u0026#39; ports: - \u0026#39;5246:5244\u0026#39; #environment: #- PUID=0 #- PGID=0 #- UMASK=022 container_name: alist restart: unless-stopped 重置密码\n1 docker exec -it alist ./alist admin set \u0026lt;your_password\u0026gt; ddns-go ddns神器，go语言编写，内存占用低。\n源码：https://github.com/jeessy2/ddns-go\nwg-esay 异地组网工具wireguard，wg-easy是简化wireguard部署过程的开源项目，使用docker部署，简单快速上手。\nwireguard 是虚拟加密网络（VPN）,它可以使异地的设备组成一个局域网，换句话说就是可以在外地可以像在家中一样访问家中的设备，ip地址都可以不变。\n源码：https://github.com/wg-easy/wg-easy\n部署方式：\ndocker\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 docker run -d \\ --name=wg-easy \\ -e LANG=de \\ -e WG_HOST=\u0026lt;🚨YOUR_SERVER_IP\u0026gt; \\ -e PASSWORD_HASH=\u0026lt;🚨YOUR_ADMIN_PASSWORD_HASH\u0026gt; \\ -e PORT=51821 \\ -e WG_PORT=51820 \\ -v ~/.wg-easy:/etc/wireguard \\ -p 51820:51820/udp \\ -p 51821:51821/tcp \\ --cap-add=NET_ADMIN \\ --cap-add=SYS_MODULE \\ --sysctl=\u0026#34;net.ipv4.conf.all.src_valid_mark=1\u0026#34; \\ --sysctl=\u0026#34;net.ipv4.ip_forward=1\u0026#34; \\ --restart unless-stopped \\ ghcr.io/wg-easy/wg-easy docker-compose\n1 wget https://github.com/wg-easy/wg-easy/blob/master/docker-compose.yml 密码部分生成：\n1 docker run ghcr.io/wg-easy/wg-easy wgpw YOUR_PASSWORD 如果是 单个 $要改成 $$\n部署后请注意开放对应端口。\n","date":"2024-09-02T18:09:19+08:00","permalink":"https://blog.seektao.cc/p/240902180979/","title":"玩客云onecloud刷机安装armbian系统，安装应用"},{"content":"设置 输入 变为高级模式\n录像\n编码器设置\nCBR（Constant Bit Rate，恒定码率）：\n码率在整个视频中保持不变。 优点：适合实时流媒体，确保带宽稳定，避免视频卡顿。 缺点：在复杂场景中可能导致画质下降，因为码率不随内容复杂度变化。 ABR（Average Bit Rate，平均码率）：\n码率在一定范围内波动，但保持一个平均值。 优点：在保证整体画质的同时，适应不同场景的复杂度。 缺点：可能在某些时刻出现瞬时的画质波动。 VBR（Variable Bit Rate，可变码率）：\n码率根据视频内容的复杂度动态调整。 优点：在复杂场景中使用更高的码率，简单场景中使用更低的码率，从而提高整体画质。 缺点：可能导致文件大小不稳定，不适合实时流媒体。 CRF（Constant Rate Factor，恒定质量因子）：\n主要用于视频编码（如使用 x264 编码器），通过设置一个质量因子来控制输出质量，而不是直接控制码率。 优点：可以保持高质量的同时，文件大小相对较小。质量因子通常在 0-51 之间，值越低，质量越高。 缺点：文件大小不固定，可能导致某些文件过大。 选择合适的码率控制方法取决于你的需求，例如直播的稳定性、录制的画质要求以及带宽条件。\n视频 常用帧率\n10 FPS：每秒显示10帧，适用于低流量视频。 20 FPS：每秒显示20帧，适用于简单的动画或低质量视频。 24 FPS：通常用于电影制作，提供较为平滑的视觉效果。 25 FPS：PAL制式（主要在欧洲和其他地区使用）的标准帧率。 29.97 FPS：NTSC制式（主要在北美和日本使用）的标准帧率，常用于电视广播。 30 FPS：在某些情况下使用，略高于29.97 FPS，适合网络视频。 34 FPS：不常见，可能用于特定应用或实验性视频。 48 FPS：用于高帧率电影，例如一些3D电影，以增强视觉体验。 50 FPS：PAL制式的高帧率，适合动作较快的内容。 59.94 FPS：接近60 FPS，主要用于高质量视频和游戏直播，提供流畅的画面。 60 FPS：高帧率，适合动作视频、游戏等，提供非常流畅的观看体验。 就我录制教学视频来说，一般情况下选择 30帧 即可，某些情况下转为 60 帧\n","date":"2024-09-01T10:09:09+08:00","permalink":"https://blog.seektao.cc/p/240901100943/","title":"OBS使用经验"},{"content":"关闭 http 自动转 https 访问\n地址栏输入 about:config 接受风险并继续 输入 network.stricttransportsecurity.preloadlist 切换为 false network.stricttransportsecurity.preloadlist：将其设置为 false，可以让 Firefox 不使用 HSTS 预加载列表，但这并不完全阻止 HSTS 的使用。\n","date":"2024-08-26T19:08:28+08:00","permalink":"https://blog.seektao.cc/p/240826190828/","title":"firefox个性化配置"},{"content":" 警告\n在使用 openwrt的一段时间，发现问题很多无法解决，遂刷成了 armbian\n综合 关闭防火墙 1 2 3 4 5 # 阻止防火墙服务开机自动启动 /etc/init.d/firewall disable # 关闭防火墙 /etc/init.d/firewall stop openwrt定时任务失效 要在 OpenWrt 系统开机后执行某个脚本，可以通过以下步骤实现：\n创建脚本 首先，创建你希望在开机时执行的脚本。例如，创建一个名为 myscript.sh 的脚本： 1 2 touch /usr/bin/myscript.sh chmod +x /usr/bin/myscript.sh 在脚本中添加你需要执行的命令：\n1 2 3 #!/bin/sh # your commands here echo \u0026#34;Script is running!\u0026#34; \u0026gt;\u0026gt; /tmp/myscript.log 编辑 /etc/init.d/ 目录 在 /etc/init.d/ 目录下创建一个启动脚本。可以命名为 myscript： 1 2 touch /etc/init.d/myscript chmod +x /etc/init.d/myscript 编辑启动脚本 用文本编辑器打开 /etc/init.d/myscript，并添加以下内容： 1 2 3 4 5 6 7 8 #!/bin/sh /etc/rc.common # This script will run at startup START=99 # Start order, higher means later start() { /usr/bin/myscript.sh } 启用启动脚本 使脚本在启动时自动运行： 1 /etc/init.d/myscript enable 重启系统 重启 OpenWrt 系统，确认脚本是否在开机时执行： 1 reboot 检查输出 重启后，可以检查日志文件 /tmp/myscript.log，确认脚本是否成功执行。 通过这些步骤，您可以确保在 OpenWrt 系统开机后自动执行指定的脚本。\n应用 alist 方式1：通过 软件包直接安装\n方式2：docker安装\n1 docker run -d --restart=unless-stopped -v /etc/alist:/opt/alist/data -p 5246:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=\u0026#34;alist\u0026#34; xhofe/alist:latest ddns-go 1 docker run -d --name ddns-go --restart=unless-stopped --net=host -v /opt/ddns-go:/root jeessy/ddns-go -l :9877 -f 600 重置密码：\n1 docker exec -it alist ./alist admin set NEW_PASSWORD webhook plusplus 推送加\n钉钉\n1 2 3 4 5 6 7 { \u0026#34;msgtype\u0026#34;: \u0026#34;markdown\u0026#34;, \u0026#34;markdown\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;你的公网IP变了\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;#### 你的公网IP变了 \\n - IPv4地址：#{ipv4Addr} \\n - 域名 #{ipv4Domains} 更新结果：#{ipv4Result} \\n\\n - IPv6地址：#{ipv6Addr} \\n - 域名 #{ipv6Domains} 更新结果：#{ipv6Result} \\n\u0026#34; } } homepage 1 2 3 4 5 6 7 8 docker run --name homepage \\ -e PUID=1000 \\ -e PGID=1000 \\ -p 8001:3000 \\ -v /etc/homepage:/app/config \\ -v /var/run/docker.sock:/var/run/docker.sock:ro \\ --restart unless-stopped \\ ghcr.io/gethomepage/homepage:latest 问题合集 openwrt重启丢失定时任务 版本：lanlan-op 11.25.2023 by 蓝蓝定制-可爱赞助用户 / LuCI Master git-24.322.44728-ebf6bee\n解决办法：删除 reboot包，系统-软件包-搜索过滤 reboot关键字，删除，重启，再编辑定时任务，再重启查看是否消失。\n","date":"2024-08-26T14:08:06+08:00","permalink":"https://blog.seektao.cc/p/240826140866/","title":"openwrt实践"},{"content":"什么是 curl？ curl 是一个用于从命令行或脚本中与 URL 进行交互的工具。它支持多种协议，包括 HTTP、HTTPS、FTP、SFTP 等，广泛用于数据传输和网络请求。\n安装 curl 在大多数 Linux 发行版中，curl 通常预装。你可以通过以下命令检查是否已安装：\n1 curl --version 如果未安装，可以使用包管理器进行安装：\nDebian/Ubuntu:\n1 sudo apt-get install curl CentOS/RHEL:\n1 sudo yum install curl macOS:\n1 brew install curl 常见用法 基本 GET 请求:\n1 curl http://example.com 下载文件:\n1 curl -O http://example.com/file.txt 保存为指定文件:\n1 curl -o myfile.txt http://example.com/file.txt 跟随重定向:\n1 curl -L http://example.com 发送 POST 请求:\n1 curl -X POST -d \u0026#34;param1=value1\u0026amp;param2=value2\u0026#34; http://example.com/api 添加自定义请求头:\n1 curl -H \u0026#34;Authorization: Bearer \u0026lt;token\u0026gt;\u0026#34; http://example.com 获取 HTTP 头信息:\n1 curl -I http://example.com 常用参数 -s: 静默模式，不显示进度条。 -L: 跟随重定向。 -O: 保存文件为远程文件名。 -o \u0026lt;file\u0026gt;: 保存为指定文件名。 -d \u0026lt;data\u0026gt;: 发送 POST 数据。 -H \u0026lt;header\u0026gt;: 添加请求头。 -u \u0026lt;user:password\u0026gt;: 基本 HTTP 身份验证。 示例 获取网页内容:\n1 curl http://www.example.com 下载并保存文件:\n1 curl -O https://example.com/file.zip 发送 JSON 数据的 POST 请求:\n1 curl -X POST -H \u0026#34;Content-Type: application/json\u0026#34; -d \u0026#39;{\u0026#34;key\u0026#34;:\u0026#34;value\u0026#34;}\u0026#39; http://example.com/api 总结 curl 是一个灵活且强大的工具，适用于各种网络请求和数据传输场景。通过掌握基本用法和参数，你可以高效地进行网络交互。\n","date":"2024-08-19T11:08:08+08:00","permalink":"https://blog.seektao.cc/p/240819110878/","title":"curl，命令行或脚本中与 URL 进行交互的工具"},{"content":"参考文档\nhttps://geekdaxue.co/read/xiaoyulive@wsl/flwxn1\nhttps://learn.microsoft.com/zh-cn/windows/wsl/\n","date":"2024-08-18T21:08:41+08:00","permalink":"https://blog.seektao.cc/p/240818210841/","title":"Windows使用WSL安装Linux系统"},{"content":"LinuxMirrors 是一个 GNU/Linux 更换系统软件源脚本及 Docker 安装脚本\n官网：https://linuxmirrors.cn/ 源码：https://github.com/SuperManito/LinuxMirrors\n一键执行（推荐） 中国大陆（默认） 1 bash \u0026lt;(curl -sSL https://linuxmirrors.cn/main.sh) 中国大陆教育网 1 bash \u0026lt;(curl -sSL https://linuxmirrors.cn/main.sh) --edu 海外地区 1 bash \u0026lt;(curl -sSL https://linuxmirrors.cn/main.sh) --abroad 注意事项：\n需使用 ROOT 用户执行脚本 切换命令为 sudo -i 或 su root。不同系统使用的命令不同，因为有些系统没有在初始安装时为 ROOT 账户设置密码（例如 Ubuntu），故需要使用 sudo -i 命令来切换至 ROOT 建议使用 SSH 远程工具 如果你使用的系统终端界面无法正常显示中文内容那么将导致无法查看交互内容。部分系统会自动开启 SSH 服务，否则请参考启用方法 如果是在新系统上首次执行脚本 当前执行方式依赖 curl 指令获取脚本内容并执行，但部分操作系统没有预装此软件包，届时则会报错 Command not found，安装方法详见常见问题。还可自行复制源码至本地新建任意名称的 .sh 脚本，粘贴源码内容后通过 bash 指令手动执行 下载到本地执行 注意：切换为 root 用户\n1 sudo su - 1 curl -sSL https://linuxmirrors.cn/main.sh -o /usr/local/bin/changeMirrors.sh \u0026amp;\u0026amp; chmod +x /usr/local/bin/changeMirrors.sh 执行脚本\n1 changeMirrors.sh ","date":"2024-08-18T21:08:11+08:00","permalink":"https://blog.seektao.cc/p/240818210871/","title":"LinuxMirrors：一条命令实现各个Linux发行版软件镜像源更换"},{"content":"Bitwarden Gmail Voice v2rayNG SagerNet F-Droid K-9 Mail Telegram X Fluent Reader Orgzly Revived legaoPro Spotify Reex Firefox YouTube Pro Alook OKTV Emby Reqable 抓包软件\nRCX WireGuard Famd M3U8 DeepL YTDLnis Seal OKX pCloud ALCient Alist Github Speedtest LocalSend nPlayer Replit Termux flix Markor Authenticator Outlook Hiddify ChatGPT APKMirror Installer Oblivion PiliPalaX WhatsApp X Instagram Fackbook Lite Microsoft 365 1.1.1.1 TextNow Brave Tor Browser Pikpak ZArchiver Amap Yamby MoeMemos ConnectBot Termius Textr Go Nutstore VLC Spotube VMOS MT Manager 中国移动 RTranslator Dropbox ","date":"2024-08-15T17:08:02+08:00","permalink":"https://blog.seektao.cc/p/240815170896/","title":"手机软件清单-Mi11"},{"content":"在视频编码格式中，avc1、av01 和 vp09 的兼容性和播放支持情况如下：\navc1 (H.264)：\n兼容性非常好，几乎所有的设备和播放器都支持，通常不需要转码。 av01 (AV1)：\n逐渐获得支持，但仍然不如 H.264 广泛。某些较新的设备和浏览器支持 AV1，但老旧设备可能不支持，可能需要转码。 vp09 (VP9)：\n在许多现代浏览器（如 Chrome 和 Firefox）和设备上得到支持，尤其是在流媒体平台（如 YouTube）上，但某些旧设备可能不支持，可能需要转码。 最常用且通常不需要转码的：avc1 (H.264)。 可能需要转码的：av01 (AV1) 和 vp09 (VP9)，具体取决于播放设备的支持情况。\n不同视频编码格式对应的常见文件后缀如下：\navc1 (H.264)：\n常见后缀：.mp4, .mkv, .mov av01 (AV1)：\n常见后缀：.mp4, .mkv（有时可能会使用 .av1，但不太常见） vp09 (VP9)：\n常见后缀：.webm, .mkv 这些后缀虽然与编码格式相关，但实际文件格式可能包含多种编码，具体播放支持还需查看播放器的兼容性。\n音频编码格式对应的常见文件后缀如下：\nMP4 (MPEG-4 Part 14)：\n常见后缀：.mp4（可以包含多种音频编码） M4A (MPEG-4 Audio)：\n常见后缀：.m4a（通常使用 AAC 编码） Opus：\n常见后缀：.opus（专门用于 Opus 编码的音频文件） 这些后缀与编码格式相关，具体的编码格式可能因文件而异。\n","date":"2024-08-04T22:08:45+08:00","image":"https://s2.loli.net/2024/08/04/Chm17KaLquFPU36.webp","permalink":"https://blog.seektao.cc/p/240804220845/","title":"视频编码格式选择和常见后缀，音频编码格式及后缀"},{"content":"概述 g 是管理 go 版本的工具，可以简化 go 的版本管理。\n源码：https://github.com/voidint/g\n安装 自动安装-Linux/MacOS 适用于 bash、zsh\n1 2 # 建议安装前清空`GOROOT`、`GOBIN`等环境变量 curl -sSL https://raw.githubusercontent.com/voidint/g/master/install.sh | bash 1 echo \u0026#34;unalias g\u0026#34; \u0026gt;\u0026gt; ~/.bashrc # 可选。若其他程序（如\u0026#39;git\u0026#39;）使用了\u0026#39;g\u0026#39;作为别名。 1 source \u0026#34;$HOME/.g/env\u0026#34; 自动安装-Windows 目前经我测试有问题，请手动安装\n适用于 pwsh\n1 iwr https://raw.githubusercontent.com/voidint/g/master/install.ps1 -useb | iex 手动安装-Linux/macOS 创建 g 家目录（推荐~/.g目录）\n1 2 mkdir -p ~/.g \\ mkdir -p ~/.g/bin 下载 release 的二进制压缩包，并解压至 g 家目录下的 bin 子目录中（即~/.g/bin目录）\n1 2 3 wget https://github.com/voidint/g/releases/download/v1.7.0/g1.7.0.linux-amd64.tar.gz tar -zxvf g1.7.0.linux-amd64.tar.gz -C ~/.g/bin 将所需的环境变量写入~/.g/env文件\n1 2 3 4 5 6 7 cat \u0026gt;~/.g/env \u0026lt;\u0026lt;\u0026#39;EOF\u0026#39; #!/bin/sh # g shell setup export GOROOT=\u0026#34;${HOME}/.g/go\u0026#34; export PATH=\u0026#34;${HOME}/.g/bin:${GOROOT}/bin:$PATH\u0026#34; export G_MIRROR=https://golang.google.cn/dl/ EOF 将~/.g/env导入到 shell 环境配置文件（如~/.bashrc、~/.zshrc\u0026hellip;）\n1 2 3 4 5 6 cat \u0026gt;\u0026gt;~/.bashrc \u0026lt;\u0026lt;\u0026#39;EOF\u0026#39; # g shell setup if [ -f \u0026#34;${HOME}/.g/env\u0026#34; ]; then . \u0026#34;${HOME}/.g/env\u0026#34; fi EOF 刷新环境变量\n1 source ~/.bashrc # 或source ~/.zshrc 手动安装-Windows 创建目录\n1 %USERPROFILE%/.g/bin 下载 release 的 windows 版本的二进制压缩包\n解压之后放到%USERPROFILE%/.g/bin目录下\n默认二进制文件名是 g.exe, 如果你已经用 g 这个命令已经用作为 git 的缩写，那么你可以把 g.exe 改为其他名字，如 gvm.exe\n将 %USERPROFILE%/.g/bin添加到系统环境变量\n添加GOROOT环境变量\n命令介绍 查询当前可供安装的 go 版本\n1 g lsr 查询当前可供安装的stable状态的 go 版本\n1 g ls-remote stable 安装指定 go 版本1.22.4\n1 g install 1.22.4 查询已安装的 go 版本\n1 g ls 使用已安装的 go 版本\n1 g use 1.19.10 卸载一个已安装的 go 版本\n1 g uninstall 1.19.10 清空 go 安装包文件缓存\n1 g clean 查看 g 版本信息\n1 g version 更新 g 软件本身\n1 g self update 卸载 g 软件本身\n1 g self uninstall 环境变量 环境变量G_MIRROR有什么作用？\n由于中国大陆无法自由访问 Golang 官网，导致查询及下载 go 版本都变得困难，因此可以通过该环境变量指定一个或多个镜像站点（多个镜像站点之间使用英文逗号分隔），g 将从该站点查询、下载可用的 go 版本。已知的可用镜像站点如下：\nGo 官方镜像站：https://golang.google.cn/dl/ 阿里云开源镜像站：https://mirrors.aliyun.com/golang/ 南京大学开源镜像站：https://mirrors.nju.edu.cn/golang/ 华中科技大学开源镜像站：https://mirrors.hust.edu.cn/golang/ 中国科学技术大学开源镜像站：https://mirrors.ustc.edu.cn/golang/ 环境变量G_EXPERIMENTAL有什么作用？\n当该环境变量的值为true时，将开启所有的实验特性。\n环境变量G_HOME有什么作用？\n按照惯例，g 默认会将~/.g目录作为其家目录。若想自定义家目录（Windows 用户需求强烈），可使用该环境变量切换到其他家目录。由于该特性还属于实验特性，需要先开启实验特性开关G_EXPERIMENTAL=true才能生效。特别注意，该方案并不十分完美，因此才将其归类为实验特性，详见#18。\n更多配置 修改 g 的安装目录 需要添加几个环境变量\nG_EXPERIMENTAL=true，开启实验特性支持，请参考：FAQ G_HOME，指向 g 的安装目录 GOROOT，指向 go 的目录 相似项目 gvm https://github.com/moovweb/gvm\ngoenv https://github.com/go-nv/goenv\n","date":"2024-08-03T13:08:35+08:00","image":"https://s2.loli.net/2024/08/03/Rmn1rsdL28pXM6t.jpg","permalink":"https://blog.seektao.cc/p/240803130835/","title":"g，Go的多版本管理工具"},{"content":"开启ssh密码登陆\n1 sudo sed -i \u0026#39;s/^#\\?PasswordAuthentication no/PasswordAuthentication yes/\u0026#39; /etc/ssh/sshd_config 重启ssh\n1 sudo systemctl restart sshd root用户远程登陆\n找到 PermitRootLogin ,修改为 PermitRootLogin yes\n1 sudo vim /etc/ssh/sshd_config 重启ssh\n1 sudo systemctl restart sshd ","date":"2024-08-02T15:08:25+08:00","permalink":"https://blog.seektao.cc/p/240802150825/","title":"Linux开启ssh密码登陆，root用户远程登陆"},{"content":"方式一：SC ","date":"2024-08-01T17:08:46+08:00","permalink":"https://blog.seektao.cc/p/240801170846/","title":"Windows创建系统服务的方式"},{"content":"linux 参考这个 issuse：https://github.com/gaozhangmin/aliyunpan/issues/216\n进入小白杨配置，修改aria2.conf下的async-dns为true\n1 2 cd /opt/小白羊云盘/resources/engine sudo vim aria2.conf 或者一键命令\n1 sudo sed -i \u0026#39;s/async-dns=.*/async-dns=true/\u0026#39; /opt/小白羊云盘/resources/engine/aria2.conf ","date":"2024-07-25T15:07:52+08:00","image":"https://images.muzhe.eu.org/file/1af953e8432104b99561b.png","permalink":"https://blog.seektao.cc/p/2407025/","title":"小白羊盘下载文件出现aria2c错误解决办法"},{"content":"本篇将带你体验各平台观看影视的正确姿势\nWindows ZyPlayer ZyPlayer支持各大平台，Windows、Mac、Linux 系统，详细内容查看官方介绍。\n官方地址：https://github.com/Hiram-Wong/ZyPlayer\n界面预览\n接口下载：https://gitee.com/huanzi989/self-use\u0026mdash;tv-box/raw/master/zyplayer.json\n导入数据的方式：\n设置-基础配置-其他-数据管理-配置导入，选择上面的下载的接口导入\nAndroid OK影视/FongMi https://github.com/FongMi/Release\n官方已列举需要下载的软件，下载对应的版本即可\n接口下载：\nFilmly 网易云出品的影视播放器，目前对接了阿里云盘和百度云盘。\n有安卓、TV、IOS\nhttp://filmly.163.com/\n预览：\nTV OK影视/FongMi 请查看Android下的OK影视/FongMi介绍\nFilmly 请查看Android下的filmly介绍\nLinux ZyPlayer 请查看Windows下的ZyPlayer介绍\n","date":"2024-07-24T15:07:52+08:00","permalink":"https://blog.seektao.cc/p/2407024/","title":"各平台影视观看指南"},{"content":"Debian/Ubuntu 运行这个命令后重启软件\n1 2 sudo apt install linux-headers-$(uname -r) -y ","date":"2024-07-22T15:07:51+08:00","permalink":"https://blog.seektao.cc/p/2407022/","title":"VMware在Linux运行出现VMWare Kernel Module Updater"},{"content":" Ctrl+Shift+P调出命令面板\n输入install 调出 Install Package 选项并回车（第一次需要安装install，安装完成后重复步骤1,2），\n输入sftp，回车安装\nSFTP/FTP按钮位置：\nFile-SFTP/FTP 配置的信息\n配置文件所在的位置\nWindows： Linux：~/.config/sublime-text/Packages/User/sftp_servers 必须将配置文件放在这个位置才能被识别，Windows默认保存的位置即可，Linux需要手动跳转到该目录\n","date":"2024-07-21T15:07:50+08:00","permalink":"https://blog.seektao.cc/p/2407021/","title":"Sublime配置SFTP"},{"content":"Rclone 使用指南 介绍 Rclone 是一个强大的命令行工具，旨在管理和同步文件到多种云存储服务及本地文件系统。它支持超过 70 种不同的云存储提供商，如 Google Drive、Dropbox、Amazon S3、OneDrive 等。\n主要特点：\n多种存储支持：支持超过 70 种不同的云存储服务。 文件同步：可以在本地和云之间同步文件或文件夹。 加密功能：支持文件加密，确保数据安全。 增量备份：只同步变化的文件，节省时间和带宽。 跨平台：可以在 Windows、macOS 和 Linux 上运行。 脚本自动化：可以通过脚本实现定期备份和同步。 官网地址：https://rclone.org\n安装 在 Linux/macOS/BSD 系统上安装 Rclone，可以运行以下命令：\n1 sudo -v ; curl https://rclone.org/install.sh | sudo bash 若要安装测试版，可以运行：\n1 sudo -v ; curl https://rclone.org/install.sh | sudo bash -s beta 配置远程存储（首次使用必须配置） 首次使用 Rclone 时，需要配置远程存储。执行以下命令并根据提示操作：\n1 rclone config 配置文件所在的位置\n1 ~/.config/rclone 复制（即是备份） 将文件从源位置复制到目标位置，跳过相同的文件（根据文件大小、修改时间或 MD5SUM 判断）。\n1 rclone copy source:sourcepath dest:destpath 案例 1 将本地 software 文件夹复制到 alist 下的 aliyunpan/software：\n1 2 # 复制（复制到远程可能需要等待完成）-P 可查看具体信息 rclone copy ~/software alist:/aliyunpan/software -P 复制可当作备份使用，写为脚本文件，需要时运行即可。\n创建脚本文件：\n1 vim ~/bin/rclone_copy_local_software_to_alist_aliyunpan_software.sh 脚本内容如下：\n1 2 #!/bin/bash rclone copy ~/software alist:/aliyunpan/software 修改可执行权限：\n1 chmod +x ~/bin/rclone_copy_local_software_to_alist_aliyunpan_software.sh 提示：\n某些云盘支持秒传，可以快速将一个云盘文件内容复制到另一个云盘。Rclone 使用 copy 复制也是支持的。\n有些云盘上传单个文件大小有限制，例如 115 原石会员最大支持单个文件 5G，超过该大小即使支持秒传也无法使用。为了秒传的可用性，可以添加 --max-size 参数跳过超大的文件，例如 --max-size 500M 跳过超过 500M 的文件。\n例如，将 alist 挂载的 aliyunpan/infotech 复制到 alist 挂载的 115/infotech，并跳过超过 500M 的文件：\n1 rclone copy alist:aliyunpan/infotech/ alist:115/infotech/ --max-size 500M -P 挂载（作为本地文件系统） 挂载功能可以将远程存储挂载到本地，作为本地文件系统使用，支持本地播放视频、打开文件等操作。\n例如，使用 alist 在线播放 115 上的视频可能会失败，但挂载后即可播放。播放器推荐使用 mpv，了解更多可观看以下视频：mpv播放器，安装配置，脚本推荐。\n案例 1 将坚果云挂载到 /home/taoone/jianguoyun：\n创建挂载点：\n1 mkdir -p /home/taoone/jianguoyun 前台挂载（退出终端挂载会取消）：\n1 rclone mount --buffer-size 4M --vfs-cache-mode writes jianguoyun: /home/taoone/jianguoyun 后台挂载：\n1 rclone mount --buffer-size 4M --vfs-cache-mode writes jianguoyun: /home/taoone/jianguoyun --daemon 手动取消挂载：\n1 fusermount -u /home/taoone/jianguoyun 案例 2 挂载 alist 到本地 ~/alist：\n1 mkdir -p ~/alist 前台挂载：\n1 rclone mount --buffer-size 4M --vfs-cache-mode writes alist: ~/alist 后台挂载：\n1 rclone mount --buffer-size 4M --vfs-cache-mode writes alist: ~/alist --daemon 手动取消挂载：\n1 fusermount -u ~/alist 定时任务 设置开机自动挂载：\n1 crontab -e 添加以下内容：\n1 2 # 开机挂载 rclone alist @reboot rclone mount --buffer-size 4M --vfs-cache-mode writes alist: ~/alist --daemon 同步（谨慎使用） 同步功能将 源路径 文件同步到 目的路径，可能会 删除 目的路径文件，因此需要谨慎使用。如果只是需要备份文件，使用 复制 即可。\n单向同步（谨慎使用） 注意：这可能导致数据丢失，首先使用 --dry-run 或 --interactive/-i 进行测试。\n1 rclone sync --interactive SOURCE remote:DESTINATION 案例 1：从远程坚果云同步到本地：\n1 rclone sync jianguoyun:/ /home/taoone/jianguoyun 案例 2：从本地同步到远程坚果云（本地需要存在）：\n1 rclone sync /home/taoone/jianguoyun jianguoyun:/ 双向同步（谨慎使用） ！！！暂处于测试阶段，谨慎使用！！！\n1 rclone bisync remote1:path1 remote2:path2 [flags] Web UI RClone 也提供了 Web UI 界面：\n1 rclone rcd --rc-web-gui 此命令会从 GitHub 下载 UI 文件，因此需要能够访问 GitHub。\n常用命令 列出所有配置： 1 rclone listremotes 查看特定远程的配置： 1 rclone config show \u0026lt;remote_name\u0026gt; 查看所有配置的详细信息： 1 rclone config dump 希望这个指南能帮助你更好地使用 Rclone！\n","date":"2024-07-20T15:07:50+08:00","image":"https://s2.loli.net/2024/08/06/IyYvUsDeqloum4M.webp","permalink":"https://blog.seektao.cc/p/2407020/","title":"RClone，一个命令行程序，管理超过70个云存储产品，可帮助你实现文件备份，云数据镜像，数据迁移，本地存储，云储存合二为一"},{"content":"安装 Linux\n1 curl https://pyenv.run | bash 添加环境变量\n1 vim ~/.bashrc 1 2 3 export PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34; [[ -d $PYENV_ROOT/bin ]] \u0026amp;\u0026amp; export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34; eval \u0026#34;$(pyenv init -)\u0026#34; 新开终端测试\n使用 查看可支持安装的python版本\n1 pyenv install --list 虚拟环境 在使用 pyenv virtualenv 创建虚拟环境时，虚拟环境的目录通常不会自动出现在当前目录中。相反，pyenv 会将虚拟环境存储在其管理的全局目录中。要在当前目录中使用虚拟环境，你需要手动设置。\n以下是确保在当前目录中使用 .venv 的步骤：\n创建虚拟环境： 你可以创建虚拟环境并指定名称（如 .venv）：\n1 pyenv virtualenv 3.11.0 .venv 激活虚拟环境： 在当前目录激活虚拟环境：\n1 pyenv local .venv 检查虚拟环境： 现在你可以在当前目录中使用虚拟环境，验证是否激活：\n1 python --version 额外说明\n虚拟环境的实际文件夹通常位于 ~/.pyenv/versions/ 下。你可以通过 pyenv versions 查看所有的虚拟环境。 使用 pyenv local 命令会在当前目录创建一个 .python-version 文件，其中包含了当前使用的虚拟环境名称。 如果你希望在当前目录中看到 .venv 文件夹，你可以手动创建一个虚拟环境并将其移到当前目录，或使用其他工具如 venv 或 virtualenv。\n","date":"2024-07-17T15:07:48+08:00","permalink":"https://blog.seektao.cc/p/2407017/","title":"pyenv,python的版本管理工具"},{"content":"先看看pmail服务器端口的配置：\n1 2 3 4 5 6 7 8 9 HttpServer Start On Port :80 POP3 With TLS Server Start On Port :995 Smtp Server Port: :25 POP3 Server Start On Port :110 Smtp With SSL Server Port: :465 SMTP 服务器地址：部署的pmail地址 端口：465 账户：邮箱地址 发送者邮箱：通常和邮箱地址一致 访问凭证：登陆账户密码 ","date":"2024-07-16T15:07:47+08:00","permalink":"https://blog.seektao.cc/p/2407016/","title":"PMail配置SMTP，POP客户端"},{"content":"本文介绍一下我自己常用的下载工具\nytDownloader 介绍：这是一个下载youtube视频的桌面工具，提供了简单可用的界面，支持多个操作系统，Windows，MacOS，Linux。\n地址：https://github.com/aandrew-me/ytDownloader\n界面预览：\n","date":"2024-07-16T14:07:50+08:00","permalink":"https://blog.seektao.cc/p/2407026/","title":"常用的下载工具"},{"content":"介绍 通过标准的 OpenAI API 格式访问所有的大模型，开箱即用\n源码：https://github.com/songquanpeng/one-api\n部署 docker 1 2 3 4 5 # 使用 SQLite 的部署命令： docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api # 使用 MySQL 的部署命令，在上面的基础上添加 `-e SQL_DSN=\u0026#34;root:123456@tcp(localhost:3306)/oneapi\u0026#34;`，请自行修改数据库连接参数，不清楚如何修改请参见下面环境变量一节。 # 例如： docker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN=\u0026#34;root:123456@tcp(localhost:3306)/oneapi\u0026#34; -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api docker-compose 1 2 3 4 5 6 7 8 9 10 11 12 version: \u0026#39;3.9\u0026#39; services: one-api: image: justsong/one-api volumes: - \u0026#39;./data:/data\u0026#39; environment: - TZ=Asia/Shanghai ports: - \u0026#39;3000:3000\u0026#39; restart: unless-stopped container_name: one-api 初始账号用户名为 root，密码为 123456。\n","date":"2024-07-15T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407015/","title":"one-api"},{"content":"使用 du 命令查看当前目录下所有子目录的大小，并只显示当前目录的大小\n1 du -sh * 显示当前目录的大小，忽略没有权限的文件夹和文件，并显示隐藏的文件夹和文件\n1 du -sh .[^.]* * 2\u0026gt;/dev/null 显示当前隐藏目录和文件的大小，忽略没有权限的文件夹和文件\n1 du -sh .[^.]* 2\u0026gt;/dev/null 删除除了 cgi-bin 目录之外的所有文件和目录（包括子目录） 对于文件：\n1 find . -type f -not -path \u0026#39;*/cgi-bin/*\u0026#39; -exec rm -f {} + 对于目录：\n1 find . -mindepth 1 -type d -not -path \u0026#39;*/cgi-bin\u0026#39; -exec rm -rf {} + ","date":"2024-07-14T13:07:10+08:00","permalink":"https://blog.seektao.cc/p/linux-command/","title":"Linux常用命令"},{"content":"部署 docker 1 docker run --name new-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/new-api:/data calciumion/new-api:latest docker-compose 1 sudo mkdir -p /opt/new-api 1 2 cd /opt/new-api sudo vim /opt/new-api/docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 version: \u0026#39;3.9\u0026#39; services: new-api: image: \u0026#39;calciumion/new-api:latest\u0026#39; volumes: - \u0026#39;./data:/data\u0026#39; environment: - TZ=Asia/Shanghai ports: - \u0026#39;3000:3000\u0026#39; restart: unless-stopped container_name: new-api 启动\n1 sudo docker compose up 反向代理 Nginx 1 2 3 4 5 6 7 8 9 10 11 12 server { listen 80; server_name domain.com; location / { proxy_pass http://127.0.0.1:3000; # 替换为你的应用程序地址 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } ","date":"2024-07-13T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407013/","title":"new-api，基于one-api"},{"content":"Linux发行版众多，而有些软件并没有提供对应发行版的扩展安装包，导致开始菜单图标/全局搜索/桌面图标需要手动配置，而这些配置文件需要用到的时候又容易忘记配置文件位置和手动编写配置文件繁琐。\n本文就记录一下Linux下没有提供发行版对应的文件扩展名（.deb，.rpm）的安装包怎么配置开始菜单/全局搜索/桌面图标\nDebian 配置文件的位置：\n个人用户：~/.local/share/applications 全局配置：/usr/share/applications ","date":"2024-07-13T19:07:28+08:00","permalink":"https://blog.seektao.cc/p/linux-start-menu/","title":"Linux配置开始菜单，全局搜索，桌面图标"},{"content":" 源码：https://github.com/neovim/neovim\n安装 Linux/MacOS 1 2 3 4 5 # 最新版本 curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz # 指定版本 wget https://github.com/neovim/neovim/releases/download/v0.10.0/nvim-linux64.tar.gz 解压\n1 sudo tar -zxvf nvim-linux64.tar.gz -C /opt/ 创建软连接（可以跳过，使用环境变量的方式）\n1 sudo ln -s /opt/nvim-linux64/bin/nvim /usr/local/bin/nvim 配置环境变量\n1 2 echo \u0026#39;export PATH=\u0026#34;$PATH:/opt/nvim-linux64/bin\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc Windows Windows 8+ is required. Windows 7 or older is not supported.\n下载安装：https://github.com/neovim/neovim/releases/latest/download/nvim-win64.msi\nWinget\nRelease：winget install Neovim.Neovim Chocolatey\nLatest Release: choco install neovim (use -y for automatically skipping confirmation messages) Development (pre-release): choco install neovim --pre 插件 https://github.com/wbthomason/packer.nvim\n主题 https://github.com/folke/tokyonight.nvim\nhttps://github.com/nvim-lualine/lualine.nvim\n","date":"2024-07-12T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407012/","title":"Neovim安装配置"},{"content":" 官方文档：https://www.lunarvim.org/docs/installation\n前置条件 Make sure you have installed the latest version of Neovim v0.9.0+. Have git, make, pip, python, npm, node, cargo and ripgrep installed on your system. Resolve EACCES permissions when installing packages globally to avoid error when installing packages with npm. PowerShell 7+ (for Windows). 安装 Linux/MacOS： 1 bash \u0026lt;(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh) Windows 1 pwsh -c \u0026#34;iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex\u0026#34; ","date":"2024-07-11T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407011/","title":"lunarvim，开箱即用的neovim"},{"content":"软件：howdy\n地址：https://github.com/boltgolt/howdy\nDebian系列建议使用\n","date":"2024-07-10T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407010/","title":"Linux开启人脸登录（待续）"},{"content":"介绍 下载地址 文档地址 安装 创建文件夹并解压\n1 2 sudo mkdir /opt/QtScrcpy sudo unzip QtScrcpy-ubuntu-22.04-gcc_64.zip -d /opt/QtScrcpy/ 创建软连接\n1 sudo ln -s /opt/QtScrcpy/output/x64/Release/QtScrcpy /usr/bin/qtscrcpy 创建desktop，让开始菜单图标/全局搜索/桌面图标可用\n1 sudo vim /usr/share/applications/qtscrcpy.desktop 将如下内容粘贴\n1 2 3 4 5 6 7 8 9 [Desktop Entry] Encoding=UTF-8 Name=QtScrcpy Exec=qtscrcpy %U Icon=qtscrcpy Keywords=qtscrcpy Categories=Network; Type=Application Terminal=false 预览\n使用 使用usb连接手机，开启usb调试，QtScrcpy会自动刷新出设备，点击一键USB连接\n常见问题 连接无反应 尝试在终端启动 QtScrcpy\n1 qtscrcpy 启动后再次连接，查看终端报错信息\n报错1：\nThe server version (2.4) does not match the client (2.1.1)\n解决：\n使用scrcpy-server 2.1.1替换默认的scrcpy-server\nscrcpy-server 2.1.1下载地址\n使用这个命令替换默认的scrcpy-server\n1 sudo cp scrcpy-server-v2.1.1 /opt/QtScrcpy/output/x64/Release/scrcpy-server 再次尝试启动\n","date":"2024-07-09T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407009/","title":"linux安装安卓控制工具，QtScrcpy"},{"content":"下载最新版本的 yt-dlp\n下载地址：https://github.com/yt-dlp/yt-dlp/releases\n选择 yt-dlp\n复制到 .local/bin/\n1 cp yt-dlp ~/.local/bin 创建软连接\n1 sudo ln -s ~/.local/bin/yt-dlp /usr/bin/yt-dlp 查看版本\n1 yt-dlp --version 查看下载连接视频信息\n1 yt-dlp -F 链接 使用 yt-dlp -F 链接查询出来的id下载\n1 yt-dlp -f id号 链接 ","date":"2024-07-08T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407008/","title":"Linux安装yt-dlp命令行下载工具"},{"content":"在线观看：\nyoutube 下载： ","date":"2024-07-08T16:07:59+08:00","permalink":"https://blog.seektao.cc/p/ying-guo-ming-jin-lun/","title":"因果明镜论 新版 仁泽"},{"content":" title: Linux安装Github Cli工具 description: slug: \u0026lsquo;\u0026ldquo;240729150742\u0026rdquo;\u0026rsquo; image: math: true license: CC BY-NC-ND hidden: false comments: true draft: false date: 2024-07-29 15:07:42 +0800 updated: 2024-07-29 14:07:89 +0800 categories: tags: title: undefined\n官方文档：https://github.com/cli/cli/blob/trunk/docs/install_linux.md\nDebian, Ubuntu Linux, Raspberry Pi OS (apt) 1 2 3 4 5 6 7 (type -p wget \u0026gt;/dev/null || (sudo apt update \u0026amp;\u0026amp; sudo apt-get install wget -y)) \\ \u0026amp;\u0026amp; sudo mkdir -p -m 755 /etc/apt/keyrings \\ \u0026amp;\u0026amp; wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg \u0026gt; /dev/null \\ \u0026amp;\u0026amp; sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \\ \u0026amp;\u0026amp; echo \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\u0026#34; | sudo tee /etc/apt/sources.list.d/github-cli.list \u0026gt; /dev/null \\ \u0026amp;\u0026amp; sudo apt update \\ \u0026amp;\u0026amp; sudo apt install gh -y ","date":"2024-07-07T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407007/","title":"Linux安装Github Cli工具"},{"content":"介绍 YOURLS 是一个强大的 PHP 脚本集，可以让您在服务器上运行自己的 URL 缩短程序。有了 YOURLS，你可以完全控制你的链接、详细的统计数据、插件支持等等，所有这些都包装在一个免费的开源软件包中。\n官网：https://yourls.org\n源码：https://github.com/YOURLS/YOURLS\n预览：\n安装 本次以serv00为例，教学安装\n下载\n1 wget https://github.com/YOURLS/YOURLS/archive/refs/tags/1.9.2.zip 解压\n1 unzip 1.9.2.zip -d public_html/ 复制文件\n1 2 3 cd public_html/ rm -rf index.html cp -r YOURLS-1.9.2/* ./ 配置\n1 cp user/config-sample.php user/config.php 修改user/config.php\n1 vim user/config.php serv00后台创建数据库，将数据库信息填写到 user/config.php，除了数据库外，还需要修改其他信息，按需填写\n这里需要注意的是，如果你想让多个短链指向同一个站点，需要做如下操作 define( 'YOURLS_UNIQUE_URLS', 'false' );\n修改完成之后访问：域名/admin\n进入到这个界面，点击 Install YOURLS\n登陆后台，长这样：\n主题 Sleeky https://github.com/Flynntes/Sleeky/releases/tag/v2.5.0\n1 2 3 4 wget https://github.com/Flynntes/Sleeky/archive/refs/tags/v2.5.0.zip unzip v2.5.0.zip cp -r Sleeky-2.5.0/sleeky-frontend/* public_html/ cp -r Sleeky-2.5.0/sleeky-backend/ public_html/user/plugins/ 默认css加载有问题，查看这个issuse解决：https://github.com/Flynntes/Sleeky/issues/89\n安装主题后的结果\n前台：\n后台：\n浏览器插件 Firefox：YOURLS shortener 安装后长这样 点击Setting进入设置，填写信息后测试保存\nServer URL就是你的网址链接\nSignature是密钥，在 Tools - Secure passwordless API call可以找到\n","date":"2024-07-07T15:07:53+08:00","permalink":"https://blog.seektao.cc/p/2407027/","title":"短链系统yourls安装使用"},{"content":"介绍 官方文档：https://alist.nn.ci/zh/guide\n安装 一键脚本 1 2 # 切换到root用户 sudo su - 1 2 # 一键脚本安装 curl -fsSL \u0026#34;https://alist.nn.ci/v3.sh\u0026#34; | bash -s install 设置密码\n1 2 cd /opt/alist/ ./alist admin set \u0026lt;your_password\u0026gt; 访问地址：ip:5244\ndocker docker-compose\n1 2 3 sudo mkdir -p /opt/docker-alist cd /opt/docker-alist sudo vim docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 version: \u0026#39;3.3\u0026#39; services: alist: image: \u0026#39;xhofe/alist-aria2:latest\u0026#39; volumes: - \u0026#39;./data:/opt/alist/data\u0026#39; - \u0026#39;/home:/home\u0026#39; - \u0026#39;/root:/root\u0026#39; ports: - \u0026#39;5246:5244\u0026#39; #environment: #- PUID=0 #- PGID=0 #- UMASK=022 container_name: alist restart: unless-stopped networks: - alist_network networks: alist_network: external: true 重置密码\n1 docker exec -it alist ./alist admin set \u0026lt;your_password\u0026gt; ","date":"2024-07-05T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407005/","title":"Linux下安装使用alist"},{"content":"在开始菜单搜索微信，编辑应用程序，添加环境变量QT_SCALE_FACTOR=1.75\n右击编辑应用程序，进入如下界面\n点击应用程序，在环境变量输入QT_SCALE_FACTOR=1.75\n此处的1.75经我测试为缩放倍率，我的屏幕缩放为175%，根据自己情况进行更改\n","date":"2024-07-05T10:07:32+08:00","permalink":"https://blog.seektao.cc/p/linux-wechat/","title":"Linux原生版微信在高分辨率屏幕字体小，分辨率异常"},{"content":"安装 Linux Debian\n1 sudo apt install kodi Flatpak\n1 flatpak install flathub tv.kodi.Kodi ","date":"2024-07-04T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407004/","title":"Kodi，超级强大的多功能媒体播放器"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 Chain INPUT (policy ACCEPT) target prot opt source destination Chain FORWARD (policy ACCEPT) target prot opt source destination DOCKER-USER all -- anywhere anywhere DOCKER-ISOLATION-STAGE-1 all -- anywhere anywhere ACCEPT all -- anywhere anywhere ctstate RELATED,ESTABLISHED DOCKER all -- anywhere anywhere ACCEPT all -- anywhere anywhere ACCEPT all -- anywhere anywhere Chain OUTPUT (policy ACCEPT) target prot opt source destination Chain DOCKER (1 references) target prot opt source destination Chain DOCKER-ISOLATION-STAGE-1 (1 references) target prot opt source destination DOCKER-ISOLATION-STAGE-2 all -- anywhere anywhere RETURN all -- anywhere anywhere Chain DOCKER-ISOLATION-STAGE-2 (1 references) target prot opt source destination DROP all -- anywhere anywhere RETURN all -- anywhere anywhere Chain DOCKER-USER (1 references) target prot opt source destination RETURN all -- anywhere anywhere 这是 iptables 的输出，显示了当前的防火墙规则。以下是每个部分的解释：\nChain INPUT 政策 (policy): ACCEPT 表示默认允许所有进入的流量。 规则: 当前没有具体的规则定义，意味着所有进入的流量都会被接受。 Chain FORWARD 政策 (policy): ACCEPT 表示默认允许所有转发的流量。 规则: DOCKER-USER: 用户自定义的链，通常用于 Docker 的流量管理。 DOCKER-ISOLATION-STAGE-1: Docker 的隔离阶段链。 ACCEPT all -- anywhere anywhere ctstate RELATED,ESTABLISHED: 允许所有相关和已建立的连接。 DOCKER: Docker 处理的流量。 ACCEPT all -- anywhere anywhere: 允许所有流量（这条规则可能不必要，因为前面的规则已经允许了所有流量）。 Chain OUTPUT 政策 (policy): ACCEPT 表示默认允许所有输出的流量。 规则: 当前没有具体的规则定义，意味着所有输出的流量都会被接受。 Chain DOCKER 这是 Docker 生成的链，当前没有具体的规则。 Chain DOCKER-ISOLATION-STAGE-1 这是 Docker 的隔离阶段链。 规则: DOCKER-ISOLATION-STAGE-2: 进一步的隔离处理。 RETURN: 返回到调用该链的地方。 Chain DOCKER-ISOLATION-STAGE-2 规则: DROP all -- anywhere anywhere: 丢弃所有流量。 RETURN: 返回到调用该链的地方。 Chain DOCKER-USER 用户自定义的链，用于 Docker 的流量管理。 规则: RETURN: 返回到调用该链的地方。 总结 这个配置允许所有进入和输出的流量，转发流量也被允许。 Docker 相关的链用于管理容器之间的流量，包含了一些隔离和处理规则。 这种配置可能不够安全，尤其是在生产环境中，建议根据需要设置更严格的规则。 ","date":"2024-07-03T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407003/","title":"Debian，iptables防火墙规则"},{"content":"new-api new-api基于one-api\n预览：\n部署 docker-compose\n1 2 3 4 5 6 7 8 9 10 11 12 version: \u0026#39;3.9\u0026#39; services: new-api: image: \u0026#39;calciumion/new-api:latest\u0026#39; volumes: - \u0026#39;./data:/data\u0026#39; environment: - TZ=Asia/Shanghai ports: - \u0026#39;7016:3000\u0026#39; restart: unless-stopped container_name: new-api 反向代理 Nginx\n1 2 3 4 5 6 7 8 9 10 11 12 server { listen 80; server_name xxxx.com; # 你的域名 location / { proxy_pass http://127.0.0.1:7016; # 替换为你的应用程序地址 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } ChatGPT-Next-Web 预览：\n部署 docker-compose\napi 以对接 chatanyweher 为例\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 services: chatgpt-next-web: image: yidadaa/chatgpt-next-web container_name: gpt environment: - CODE=xxxxxx # 网页访问密码,保持复杂性，防止被爆破 - OPENAI_API_KEY=sk-Y8oxUwG2Qhxxxxxxxxxx # 你的one-api key - BASE_URL=https://xxxx.com #你的接口代理地址 - ENABLE_BALANCE_QUERY=1 # 启用余额查询 - DEFAULT_MODEL=gpt-4o-mini-2024-07-18 # 网页端首次访问的默认模型，该模型为openai的最新超便宜模型，3.5之上，4o之下 - CUSTOM_MODELS=-all,+gpt-3.5-turbo-ca,+gpt-4o-ca,+gpt-4-turbo-ca,+gpt-4-turbo-preview-ca,+gpt-4-ca,+gpt-3.5-turbo,+gpt-3.5-turbo-0125,+gpt-3.5-turbo-1106,+gpt-3.5-turbo-0613,+gpt-3.5-turbo-0301,+gpt-3.5-turbo-instruct,+gpt-3.5-turbo-instruct-0914,+gpt-3.5-turbo-16k,+gpt-3.5-turbo-16k-0613,+gpt-4o,+gpt-4o-2024-05-13,+gpt-4o-mini,+gpt-4o-mini-2024-07-18,+gpt-4-turbo,+gpt-4-turbo-2024-04-09,+gpt-4-turbo-preview,+gpt-4-1106-preview,+gpt-4-0125-preview,+gpt-4-vision-preview,+gpt-4-1106-vision-preview,+gpt-4,+gpt-4-0613,+text-embedding-ada-002,+text-embedding-3-small,+text-embedding-3-large,+claude-3-5-sonnet-20240620,+whisper-1,+tts-1,+tts-1-1106,+tts-1-hd,+tts-1-hd-1106,+dall-e-2,+dall-e-3 # chatanyweher支持的模型 ports: - \u0026#39;3550:3000\u0026#39; # 网页访问端口 restart: unless-stopped 反向代理 Nginx\n1 2 3 4 5 6 7 8 9 10 11 12 server { listen 80; server_name xxxxx.com; # 你的域名 location / { proxy_pass http://127.0.0.1:3550; # 替换为你的应用程序地址 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } ","date":"2024-07-02T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407002/","title":"ChatGPT-Next-Web 最新部署对接new-api部署方法"},{"content":"我的分享 电影 https://115.com/s/swz2nxk3h9j?password=love\u0026# movie 访问码：love\n电视剧 https://115.com/s/swz2njp3h9j?password=love# tvplay 复制这段内容，可在115APP中直接打开！\n动漫 https://115.com/s/swz2nxs3h9j?password=love\u0026# anime 访问码：love\n纪录片 https://115.com/s/swz2n9x3h9j?password=love\u0026# documentary 访问码：love\n软件 https://115.com/s/swz23lc3h9j?password=love# software 复制这段内容，可在115APP中直接打开！\n别人分享第一波 https://115.com/s/sw6t1s73wfp?password=ade1#\n华语剧集_FromAliyundrive_sha1\n访问码：ade1\n复制这段内容，可在115App中直接打开！\nhttps://115.com/s/sw683in3wfp?password=m095#\n一些无损歌曲(1.2T)\n访问码：m095\n复制这段内容，可在115App中直接打开！\nhttps://115.com/s/sw6837g3wfp?password=u2f6#\n欧美剧_45T\n访问码：u2f6\n复制这段内容，可在115App中直接打开！\n电影\nhttps://115.com/s/sw683783wfp?password=g9a0#\n2267部2160p remux FGT(120T)\n访问码：g9a0\n复制这段内容，可在115App中直接打开！\nhttps://115.com/s/sw683713wfp?password=o791#\n原盘 ISO 电影(755T)\n访问码：o791\n复制这段内容，可在115App中直接打开！\n源地址：\nhttps://nga.178.com/read.php?\u0026tid=36573363\u0026pid=695158511\u0026to=1\n","date":"2024-07-01T23:07:42+08:00","permalink":"https://blog.seektao.cc/p/2407001/","title":"115资源分享"},{"content":" 20240614更新，\n本教程同样适用于同一台蓝牙设备，同一个主机上的多系统蓝牙连接。\n本身具有多蓝牙设备切换功能的键盘（如本教程使用的K380），连接不同设备可以生效，比如我可以同时连接 Windows10，手机。但是现在电脑上装了Windows10，Debian12两个系统，使用K380键盘不同模式蓝牙连接后会导致前一个失效（就是蓝牙1连接Windows10，蓝牙2连接Debian12，后连接的那个会导致第一个失效），我猜测可能是一台机器上的蓝牙有唯一标识，所以键盘就算有多蓝牙支持，连接一个系统后，再切换系统、切换键盘蓝牙模式，也会导致前一个蓝牙失效，这也是写本教程的主要原因。\n如果一个设备只装一个系统，且键盘支持多蓝牙切换模式，应该是不会出现这个问题的。当然如果键盘只支持一个模式蓝牙，使用本教程也是可以的。\n下面是正文。。。\n起因 因为我在一台机器上装了两种不同的系统，windows和archlinux系统，在切换系统的时候，蓝牙键盘和蓝牙鼠标会失效，也就是在其中一个系统配对使用后，切换到另一个系统鼠标和键盘会用不了，为了解决这个问题，我查看了archlinux的wiki，和搜索了其他的经验，发现并不是很好理解。所以自己编写了这篇文章以供自己和后来人参考。\narchlinux 官方wiki关于蓝牙的介绍：https://wiki.archlinuxcn.org/wiki/%E8%93%9D%E7%89%99\n设备 设备 说明 蓝牙5.0 系统 Windows10 ，Arch Linux / 键盘 罗技k380 否 鼠标 acer M115 是 为什么要关注 蓝牙的频率呢？ 因为后面的配置文件一样，bt5.0要稍微复杂一下，这个也不用自己查询， 通过archlinux配对蓝牙生成的文件就可以看出来。\n步骤 整体步骤总结为：\n先连接蓝牙，在系统内生成配置文件，有多少个系统就先连接多少个。 修改蓝牙配置文件，确保所有系统中的配置与最后一次蓝牙连接的系统配置一致。 温馨提示，修改linux配置更方便。\n如果我有两个系统 archlinux、windows10，那么我应该先连接archlinux，再连接windows，记录下windows的蓝牙配置，修改archlinux的蓝牙配置。这样就可以实现同一个蓝牙连接两个系统。\n同理，我有三个设备，先连接3个系统生成配置文件，再修改前两次连接的配置。\n连接archlinux 我安装了图形化界面，对于配对蓝牙比较方便，这个过程不再演示。\n如果你是无图形化界面，请参考 蓝牙连接\n配对成功后，打开终端，在 /var/lib/bluetooth 下可以看到 蓝牙设备的mac地址，继续进入蓝牙的mac地址，可以看到已经配对的蓝牙设备的mac地址，每个人的mac地址不一样，请根据自己情况操作。比如我的如下：\n34开头的对应的是我的键盘k380，C8开头的对应的是鼠标m115。让我们来看看他们各自的配置文件是怎样的：\n键盘k380：\n上图的info内容对应的就是一个蓝牙2.4G的设备，后续的更改只需要修改 [LinkKey]标签下的Key即可。\nacer m115鼠标：\n通过图中的配置文件就可以看出，配置多了许多，这是蓝牙5.0的配置文件，我们需要修改的内容大概有\n1 2 3 4 5 6 7 8 [IdentityResolvingKey] Key=75543290F900B56B68F2EA4EF34A2DA9 [LongTermKey] Key=0932311C7550DDE3A0D73A479A521187 EncSize=16 EDiv=35838 Rand=220192556329416 这里面的内容对应windows的内容，查看windows蓝牙注册表对应后，你就一目了然了。\n了解了archlinux的配置文件之后，让我们切换系统到windows，查看windows下的对应的配置。\n连接windows 在windows的环境下配对蓝牙设备，这个过程不再演示。\n修改配置文件 根据前文的知识，我们需要知道archlinux需要配置的值对应windows下是什么，这个值需要通过注册表查看。 为了查看这些值，还需要准备一个软件，正常查看注册表是看不到的，还需要下载微软提供的 PsTool ,下载地址为：https://download.sysinternals.com/files/PSTools.zip 解压软件之后，在解压的目录打开命令行执行下列命令，需要提醒的是，此操作需要管理员权限，建议通过管理员打开powershell，再进入到解压的路径下，比如 1 cd \u0026#39;D:\\Program Files\\PSTools\u0026#39; 1 2 # 在PsTool所在目录执行这个 .\\PsExec64.exe -s -i regedit.exe 接着会打开注册表，在注册表的地址找到 1 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\BTHPORT\\Parameters\\Keys 在keys下面有子项，子项的名称和数据对应的是键盘的mac地址和linkkey 这是蓝牙2.4G，把mac地址对应的值记录下来，替换archlinux键盘的linkkey的key，只需要重启蓝牙，这样就实现了键盘在双系统的无缝切换。重启蓝牙的命令为 ：\n1 sudo systemctl restart bluetooth 对于鼠标，它的项根据我这边的情况，在键盘的项的下面，也就是 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\BTHPORT\\Parameters\\Keys 的子项的子项，点开可以看到一列些熟悉的值，比如 EDIV，IRK，ERand，LTK等值，我们可以把项导出为 .reg文件查看，但是我并不建议导出来，因为archlinux的值是十进制的，windows到处的值是十六进制，后续还要转换进制，稍显麻烦，你细心 的话在注册表里就可以看到转换过的值，也就是括号里面的内容，如图： 记录对应名称对应的数据，有括号记录括号的内容，没有括号的记录整条数据。\n切换到 archlinux 系统\n替换archlinux下对应设备的值和windows一样。\n修改LTK，IRK的时候，把小写字母转换成大写。全部替换完成之后，重启蓝牙。\n1 2 # 重启蓝牙 sudo systemctl restart bluetooth 查看蓝牙设备是否正常工作。\n额外的。archlinux wiki说需要转换，如果不能工作再尝试。\n根据我的经验来看，记录windows注册表蓝牙对应值的时候，仔细小心，如果不行，请参考官方蓝牙教程\n至此，完结撒花 ｡:.ﾟヽ(｡◕‿◕｡)ﾉﾟ.:｡+ﾟ\n","date":"2024-06-28T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406028/","title":"蓝牙设备连接双（多）系统（windows和archlinux）"},{"content":"管理多个 GitHub 账户时，可以使用不同的 SSH 公钥来为每个账户提供访问权限。以下是在本机生成多个 SSH 公钥并为每个 GitHub 账户添加相应公钥的步骤：\n生成 SSH 密钥对： 打开终端（在 Linux 或 macOS 上）或 Git Bash（在 Windows 上），使用 ssh-keygen 命令生成新的 SSH 密钥对。对于每个 GitHub 账户，重复以下步骤：\n1 ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; 将 \u0026quot;your_email@example.com\u0026quot; 替换为你的电子邮件地址。-t rsa 指定密钥类型为 RSA，-b 4096 指定密钥长度为 4096 位。\n命名密钥文件： 在提示保存密钥对时，你可以使用默认文件名（如 ~/.ssh/id_rsa），或者为每个 GitHub 账户指定不同的文件名，例如：\n1 Enter file in which to save the key (/c/Users/YourName/.ssh/id_rsa): /c/Users/YourName/.ssh/id_rsa_work 这样，你就可以区分不同账户的密钥。\n设置密钥访问权限： 为确保安全性，应该只让文件所有者访问私钥：\n1 chmod 600 /c/Users/YourName/.ssh/id_rsa_work 添加 SSH 公钥到 GitHub 账户：\n打开生成的公钥文件（默认为 .pub 扩展名），例如 id_rsa_work.pub。 复制公钥内容。 登录到对应的 GitHub 账户。 访问 Settings \u0026gt; SSH and GPG keys \u0026gt; New SSH key，粘贴你的公钥并命名。 点击“Add SSH key”完成添加。 配置 SSH 以使用特定密钥： 在 ~/.ssh/config 文件中添加以下内容，以配置 SSH 客户端使用特定密钥：\n1 2 3 4 5 6 7 8 9 Host github-work HostName github.com User your_github_username IdentityFile ~/.ssh/id_rsa_work Host github-personal HostName github.com User your_github_username IdentityFile ~/.ssh/id_rsa_personal 将 github-work 和 github-personal 替换为你的 GitHub 主机别名，your_github_username 替换为你的 GitHub 用户名，id_rsa_work 和 id_rsa_personal 替换为你的密钥文件路径。\n克隆或推送到 GitHub 仓库： 当你需要克隆或推送到 GitHub 仓库时，使用配置的别名来指定使用哪个密钥：\n1 git clone git@github-work:username/repo.git 或者：\n1 git push github-personal master 通过这种方式，你可以为每个 GitHub 账户生成和管理不同的 SSH 密钥，从而实现对不同账户的访问控制。记得妥善保管你的私钥文件。\n","date":"2024-06-26T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406027/","title":"本机生成多个ssh公钥管理多个GitHub账户"},{"content":"\nOffice 浏览器 FireFox Google Chrome Edge 邮箱 Thunderbird 开源邮箱客户端，https://www.thunderbird.net/zh-CN/\nOutlook 交流 QQ 微信 腾讯会议 Zoom 钉钉 视频/播放器 mpv 开源，极简播放器\n官网 个人配置文件 vlc 另一款开源播放器\nbilibili bilibili客户端\nZyplayer Terminus Player 第三方 Emby 播放器\n音乐/播放器 Spotify 方格音乐 网易云音乐 QQ音乐 MusicPlayer2 开源纯音频播放器，https://github.com/zhongyang219/MusicPlayer2/releases\n落雪 Lx-Music 阅读 Koodo Reader 阅读神器，支持多种格式\n下载工具 Gopeed Go编写的下载工具，跨平台。\nYTDownloader Youtube 下载神器，强烈推荐。\n地址：https://github.com/aandrew-me/ytDownloader\nNeat Download Manager Windows下多线程下载工具\nqBittorrent-Enhanced-Edition 增强版的qBittorrent，地址：https://github.com/c0re100/qBittorrent-Enhanced-Edition/releases\nMotrix 下载工具\nAria2-Windows Windows下的Aria2下载工具，下载地址：\n链接: https://pan.baidu.com/s/1nf2XaO7NprysGgOFXJpeYQ 提取码: love 复制这段内容后打开百度网盘手机App，操作更方便哦\n小白羊云盘 第三方阿里云盘播放器，https://github.com/gaozhangmin/aliyunpan\n剪辑 PS 剪影 HandBrake InfoTech（IT） Jetbrains Idea Datagrip Goland PyCharm WebStorm Android Studio PhpStorm Fleet Jetbrains ToolBox VMware Workstation Pro Tabby ssh工具，地址：https://github.com/Eugeny/tabby\nVSCode GitBash Fiddler Classic MySQL Workbench 8.0 CE Tiny RDM DBeaver Navicat Premium 16 phpstudy_pro Windows下php集成开发环境，地址：https://www.xp.cn/download.html\nApifox api测试工具\nPostman MobaXterm ssh工具，只支持Windows\nFileZilla 开源sftp工具\n编辑器 Typora Obsidian 推荐和Typora使用\nNotepad\u0026ndash; 替代Notpad++\nmassCode 开源，常用代码保存\nSublime Text draw.io 开源画图工具\nNotion Notepad3 替代notepad\n大杂烩 7-Zip File Manager 解压缩工具\nSnipaste 截图神器\nMuMu模拟器12 geek（强烈推荐） 卸载软件神器，可卸载安装软件自动删除注册表\nNmap - Zenmap GUI QuickLook SwitchHosts 快速切换hosts\nOBS Studio (64bit) Speedtest Everything ScreenToGif scrcpy 开源投屏工具\nRustDesk ToDesk Bandizip LocalSend TTime 翻译软件，好用\n有道翻译 Bitwarden Umi-OCR uTools Steam Microsoft Support and Recovery Assistant 全国资格考试网报平台证件照片审核处理系统 RaiDrive 挂载工具，Windows推荐使用\n指纹浏览器 Dolphin Anty 指纹浏览器\nHubstudio 指纹浏览器\nGoLogin 指纹浏览器\nVMLogin 指纹浏览器\nIncogniton 指纹浏览器\n剪辑 哔哩哔哩投稿工具 哔哩哔哩直播姬 Adobe Photoshop 2023 剪映专业版 HandBrake 代理工具 v2rayN nekoray Oblivion Desktop Cloudflare WARP WireGuard Hiddify nodesCatch ","date":"2024-06-25T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406026/","title":"Windows软件清单"},{"content":"百度网盘 链接: https://pan.baidu.com/s/1Fs54P37d3qwATA-95OSqdA?pwd=love 提取码: love 复制这段内容后打开百度网盘手机App，操作更方便哦\n123盘 https://www.123pan.com/s/4MOKVv-cnnpd.html\n云享 https://pan.seektao.cc/s/LwFp\n蓝奏云 https://lzygood.lanzouv.com/iM8o7211b3cb\n","date":"2024-06-24T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406025/","title":"推荐一本书《与神对话》"},{"content":"通用必会 快捷键 作用 触发模式 备注 u 撤销 普通 为你的错误操作买单 Ctrl+r 撤销已做的撤销 普通 不想做撤销呢 移动 移动的命令很重要，删除，复制，粘贴都跟它有关\n光标移动 普通模式下作用\n快捷键 作用 h 光标向左移动一个字符 j 光标向下移动一行 k 光标向上移动一行 l 光标向右移动一个字符 光标跳转 快捷键 作用 w 光标跳转到下一个单词的首字母 b 光标跳转到上一个单词的首字母 e 光标跳转到下一个单词的尾字母 ge 光标跳转到上一个单词的尾字母 $ 光标跳转到当前行的行尾 0（数字） 光标跳转到当前行的行首 ^ 光标跳转到当前行的行首非空字符 g_ 光标跳转到当前行的行尾非空字符 gg 光标跳转到文件首行首个非空字符 G 光标跳转到文件尾行首个非空字符 翻页 快捷键 作用 Ctrl + f 向下滚动一页 Ctrl + b 向上滚动一页 Ctrl + d 向下滚动半页 Ctrl + u 向上滚动半页 替换 快捷键 作用 触发模式 x 替换光标所在的字符 普通模式 ciw 替换当前光标所在的单词 删除 快捷键 作用 触发模式 x 删除光标所在位置的字符 普通模式 dw 删除光标位置到下一个单词开头的字符 普通模式 D/d$ 删除光标位置到行尾的字符 d0 删除光标位置到行首的字符 d^ 删除光标位置到行首非空的字符 dd 删除当前行 普通模式 ndd 删除n行，包含当前行 dgg 删除当前行到文件首行 dG 删除当前行到文件尾行 使用 ndd 可以使用 p 来粘贴刚才删除的行\n复制+粘贴 命令 作用 备注 yy 复制当前行。 yy - Yank (copy) line yw 复制从光标位置到下一个单词结尾的字符。 yw - Yank (copy) word y$ 复制从光标位置到行尾的字符。 y$ - Yank (copy) to end of line y0 复制从光标位置到行首的字符（忽略空白字符）。 y0 - Yank (copy) to beginning of line y^ 复制从光标位置到行首的第一个非空白字符。 y^ - Yank (copy) to first non-blank character p 粘贴最后一次复制的内容。 p - Paste last yanked (copied) content P 在当前行之前粘贴最后一次复制的内容。 P - Paste above current line \u0026ldquo;+y 复制文本到系统剪贴板。 \u0026quot;+y - Yank (copy) to system clipboard \u0026ldquo;+p 从系统剪贴板粘贴内容。 \u0026quot;+p - Paste from system clipboard :reg 查看 Vim 寄存器中保存的内容。 :reg - View contents of Vim registers \u0026ldquo;ayy 将当前行复制到寄存器 a 中。 \u0026quot;ayy - Copy current line to register a \u0026ldquo;ap 从寄存器 a 中粘贴内容。 \u0026quot;ap - Paste from register a \u0026ldquo;ayiw 将当前单词复制到寄存器 a 中。 \u0026quot;ayiw - Copy current word to register a \u0026ldquo;aP 从寄存器 a 中粘贴内容到当前位置。 \u0026quot;aP - Paste from register a at current position ","date":"2024-06-23T13:06:24+08:00","permalink":"https://blog.seektao.cc/p/vim-keyborad/","title":"VIM的快捷键"},{"content":" https://resulting-maridel-budd-86b51dd4.koyeb.app/ Region: Oregon (US West) https://ssh.ksg.us.kg/ , https://ssh.seektao.cc Region: Frankfurt 项目地址：https://github.com/crazypeace/huashengdun-webssh\n","date":"2024-06-22T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406023/","title":"分享在线可用的webssh"},{"content":"介绍 支持的服务众多，可选择php版本，有多款数据库，MySQL，postgresql，mongdodb，支持ssh连接，没有广告，3G空间。\n地址：https://www.serv00.com/\n温馨提示：注册不要使用代理，建议把上述域名加入白名单\nServ00添加自定义域名 使用白嫖的二级域名添加三级域名作为serv00的自定义域名\n域名托管在cloudflare\nServ00修改php版本 参考：https://forum.serv00.com/d/8-upgrade-version-of-php/2\n在 domains/domain/ 新建文件\n1 vim .htaccess 目前可支持的版本\n1 2 3 4 5 6 7 8 AddType application/x-httpd-php56 .php AddType application/x-httpd-php70 .php AddType application/x-httpd-php71 .php AddType application/x-httpd-php72 .php AddType application/x-httpd-php73 .php AddType application/x-httpd-php74 .php AddType application/x-httpd-php80 .php AddType application/x-httpd-php81 .php 1 echo \u0026#34;AddType application/x-httpd-php74 .php\u0026#34; \u0026gt;\u0026gt; .htaccess 应用 PM2 为了更好使用 ，PM2必不可少\n1 bash \u0026lt;(curl -s https://raw.githubusercontent.com/k0baya/alist_repl/main/serv00/install-pm2.sh) halo博客 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 server: # 运行端口 port: 8090 spring: # 数据库配置，支持 MySQL、MariaDB、PostgreSQL、H2 Database，具体配置方式可以参考下面的数据库配置 r2dbc: url: r2dbc:pool:postgresql://{HOST}:{PORT}/{DATABASE} username: admin password: 123456 sql: init: mode: always # 需要配合 r2dbc 的配置进行改动 platform: postgresql halo: caches: page: # 是否禁用页面缓存 disabled: true # 工作目录位置 work-dir: $HOME/domains/halo2/.halo2 # 外部访问地址 external-url: https://serve.v6.army # 附件映射配置，通常用于迁移场景 attachment: resource-mappings: - pathPattern: /upload/** locations: - migrate-from-1.x run.sh\n1 2 #!/bin/bash java17 -server -Xms128m -Xmx256m -jar -Duser.timezone=Asia/Shanghai /home/muyiacc/domains/halo2/halo.jar --spring.config.additional-location=/home/muyiacc/domains/halo2/.halo2/application.yaml ","date":"2024-06-22T00:06:14+08:00","permalink":"https://blog.seektao.cc/p/free-virtual-host-serv00-1/","title":"免费虚拟主机Serv00，使用部署各种服务教程"},{"content":"有些免费的服务长时间不登录可能会导致删号\nssh登录 serv00.com 3个月不登陆删号，通过定时任务ssh连接实现保活\n定时规则\n1 1 1 1 * * 脚本\n1 sshpass -p \u0026#39;密码\u0026#39; ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -tt 用户名@地址 \u0026#34;exit\u0026#34; ","date":"2024-06-21T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406022/","title":"免费服务保活"},{"content":" 片段节选自《与神对话》第3卷第21节\n“你可以随意选择成为神的任何部分，”我对那小灵魂说，“你是正在经验其自身的绝对神圣。你希望经验到你自己是哪种神圣因素呢？”\n“你是说我可以选择吗？”小灵魂问。我回答说：“是的。你可以选择通过感受或者行动经验任何神圣因素。”\n“好啊，”小灵魂说，“那么我选择宽恕。我想要经验到我自己就是那个叫做彻底的宽恕的神圣因素。”\n嗯，这倒有点棘手，正如你能想象到的。\n没有人需要被宽恕。我创造的一切都是完美和爱。\n“没有人需要被宽恕啊？”小灵魂问，它有些难以置信。\n“是啊，”我回答说，“看看你身边。你觉得哪个灵魂不如你完美、不如你神奇呢？”\n听到这句话，小灵魂四下环顾，吃惊地发现它身边围绕着天堂所有的灵魂。它们从遥远的地方赶过来，因为他们听说小灵魂正在与神进行一次非凡的对话。\n“我没发现不如我完美的灵魂啊！”小灵魂惊奇地说，“那么我该原谅谁呢？”\n就在这时，有个旁观的灵魂站了出来。“你可以原谅我呀，”这个友好的灵魂说。\n“原谅你什么呢？”小灵魂问。\n“在你下世为人时，我会来找你，做一些需要你原谅的事情，”友好的灵魂回答说。\n“但那是什么事呢？你是如此完美的生灵，能做出什么需要我原谅的事情呢？”小灵魂大惑不解。\n“哎呀，”友好的灵魂微笑着说，“我相信我们会有办法的啦。”\n“但你为什么要这样做呢？”小灵魂实在想不通，一个如此完美的生灵，为什么愿意降低它的振动频率，以便它能够真的做出某些“坏”事呢？\n“很简单，”友好的灵魂解释说，“我愿意这么做，因为我爱你。你想要经验到你自己是宽恕，对吧？再说你也帮了我的忙呀。”\n“真的啊？”小灵魂问。\n“当然啦。你不记得啦？我们是一体呀，你和我。我们是上和下，左和右。我们是这和那，此和彼。我们是大和小、雄和雌、好和坏。我们大家都是一体。\n“我们共同决定这么做，这样我们每个人就都能经验到我们自己是神最伟大的组成部分。因为我们明白……”\n“假如没有非你，也就没有你。”\n“如果没有‘冷’，你不可能感到‘暖’。如果没有‘悲伤’，你不可能感受到‘快乐’；如果没有‘恶’，你称之为‘善’的经验便不可能存在。\n“如果你选择成为某样东西，那么在你的宇宙里，必须有相反的某些东西或者某些人存在，你的选择才能够实现。”\n友好的灵魂接着又解释说，这些人都是神特派的天使，这些境遇都是神的礼物。\n“我只要求你一件事，”友好的灵魂大声宣布。\n“什么事都行！什么事都行，”小灵魂激动地说。它现在知道它能够经验神的每一个神圣要素，所以很兴奋。现在他明白了那计划。\n“在我打击你的时候，”友好的灵魂说，“在我对你做出糟糕得超乎你想象的事情的时候——在那个时候……请记得我的真实身份。”\n“哦，我不会忘记的！”小灵魂承诺说，“到时我会看到你是完美无缺的，就像现在这样，我会永远记得你的身份。”\n","date":"2024-06-19T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406020/","title":"《与神对话》节选片段1"},{"content":"初始化仓库 本地没有项目，仓库有 git clone \u0026lt;项目地址\u0026gt;\n本地有项目，仓库也有 确保本地已经初始化git init,先将本地提交了。\n添加远程仓库地址，拉取项目，解决冲突。\n1 2 3 git remote add \u0026lt;别名\u0026gt; \u0026lt;仓库地址\u0026gt; # 案例 # git remote add origin git@github.com:muyiacc/test.git 如果本地也有记录，且和远程有冲突，后面讲\n拉取 pull 推送 push 将当前分支提交到远程对应分支\n1 git push 将当前分支提交到特定的远程仓库，同名分支\n1 git push \u0026lt;remote\u0026gt; 将本地分支提交到远程特定的分支\n1 git push \u0026lt;remote\u0026gt; \u0026lt;branch\u0026gt; 设置上游分支：推送当前分支，并设置上游分支（tracking branch），这样之后可以使用 git push 直接推送，而不需要指定远程仓库和分支。\n1 git push -u \u0026lt;remote\u0026gt; \u0026lt;branch\u0026gt; 强制推送：强制推送本地更改，即使这会导致远程仓库的更改丢失。使用此选项需要谨慎，因为它可能会覆盖远程分支上的提交。（慎用！！！）\n1 git push -f 或 git push --force 删除远程分支：删除远程仓库上的指定分支。\n1 git push \u0026lt;remote\u0026gt; --delete \u0026lt;branch\u0026gt; 推送标签：推送本地创建的标签到远程仓库\n1 git push \u0026lt;remote\u0026gt; \u0026lt;tag\u0026gt; 推送所有分支和标签：推送所有本地分支和标签到远程仓库。\n1 git push --all 或 git push --tags 使用 git push 时，最好先使用 git pull 或 git fetch 来获取远程仓库的最新状态，以避免潜在的冲突。此外，强制推送（-f 或 --force）可能会导致其他协作者的更改丢失，因此应该在团队中明确沟通后谨慎使用。\n分支 merge cherry-pick 选择合并某一个分支的提交记录\nmain，dev两个分支，dev提交了commit a，commit b，现在只需要将commit b合并到main分支\n首先切换到要合并的分支main，执行\n1 git cherry-pick 837fc5dedd1b8b2ab459041de179b4689587fd73 837fc5dedd1b8b2ab459041de179b4689587fd73是提交的hash值，通过 git log查看。\nreset 情景1 放弃当前内容，回到某个历史提交的commit ，并丢弃暂存区\n1 git reset --hard commit-id 同时删除未追踪的文件和目录\n1 2 3 git clean -fd # -f 是表示强制删除 # -d 表示的目录，clean只会删除文件，加上表示把目录也删掉 为什么有这个用法，主要是用来学习，删除了之后，自己再重新写一遍。不用关心需要删除哪些内容。\n常见问题 从远程Git仓库中删除已经上传但现在希望忽略的文件 确保你已经在 .gitignore 文件中添加了需要忽略的文件或文件夹。\n使用以下命令将文件从 Git 的追踪中移除，但保留本地文件：\n1 git rm --cached \u0026lt;file_or_directory\u0026gt; 如果你想要移除多个文件，可以使用通配符或列出多个文件。\n提交对 .gitignore 文件和移除追踪的更改：\n1 git commit -m \u0026#34;Remove ignored files from tracking\u0026#34; 将更改推送到远程仓库：\n1 git push origin \u0026lt;branch_name\u0026gt; 假设要忽略名为 config.json 的文件，操作如下：\n1 2 3 4 echo \u0026#34;config.json\u0026#34; \u0026gt;\u0026gt; .gitignore git rm --cached config.json git commit -m \u0026#34;Ignore config.json\u0026#34; git push origin main 完成这些步骤后，config.json 文件将不再被 Git 跟踪，并且在之后的提交中将被忽略。\nerror: bad signature 0x00000000 1 2 3 \u0026gt; git status error: bad signature 0x00000000 fatal: index file corrupt 这表示索引出现错误\n备份索引文件：\n在命令行中，进入你的 Git 仓库目录（你已经在 E:\\markstore\\hugo-blog 中），然后执行以下命令：\n`cp .git/index .git/index.backup` （如果你在 Windows 上，可以使用 `copy .git\\index .git\\index.backup`） 删除索引文件：\n`rm .git/index` （在 Windows 上使用 `del .git\\index`） 重新构建索引：\n运行以下命令来重新构建索引：\n`git reset` git status 中文字符显示为 \\1234\\1234 1 git config core.quotepath off 全局生效\n1 git config --global core.quotepath off 还原：off 改成 on。\n","date":"2024-06-18T20:06:17+08:00","permalink":"https://blog.seektao.cc/p/git-command/","title":"Git个人常见用法备忘录"},{"content":"Git 教程 欢迎来到这份详尽的 Git 教程，本教程将引导你从 Git 的基础开始，一直到一些高级特性的使用。\n第一部分：Git 简介 Git 是什么 Git 是一个分布式版本控制系统，由 Linus Torvalds 创建，用于有效、高速地处理从小到大的项目。\n为什么使用 Git 速度：Git 在合并、分支切换等操作上非常快。 效率：支持数千个并发用户协同工作。 安全性：通过 SHA1 哈希算法保护代码和历史完整性。 支持离线工作：可以在无网络的情况下工作。 分支和合并：支持快速、简便的分支和合并操作。 版本控制系统的基本概念 版本：项目的某个状态的快照。 提交：保存项目历史记录的操作。 分支：从某个点分叉出来的代码线。 合并：将两个或多个发展历史合并在一起的操作。 第二部分：安装和配置 Git 在不同操作系统上安装 Git 对于 Linux/Unix：sudo apt-get install git 对于 macOS：brew install git 对于 Windows：从 Git 官网 下载安装程序。 配置 Git 用户信息 1 2 git config --global user.name \u0026#34;Your Name\u0026#34; git config --global user.email \u0026#34;your_email@example.com\u0026#34; 第三部分：创建和使用仓库 初始化新仓库 1 2 3 mkdir my_project cd my_project git init 克隆现有仓库 1 git clone https://github.com/user/repo.git 仓库结构介绍 .git：Git 用来存储所有版本信息的目录。 第四部分：基本的 Git 工作流程 查看仓库状态 1 git status 将文件添加到暂存区 1 git add \u0026lt;file\u0026gt; 提交更改到仓库 1 git commit -m \u0026#34;Commit message\u0026#34; 查看提交历史 1 git log 第五部分：分支和标签 创建和切换分支 1 2 git branch \u0026lt;branch_name\u0026gt; # 创建新分支 git checkout \u0026lt;branch_name\u0026gt; # 切换到分支 合并分支 1 git merge \u0026lt;branch_name\u0026gt; 删除分支 1 git branch -d \u0026lt;branch_name\u0026gt; 使用标签 1 2 git tag \u0026lt;tag_name\u0026gt; # 创建标签 git checkout \u0026lt;tag_name\u0026gt; # 切换到标签 第六部分：分支策略 特性分支工作流程 创建分支开发特性。 完成特性后合并回主分支。 Git Flow 和 GitHub Flow Git Flow：使用多个分支进行开发、发布、维护。 GitHub Flow：使用单一的 master 分支和特性分支。 第七部分：解决合并冲突 合并冲突的原因 当两个分支修改了同一文件的同一行。 解决冲突的步骤 手动编辑冲突文件。 将更改添加到暂存区。 完成合并提交。 第八部分：远程仓库的使用 添加远程仓库 1 git remote add origin \u0026lt;repository_URL\u0026gt; 推送到远程仓库 1 git push -u origin \u0026lt;branch_name\u0026gt; 从远程仓库拉取 1 git pull 第九部分：高级 Git 技巧 交互式暂存 1 git add -i 修改最近的提交 1 git commit --amend 取消暂存区的更改 1 git reset HEAD \u0026lt;file\u0026gt; 重置分支 1 git reset --hard \u0026lt;commit_hash\u0026gt; 第十部分：使用 Git 进行协作 协作的工作流程 克隆仓库。 创建特性分支。 提交更改。 创建 Pull Request 或 Merge Request。 讨论和审查代码。 合并分支。 代码审查 审查 Pull Request 或 Merge Request。 讨论代码更改。 批准或请求更改。 第十一部分：Git 工具和资源 图形用户界面（GUI）工具 SourceTree GitHub Desktop GitKraken Git 命令行工具 使用 git 命令行工具。 在线资源和社区 Git 官方文档 GitHub 帮助 Stack Overflow 第十二部分：Git 故障排除 常见问题和解决方法 使用 git status 检查状态。 使用 git reflog 查看历史。 使用 git reflog 恢复丢失的提交 1 2 git reflog git checkout \u0026lt;reflog_entry\u0026gt; 第十三部分：Git 安全性 保护你的凭证 使用凭据存储。 使用 SSH 与 HTTPS 生成 SSH 密钥对。 添加 SSH 密钥到你的 Git 服务。 第十四部分：附录 Git 命令速查表 列出常用 Git 命令和它们的用法。 术语表 解释 Git 术语。 ","date":"2024-06-18T20:06:07+08:00","permalink":"https://blog.seektao.cc/p/git-course/","title":"Git教程详解"},{"content":"","date":"2024-06-18T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406019/","title":"《与神对话》摘录"},{"content":"安装系统选择的是中文，生成几个主要目录也是中文，后来终端切换文件夹影响体验，所以改为英文。\n参考：https://wiki.archlinuxcn.org/wiki/XDG_%E7%94%A8%E6%88%B7%E7%9B%AE%E5%BD%95#\n备份\n1 cp ~/.config/user-dirs.dirs ~/.config/user-dirs.dirs.bak 原本的样子\n1 2 3 4 5 6 7 8 XDG_DESKTOP_DIR=\u0026#34;$HOME/桌面\u0026#34; XDG_DOCUMENTS_DIR=\u0026#34;$HOME/文档\u0026#34; XDG_DOWNLOAD_DIR=\u0026#34;$HOME/下载\u0026#34; XDG_MUSIC_DIR=\u0026#34;$HOME/音乐\u0026#34; XDG_PICTURES_DIR=\u0026#34;$HOME/图片\u0026#34; XDG_PUBLICSHARE_DIR=\u0026#34;$HOME/公共\u0026#34; XDG_TEMPLATES_DIR=\u0026#34;$HOME/模板\u0026#34; XDG_VIDEOS_DIR=\u0026#34;$HOME/视频\u0026#34; 修改为英文\n1 vim .config/user-dirs.dirs 1 2 3 4 5 6 7 8 XDG_DESKTOP_DIR=\u0026#34;$HOME/Desktop\u0026#34; XDG_DOCUMENTS_DIR=\u0026#34;$HOME/Documents\u0026#34; XDG_DOWNLOAD_DIR=\u0026#34;$HOME/Downloads\u0026#34; XDG_MUSIC_DIR=\u0026#34;$HOME/Music\u0026#34; XDG_PICTURES_DIR=\u0026#34;$HOME/Pictures\u0026#34; XDG_PUBLICSHARE_DIR=\u0026#34;$HOME/Public\u0026#34; XDG_TEMPLATES_DIR=\u0026#34;$HOME/Templates\u0026#34; XDG_VIDEOS_DIR=\u0026#34;$HOME/Videos\u0026#34; 现在把已经生成的中文文件夹名字改为英文\n1 2 3 4 5 6 7 8 mv \u0026#34;$HOME/桌面\u0026#34; \u0026#34;$HOME/Desktop\u0026#34; mv \u0026#34;$HOME/文档\u0026#34; \u0026#34;$HOME/Documents\u0026#34; mv \u0026#34;$HOME/下载\u0026#34; \u0026#34;$HOME/Downloads\u0026#34; mv \u0026#34;$HOME/音乐\u0026#34; \u0026#34;$HOME/Music\u0026#34; mv \u0026#34;$HOME/图片\u0026#34; \u0026#34;$HOME/Pictures\u0026#34; mv \u0026#34;$HOME/公共\u0026#34; \u0026#34;$HOME/Public\u0026#34; mv \u0026#34;$HOME/模板\u0026#34; \u0026#34;$HOME/Templates\u0026#34; mv \u0026#34;$HOME/视频\u0026#34; \u0026#34;$HOME/Videos\u0026#34; 最后去文件管理器，把原来的位置改为新的位置。\n但是这整个过程第一次好麻烦，记录一下，方便复制。\n其实也可以选择使用英文环境安装系统，但是中文环境安装能自动安装中文输入法。\n","date":"2024-06-17T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406017/","title":"xdg-user-dirs，修改用户目录。"},{"content":"有时候需要查看hosts，每次都是从网上查看，不如自己记录一下\n1 C:\\Windows\\System32\\drivers\\etc 通过移动硬盘系统挂载后的位置（这个比较随机，看系统）\n1 /media/taoone/C0260DE6260DDDF2/Windows/System32/drivers/etc/ ","date":"2024-06-16T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406016/","title":"Windows下hosts所在目录"},{"content":"原文链接：https://www.seektao.cc/archives/typora-install-activation\n！！！2024-06-15更新全文内容和排版，包括标题！！！\n今天（2024-06-15）新装了一个debian12系统，根据本教程安装了最新版typora并激活，发现竟然失效了，截止今天typora的最新版是 1.8.10，看来是typora修复了，于是我去下载本教程编写时候对应的最新版1.7.5，官网竟然关闭了下载通道，提供离1.7.5的最近的是1.7,6，于是我又下载1.7.6，激活也失败告终，看来只能使用1.7.5了，还好我有备份，不过存在阿里云盘，要登陆，不方便下载，当时本想着这法子是不会失效的，结果。。\n所以本文在之前的内容基础上进行整体更新。\n如果只想快速使用，不想编译，可跳转到 合集仓库 查看安装\n下载安装 Debian 系统版本为：debian12.2\n下载地址：\n123盘：https://www.123pan.com/s/4MOKVv-LNnpd.html提取码:love\n蓝奏云：https://lzygood.lanzouv.com/iEZbz21vzhre 密码:love\n为什么不用阿里云盘？zip不让分享！！限制真多。\n下载后安装：\n1 sudo dpkg -i typora_1.7.5_amd64.deb Windows windows用的是直接解压就可以用的。\n安装包阿里云盘不让分享，嘶。。所以我再次特地下载后上传到蓝奏云和123盘\n蓝奏云：https://lzygood.lanzouv.com/ifJz721w5xla 密码:love\n123盘：https://www.123pan.com/s/4MOKVv-5Nnpd.html提取码:love\n编译可执行文件 此步骤是自己手动编译为自己系统的可执行文件。本次采用系统环境是 debian12\n以下命令均为绝对路径，只需要复制粘贴即可\n克隆项目 克隆这两个仓库到本地\n1 git clone https://github.com/muyiacc/NodeInject.git ~/.NodeInject \u0026amp;\u0026amp; git clone https://github.com/muyiacc/NodeInject_Hook_example.git ~/.NodeInject_Hook_example 将NodeInject_Hook_example下hook.js 复制到 NodeInject/src下，并改名为hooklog.js\n1 cp ~/.NodeInject_Hook_example/hook.js ~/.NodeInject/src/hooklog.js 安装rust 需要用到cargo，这是rust所包含的包管理工具，所以还得安装rust\n1 curl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh 中间选择 1 使用默认推荐安装，安装完成之后，接着刷新环境\n1 source \u0026#34;$HOME/.cargo/env\u0026#34; 接着在终端输入，测试安装是否成功\n1 cargo -V 输出如下信息则安装成功\n1 cargo 1.73.0 (9c4383fb5 2023-08-26) 编译可执行文件 进入NodeInject编译\n1 cd ~/.NodeInject \u0026amp;\u0026amp; cargo build 如果提示缺乏 gcc，需要安装gcc debian：sudo apt install gcc\n激活typora 将编译后的可执行文件复制到 typora文件夹下，执行复制的文件\n1 sudo cp ~/.NodeInject/target/debug/node_inject /usr/share/typora/ \u0026amp;\u0026amp; sudo /usr/share/typora/node_inject 这里出现如下信息，则到目前为止，没有任何问题。\n1 2 3 4 5 extracting node_modules.asar adding hook.js applying patch packing node_modules.asar done! 切换回 NodeInject_Hook_example，生成 license\n1 cd ~/.NodeInject_Hook_example/license-gen/ \u0026amp;\u0026amp; cargo build \u0026amp;\u0026amp; ~/.NodeInject_Hook_example/license-gen/target/debug/license-gen 接着出现 license\n1 License for you: 5QSW2H-X9GNBU-64F2MZ-YYHJ7W 打开typora，输入邮箱和许可证激活，就可以激活了。\n合集仓库 上面分享的软件和可执行文件我建了一个仓库，更便于下载了：\n地址：https://github.com/muyiacc/typora-activation\ntypora存放的是typora历史版本 直接上传有问题，采用release发布\nactivation存放的是破解执行文件\n如果是直接使用我编译文件，以debain为例\n下载安装typora，可以选择Github内的文件，也可以选择 上面分享的链接下载\n下载执行的文件\n将node_inject复制到typora目录（/usr/share/typora/）\n1 cp node_inject /usr/share/typora/ \u0026amp;\u0026amp; cd /usr/share/typora/ \u0026amp;\u0026amp; sudo ./node_inject 执行证书生成文件，生成证书 1 ./license-gen 打开typora，输入刚才生成的许可证和随机邮箱即可。 卸载typora 有时候会因为卸载不干净而激活失败，所以这里给出彻底卸载typora方式\nDebian 1 2 3 4 5 6 7 8 9 10 11 12 13 sudo apt remove typora find ~/.config -iname \u0026#39;*typora*\u0026#39; -exec rm -rf {} + find ~/.cache -iname \u0026#39;*typora*\u0026#39; -exec rm -rf {} + find ~/.local/share -iname \u0026#39;*typora*\u0026#39; -exec rm -rf {} + sudo apt autoremove sudo apt clean sudo rm -rf /usr/share/typora 替代方案 marktext obsibian ","date":"2024-06-15T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406015/","title":"Typora安装，激活"},{"content":"启用屏幕录制提示错误：\n1 2 3 KDE Portal Integration Failed to start screencasting Failed to create PipeWire context 解决办法\n1 2 sudo apt install pipewire # 安装 pipewire systemctl --user start pipewire # 在用户空间，启动 pipewire 服务 重启obs-studio\n","date":"2024-06-14T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406014/","title":"obs-studio在wayland环境下出现黑屏，解决方案"},{"content":"marktext 破解typora怎么说都不是一件值得推广的事，在寻找typora替代软件的过程中，发现了 marktext，外观类似typora，有些方面可能更美观。神奇的是目前（2024-06-15）已经45k star了，但是已经很久没有更新发行版了，最新的版本还停留在2022年3月，Issuse已经积累到1.1k，pull requests42各没有处理。仓库的develop分支还在小幅度不定时更新，也一直没合并到主分支。\n地址：https://github.com/marktext/marktext\n安装后主界面长这样\n整体默认的样式看上去就很舒服，细心的同学可以看到，代码块有复制按钮，同obsibian一样，但是obsibian太丑了。\n目前有几个影响写作体验感的方面：\n无法识别picgo，也无法设置命令行，这对写文章需要图片上传的时候是个很严重的影响。 可以看到左侧显示没有picgo，右边全局变量设置后其实已经可以用了，切换到命令行脚本，实际上却无法保存。\n当然了，这也不知道是不是和我的环境有关。\ntypora 剪贴板有超链接，使用ctrl+k后自动补全，光标自动跳转到链接标题，输入即可，这点体验感很好。但是marktext还是在链接末尾，需要手动调整光标到标题框。\n另一个是marktext粘贴超链接到文档中有明显的卡顿。\n这两点对于我写作就有相当大的考验，总观全文，你就知道我为了方便查看跳转设置了多个带标题的超链接，而不是直接粘贴链接，那样太影响阅读体验了。\nmarktext连续的两个代码块之间新增一行，~~变得很困难，~~比如我有时侯会修改内容，现在有两个代码块，我在后面的代码块前面新增说明而不是写入代码块中，typora只需要通过键盘将光标定位到前面的代码块最后一行的最后位置，按ctrl+enter，即可新建一行不包含代码块的内容。\n在marktext中则是需要移动鼠标到代码块前面，在弹出的框选择New Paragraph。\n使用少，经验不足，原来有个内置的快捷键ctrl+shift+n即可新建一行，不管光标在代码哪个位置，即可新建一行，反转！比typora更好用，typora要么使用上述使用的方案，要么使用菜单-段落-在下方插入段落。而这个操作typora自定义快捷键更麻烦。\n最后，如果在众多软件中选择一个替代品，我优先推荐 marktext。\nObsibian 它并不能算一个纯粹的Markdown编辑器，而是一个markdown仓库管理软件，网络上已经有很多人介绍过了，我这就不献丑了。\n推荐和typora或marktext一起使用，obsibian管理仓库，不好编辑的时候交给typora或者marktext。\n它很强大，但是默认有点点丑，需要自己摸索。我一般用来管理markdown文章。\n下面是我定制obsibian过后的界面：\n","date":"2024-06-13T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406013/","title":"Markdown软件推荐，Typora下位替代品marktext"},{"content":"123盘：https://www.123pan.com/s/4MOKVv-LDnpd.html提取码:love\n","date":"2024-06-12T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406012/","title":"lxmusic落雪音乐及音源分享"},{"content":"首先极不建议过多美化，美化过重导致系统容易崩溃不说，又占用资源，又耗费时间，且我觉得不耐看，要知道，美化的尽头是默认。。。\n本章目录结构采用和kde系统设置一致，便于查看\n外观 全局主题 欢迎屏幕 默认实在是丑了，换一个\nQuarksSplashDark：下载量排行榜第一\nVivid-Splash\n工作区 窗口管理 任务切换器 Classic task switcher\n开机与关机 登陆屏幕 Sugar Candy for SDDM\n","date":"2024-06-11T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406011/","title":"Linux系统桌面Kde plasma个性化设置"},{"content":" 1 sudo apt install ftp 1 2 sudo useradd -m -d /home/ftp/new_username -s /sbin/nologin new_username sudo passwd new_username ","date":"2024-06-10T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406010/","title":"linux搭建ftp服务"},{"content":"前言 以前写过一篇关于archlinux开机自动挂载windows磁盘的文章，这次教程和之前核心一样，都需要安装ntfs-3g，但是/etc/fstable 文件编写的内容不一样`\n关于/etc/fatable 文件各列的简单解释：\n第一列是挂载的设备（可以填写设备label或者uuid） 第二列是挂载点。（必须是已经存在的目录） 第三列是分区的格式。（如ntfs、btrfs、ext2、ext3、nfs、vfat） 第四列是mount的挂载参数，一般情况下，直接写defaults即可。 第五列的数字表示是否被dump备份，是的话为1，不是为0。 第六列是开机时是否自检磁盘。1，2都表示检测，0表示不检测。但1，2表示不同的优先级，1更高。所以/ 分区必须设为1，而且整个fstab只允许出现一个1，若有多个分区需要检测，那么都设为2。 准备 本身直接挂载windows磁盘也是可以的，不过需要每次都输入密码，为了解决这个问题，所以需要安装 ntfs-3g\n源码：https://github.com/tuxera/ntfs-3g\n下面介绍各个系统如何自动挂载windows磁盘\nDebian系统 此节介绍Debian系统通过ntfs-3g自动挂载磁盘\n安装ntfs-3g\n1 sudo apt install ntfs-3g 创建自动挂载服务\n1 sudo vim /etc/systemd/system/windows-mount.service 1 2 3 4 5 6 7 8 9 10 11 12 [Unit] Description=Mount Windows Partition After=network-online.target Wants=network-online.target [Service] ExecStart=/usr/bin/mount -a Type=oneshot RemainAfterExit=yes [Install] WantedBy=default.target 服务开机自启动\n1 2 sudo systemctl enable windows-mount.service sudo systemctl start windows-mount.service 查看/etc/fstab，仿照格式，将windows磁盘对应的信息填进去\n1 cat /etc/fstab 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # /etc/fstab: static file system information. # # Use \u0026#39;blkid\u0026#39; to print the universally unique identifier for a # device; this may be used with UUID= as a more robust way to name devices # that works even if disks are added and removed. See fstab(5). # # systemd generates mount units based on this file, see systemd.mount(5). # Please run \u0026#39;systemctl daemon-reload\u0026#39; after making changes here. # # \u0026lt;file system\u0026gt; \u0026lt;mount point\u0026gt; \u0026lt;type\u0026gt; \u0026lt;options\u0026gt; \u0026lt;dump\u0026gt; \u0026lt;pass\u0026gt; # / was on /dev/sda2 during installation UUID=97f36186-e41b-4a80-b3e2-306671b3a72a / ext4 errors=remount-ro 0 1 # /boot/efi was on /dev/sda1 during installation UUID=B601-46F5 /boot/efi vfat umask=0077 0 1 # swap was on /dev/sda3 during installation UUID=185f74ac-8a42-4433-8fbe-361f63ef7320 none swap sw 0 0 查看磁盘详细信息\n1 lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL,UUID 创建挂载点\n1 2 # 创建挂载点，文件夹必须存在 sudo mkdir -p /mnt/c /mnt/d /mnt/e 编辑/etc/fstab\n1 sudo vim /etc/fstab 填入如下内容（请修改为自己的磁盘信息）\n1 2 3 4 5 6 # windows c UUID=C0260DE6260DDDF2 /mnt/c ntfs-3g defaults 0 0 # windows d UUID=72C2959BC29563DF /mnt/d ntfs-3g defaults 0 0 # windows e UUID=C6A4ED67A4ED5A87 /mnt/e ntfs-3g defaults 0 0 重启系统，查看是否成功\n","date":"2024-06-09T16:06:01+08:00","image":"https://s2.loli.net/2024/10/03/nEjbHgrFzmXRsc8.png","permalink":"https://blog.seektao.cc/p/2406009/","title":"Linux开机自动挂载Windows磁盘"},{"content":"安装 请使用搜索并移步\n1 g，Go的多版本管理工具 配置 GOPROXY 设置代理，加快 go 相关包的下载\n七牛云\n1 2 go env -w GO111MODULE=on # 启用模块 go env -w GOPROXY=https://goproxy.cn,direct # 加快go模块下载速度 GOPATH 设置 go 的家目录\n1 2 echo \u0026#39;export GOPATH=~/codespace/goProjects\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc 在 GOPATH 目录下，通常有三个子目录：\nsrc: 存放源代码。 pkg: 存放编译后的包。 bin: 存放 go 下载的可执行文件。 1 2 cd ~/codespace/goProjects mkdir -p $GOPATH/src $GOPATH/pkg $GOPATH/bin 为了方便使用 Go 下载的可执行文件，将 $GOPATH/bin 加入到PATH 中（如 ~/.bashrc 或 ~/.zshrc）：\n1 2 3 # 适用于unix系统 bash环境 echo \u0026#39;export PATH=$PATH:$GOPATH/bin\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc ","date":"2024-06-08T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406008/","title":"Go的安装和配置"},{"content":"GitHub地址：https://github.com/hideuvpn/android-google-play-store\n本篇介绍如何安装最新版google框架和play store\n三件套是：\ngoogle服务框架 google play service google play store 安装google服务框架 https://www.apkmirror.com/apk/google-inc/google-services-framework/\n","date":"2024-06-07T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406007/","title":"google三件套"},{"content":"帮助信息：https://support.mozilla.org/zh-CN/kb/%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94Firefox%20%E4%BF%9D%E5%AD%98%E4%B9%A6%E7%AD%BE%E3%80%81%E5%AF%86%E7%A0%81%E5%92%8C%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%87%E4%BB%B6#w_finding-your-profile-without-opening-firefox\nwindows\n1 2 C:\\Users\\\u0026lt;your Windows login username\u0026gt;\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ Windows ","date":"2024-06-06T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406006/","title":"firefox用户配置文件——Firefox 保存书签、密码和其他用户数据的文件"},{"content":"前言 2024-06-06，未知原因docker.com国内镜像全都被要求下架服务。\n为了另求出路，采用cloudflare wokers pages搭建镜像服务。\n特点：免费、简单\n部署 本次使用 cmliu 提供的代码。\n地址：https://github.com/muyiacc/CF-Workers-docker.io\n克隆仓库，登陆cloudflare，选择Wokers \u0026amp; Pages create an application 选择pages - connect to git - github - github account - select a repository begin setup custom domains 第5步自定义的域名即是 docker 镜像地址，如本人搭建的服务：\nhttps://docker.ksg.us.kg 访问这个网址可查找镜像\n配置镜像 修改文件 /etc/docker/daemon.json，如果不存在则需要手动创建\n1 2 3 4 5 6 7 8 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json \u0026lt;\u0026lt;-\u0026#39;EOF\u0026#39; { \u0026#34;registry-mirrors\u0026#34;: [\u0026#34;https://docker.ksg.us.kg\u0026#34;] } EOF sudo systemctl daemon-reload sudo systemctl restart docker 镜像列表 收集的公益镜像：\n1 2 3 https://docker.1panelproxy.com https://docker.888666222.xyz https://docker.rainbond.cc 相似项目：https://github.com/muyiacc/cloudflare-docker-proxy\n","date":"2024-06-05T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406005/","title":"部署自己的Docker Hub镜像站，附Docker Hub镜像地址"},{"content":"卸载apt安装的obs\n1 2 3 4 5 sudo apt remove obs-studio rm -r ~/.config/obs-studio sudo apt purge obs-studio sudo apt autoremove sudo apt clean 安装flathub\n其他系统：Set Up Flathub | Flathub\n1 sudo apt install flatpak 如果是gnome\n1 sudo apt install gnome-software-plugin-flatpak 如果是kde\n1 sudo apt install plasma-discover-backend-flatpak 添加flathub仓库\n1 flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo 重启系统。\n重启后，安装obs-studio\n1 flatpak install flathub com.obsproject.Studio 如果下载速度慢，换flathub镜像源\n上海交大的，镜像帮助地址：https://mirrors.sjtug.sjtu.edu.cn/docs/flathub\n1 sudo flatpak remote-modify flathub --url=https://mirror.sjtu.edu.cn/flathub 运行obs-sutdio\n1 flatpak run com.obsproject.Studio ","date":"2024-06-04T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406004/","title":"Debian12通过flatapk安装"},{"content":"安装系统时，选择了其中一个桌面环境如xfce，安装完成后，现在我想换另一个，比如kde、gnome，该怎么做呢？\ngnome 1 2 sudo apt update sudo apt install gnome-core kde 1 2 sudo apt update sudo apt install kde-plasma-desktop 安装后需要选择对应的显示管理器，以下为对应桌面环境的显示管理器\nGNOME：通常使用 gdm3（GNOME Display Manager 3）作为默认显示管理器。\nKDE Plasma：通常使用 sddm（Simple Desktop Display Manager）或 lightdm，尽管 lightdm 可以配置为与 KDE Plasma 很好地配合工作。\nXFCE：通常推荐使用 lightdm 或 xdm（X Display Manager），但 lightdm 是更现代的选择。\nLXDE：可以使用 slim（Simple Login Manager）或 lightdm。\nMATE：通常使用 mate-display-manager 或 gdm3，因为 MATE 基于 GNOME 2 的代码。\nCinnamon：通常使用 lightdm 或 gdm3。\nBudgie：通常使用 gdm3，因为 Budgie 是基于 GNOME 的。\nDeepin：通常使用 lightdm。\nEnlightenment：使用 enlightenment_start，这是 Enlightenment 的一部分。\ni3：通常不使用传统的显示管理器，而是直接从 xinit 或类似的工具启动。\n","date":"2024-06-03T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406003/","title":"Debian12安装新的桌面环境"},{"content":"要在Debian上安装字体，可以按照以下步骤进行操作：\n打开终端，以管理员权限运行以下命令更新软件包列表：\n1 sudo apt update 安装字体管理工具（fontconfig）：\n1 sudo apt install fontconfig 将字体文件复制到系统字体目录（/usr/share/fonts/）或用户字体目录（~/.fonts/）。例如，假设你有一个名为\u0026quot;font.ttf\u0026quot;的字体文件，可以使用以下命令将其复制到系统字体目录：\n1 sudo cp font.ttf /usr/share/fonts/ 或者，如果你想将字体文件复制到用户字体目录，可以使用以下命令：\n1 cp font.ttf ~/.fonts/ 运行以下命令更新字体缓存：\n1 sudo fc-cache -f -v 这将重新生成字体缓存，使系统能够识别新安装的字体文件。\n完成后，你可以在应用程序中选择新安装的字体进行使用。\n字体推荐 fira code https://github.com/tonsky/FiraCode/releases/tag/6.2\n1 sudo mkdir -p /usr/share/fonts/fira_code \u0026amp;\u0026amp; sudo unzip Fira_Code_v6.2.zip -d /usr/share/fonts/fira_code/ \u0026amp;\u0026amp; fc-cache -f -v 简单预览\n","date":"2024-06-02T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406002/","title":"Linux安装字体"},{"content":"地址：https://www.registry.com.mp/\ndns解析：https://hostry.com\n","date":"2024-06-01T16:06:01+08:00","permalink":"https://blog.seektao.cc/p/2406001/","title":"com.mp免费域名注册"},{"content":"最近需要电子版规档，其中一部分内容需要”手写“，只能另辟蹊径，最后找到了这个东西\u0026mdash;-公文处理助手\n它可以将规整的一行字体打乱，模拟手写效果。像这样：\n光靠办公助手还是不行的，除此之外还需要 ”手写字体“，这两个网站可以免费下载字体\n字体天下-云峰寒蝉体 字体天下-上首鸿志手写体 字体家-遇见你时很甜\n关于更多手写字体可以自己网上找找。\n公文处理助手\u0026amp;办公助手：http://gwclzs.cn/ 下载地址：http://www.gwclzs.cn/%E5%8A%9E%E5%85%AC%E5%8A%A9%E6%89%8B.zip\n安装完成后，打开word，点击：公文处理助手-编号-仿手写\n就可以看到啦\n不过开启后有些卡顿，我的建议是不用时可以禁用，禁用方式为：\n文件-选项-加载项-管理(A)com加载项 转到按钮-取消公文处理助手勾选-确定即可\n或者\u0026hellip;.卸载？？\n","date":"2024-05-12T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405012/","title":"公文处理助手\u0026办公助手"},{"content":"Linux Bench.sh 秋水逸冰大佬的写的Bench.sh脚本\n特点\n显示当前测试的各种系统信息； 取自世界多处的知名数据中心的测试点，下载测试比较全面； 支持 IPv6 下载测速； IO 测试三次，并显示平均值。 使用\n1 wget -qO- bench.sh | bash 1 curl -Lso- bench.sh | bash 1 wget -qO- 86.re/bench.sh | bash 1 curl -so- 86.re/bench.sh | bash FreeBSD 没有root权限测速\n1 pip install --user speedtest-cli 1 ~/.local/bin/speedtest-cli ","date":"2024-05-11T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405011/","title":"VPS性能测试脚本"},{"content":"项目地址：https://github.com/SpotX-Official/SpotX\n1 iex \u0026#34;\u0026amp; { $(iwr -useb \u0026#39;https://raw.githubusercontent.com/SpotX-Official/spotx-official.github.io/main/run.ps1\u0026#39;) } -new_theme\u0026#34; ","date":"2024-05-10T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405010/","title":"SpotX，Spotify的开源去广告工具"},{"content":"Monica 是一个使用最先进的 AI 模型（GPT-4、Claude 3、Gemini 等）帮助你对话、搜索、写作、翻译的一站式 AI 助手。\n温馨提示：该网站需要魔法\n通过我的邀请链接注册可获得 100 次查询，包含5 Claude 3/GPT-4 \u0026amp; 95 GPT-3.5。还有机会获得无限标准（永久无限的GPT3.5）的查询。\n邀请链接：https://bit.ly/44MQEh9\n获得永久免费的无限 GPT 查询次数！点击链接并下载Monica插件，即可参加限时活动。\n也可扫描二维码：\n","date":"2024-05-09T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405009/","title":"Monica，一个使用最先进的AI模型（GPT-4、Claude3、Gemini 等）帮助你对话、搜索、写作、翻译的一站式 AI 助手。"},{"content":"Monica 是一个使用最先进的 AI 模型（GPT-4、Claude 3、Gemini 等）帮助你对话、搜索、写作、翻译的一站式 AI 助手。\n温馨提示：该网站需要魔法\n通过我的邀请链接注册可获得 100 次查询，包含5 Claude 3/GPT-4 \u0026amp; 95 GPT-3.5。还有机会获得无限标准（永久无限的GPT3.5）的查询。\n邀请链接：https://bit.ly/44MQEh9\n获得永久免费的无限 GPT 查询次数！点击链接并下载Monica插件，即可参加限时活动。\n也可扫描二维码：\n","date":"2024-05-08T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405008/","title":"Monica，ChatGPT AI助手"},{"content":"https://addons.mozilla.org/en-US/firefox/addon/memos-ff/\n之前搭建过的memos，使用频率不高，最近看到有这个插件，装上了确实方便了使用\n","date":"2024-05-07T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405007/","title":"memos插件firefox"},{"content":"最开始的话 在写这篇文章时，我可是广搜资料，尝试了太多方式，都不能远程访问，jupyter官方网站也没找到教程，尝试了一个下午和一个晚上也没整好，导致瞌睡都没睡好，第二天早上，突然灵光乍现，改变了修改的配置文件，然后就成了！！这其中的辛酸，不足道也。\n起因 为了更好，更便捷的使用python，在服务器上安装jupyterlab，随时随地都可访问。\n步骤 一、安装minconda（非必须，但建议） 使用conda可以更好的管理包和环境，所以采用conda的方式安装jupyter和python，环境新建一个，再使用即可\n下载minconda，下载的位置任意即可\n1 curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh 下载完成后的名字为 Miniconda3-latest-Linux-x86_64.sh ，给它赋予可执行权限\n1 chmod +x Miniconda3-latest-Linux-x86_64.sh 安装执行，根据提示安装即可\n1 ./Miniconda3-latest-Linux-x86_64.sh 如果还需要配置环境变量，因为我使用的是zsh，命令如下（不可全抄，路径可能不一样）\n1 2 3 4 5 # zsh环境执行这个 echo \u0026#34;PATH=$PATH:~/minconda/bin\u0026#34; \u0026gt;\u0026gt; ~/.zshrc # bash环境执行这个 echo \u0026#34;PATH=$PATH:~/minconda/bin\u0026#34; \u0026gt;\u0026gt; ~/.bashrc 新建一个python环境\n1 conda create -n lab python=3.10 如果下载速度比较慢，那么需要修改镜像源\n1 2 3 4 5 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/linux-64/ conda config --set show_channel_urls yes 激活环境\n1 conda activate lab 默认情况下，会进入base环境，我的建议是可以关闭默认base环境\n1 conda config --set auto_activate_base false 二、安装jupyterlab 本文采用的是conda安装jupyter，执行如下命令\n1 2 3 4 5 6 7 8 9 10 # 进入conda创建的环境，前文已经创建 conda activate lab # 安装jupyterlab conda install jupyter # 或者，建议安装jupyter,比较全 conda install jupyterlab # 退出环境 conda deactivate 如果使用python自带的pip安装，那么执行\n1 pip install jupyter 三、修改配置，使jupyterlab可以远程连接（重要） 这步是核心，生成的命令有,有的教程用的是jupyter notebook，我需要的jupyter lab，还有的教程用的是jupyter lab，生成的却是jupyter notebook，我想不是很理解这个做法。根据最后结果，生成的文件配置了也是不能生效的，这部分可花了我太多时间了，我一个一个尝试，都以失败告终。这点希望后来人引以为戒\n1 2 3 jupyter server --generate-config jupyter-lab --generate-config jupyter-notebook --generate-config 以下为成功配置：\n直接生成密码配置文件，jupyter远程访问，没有密码怎么可以呢，请妥善保存密码，后续登录jupyter lab会用到\n至于为什么要先生成密码，后续会用到生成的配置文件，默认位置会在家目录生成 .jupyter/jupyter_server_config.json\n我的则是 /home/ecs-user/.jupyter/jupyter_server_config.json，如下所示\n1 2 3 4 5 jupyter server password Enter password: Verify password: [JupyterPasswordApp] Wrote hashed password to /home/ecs-user/.jupyter/jupyter_server_config.json 在 jupyter_server_config.json 文件里面，默认生成就是密码了，如图\n​编辑\n修改生成的 json文件，我们需要添加的内容有\n1 2 3 4 5 \u0026#34;ip\u0026#34;: \u0026#34;*\u0026#34;, \u0026#34;port\u0026#34;: 8899, \u0026#34;open_browser\u0026#34;: false, \u0026#34;allow_remote_access\u0026#34;: true \u0026#34;notebook_dir\u0026#34;: \u0026#34;/home/ecs-user/codespace/jupyterProjects\u0026#34; 根据实际情况修改即可，\nip 直接填 * 号即可\nport 为端口号，你可以更改，\nopen_browser 为默认打开浏览器，服务器资源宝贵，没安装图形化界面，关闭\nallow_remote_access 允许远程访问，这个必须打开\nnotebook_dir jupyter默认打开的位置\n修改后如图所示：\n​编辑\n四、查看配置项（非必须） 在第三步中，给出的配置项从哪知道呢，这就可以用到生成默认配置文件模板了\n1 2 jupyter server --generate-config ─╯ Writing default config to: /home/ecs-user/.jupyter/jupyter_server_config.py 生成的文件默认路径在用户家目录下 .jupyter/jupyter_server_config.py\n重要！！！：如果你生成了该文件，请修改名字，否则会导致jupyter lab启动读取该文件而不读取json文件，而该文件就算修改了也没有效果，谨记！！！\n1 mv jupyter_server_config.py jupyter_server_config.py.1 我们先来瞄一眼大概长什么样\n​编辑\n​编辑\n来对比一下 jupyter_server_config.json\n​编辑\n根据如上图的对比所示，大致也明白了，json文件中该如何修改了。\n五、启动jupyter lab 在 使用 lab 环境下\n1 2 # 使用lab环境 conda activate lab 5.1 前台启动（不建议） 1 2 # 启动jupyter lab jupyter-lab ​编辑\n5.1 后台启动（推荐） 1 2 # 后台启动，标准输出重定向到 /dev/null 标准错误重定向到 标准输出 nohup jupyter-lab \u0026gt;/deb/null 2\u0026gt;\u0026amp;1 \u0026amp; ​编辑\n打开本地浏览器窗口，输入ip:port，输入密码（这个密码在生成密码配置文件的时候输入的密码）\n如果服务端安全组端口没有打开，请自寻资料打开；\n防火墙需要关闭的关闭；\n这里就不介绍了\n输入ip和端口后，界面如下\n​编辑\n输入密码，进入如下界面\n​编辑\n至此，恭喜你，终于完成了，完结撒花 ｡:.ﾟヽ(｡◕‿◕｡)ﾉﾟ.:｡+ﾟ\n​\n","date":"2024-05-06T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405006/","title":"Linux（Debian）安装jupyter lab，实现远程登录访问"},{"content":"","date":"2024-05-05T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405005/","title":"dujiaoka独角卡安装，docker版本"},{"content":"介绍 Certbot 是一个由 Electronic Frontier Foundation (EFF) 开发的免费、开源的工具，用于自动化在 Web 服务器上部署 SSL/TLS 证书。SSL/TLS 证书是用于加密网站与用户之间传输的数据，确保数据传输的安全性和隐私性。\nCertbot 支持大多数常见的 Web 服务器，包括 Apache、Nginx、IIS 等。\n安装 certbot （1）安装snap\ncertbot官方已经说了，各个发行版安装的certbot版本落后，功能不全，推荐我们使用snap安装，我之前就是用的是apt安装，后来一堆问题，血的教训！！\n参考文档：https://snapcraft.io/docs/installing-snap-on-debian\n1 2 3 4 5 6 7 8 # 安装snap sudo apt update sudo apt install snapd # 重启系统 # 安装core sudo snap install core sudo snap refresh core （2）安装certbot\n安装之前确保没有其他方式安装的certbot\n如：apt，pip\n可通过这条命令查看 whereis certbot\n如果有，卸载它们\nsudo apt remove certbot\nsudo pip uninstall certbot\n1 2 sudo snap install --classic certbot sudo ln -s /snap/bin/certbot /usr/bin/certbot （3）查看版本\n1 sudo certbot --version 插件 查看已经安装的插件\n1 sudo certbot plugins nginx 使用snap安装的版本是已经有的，申请方法为：\n（1）先新建一个 nginx的配置文件，如 /etc/nginx/conf.d/abc.conf\n（2）编辑 abc.conf，填入以下模板，根据自己实际情况修改\n1 2 3 4 5 6 7 8 9 10 11 12 server { listen 80; server_name domain.com; location / { proxy_pass http://127.0.0.1:80; # 替换为你的应用程序地址 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } （3）使用 certbot 的nginx插件申请\n1 2 # 可以先查看哪些可以申请，是否列出了需要的域名 sudo certbot --nginx 额外的，申请前保证域名解析到当前的ip\ncertbot-dns-dnspod 此插件用于dns申请的，好处可以用于申请泛域名证书证书。也就是像 *.seektao.cc这种，一次申请，到处使用，方便至极。\ncertbot-dns-dnspod 是dnspod的插件，默认的certbot是没有的，需要手动安装\nGithub地址\nhttps://github.com/tengattack/certbot-dns-dnspod\n1 2 3 sudo snap install certbot-dns-dnspod sudo snap set certbot trust-plugin-with-root=ok sudo snap connect certbot:plugin certbot-dns-dnspod pip\nsudo pip install git+https://github.com/tengattack/certbot-dns-dnspod.git\n安装完成之后新建一个 .ini文件，比如 /etc/certbot/dnspod.ini\n1 2 sudo mkdir /etc/certbot sudo touch /etc/certbot/dnspod.ini 编辑 dnspod.ini，填入下面的内容，点此跳转到dnspod api 申请页面，注意申请的是dnspod token\n1 2 dns_dnspod_api_id = 12345 dns_dnspod_api_token = 1234567890abcdef1234567890abcdef 1 sudo chmod 600 /etc/certbot/dnspod.ini 申请，替换为自己的域名\n1 2 3 4 5 6 7 8 9 10 11 12 sudo certbot certonly -a dns-dnspod \\ --dns-dnspod-credentials /etc/certbot/dnspod.ini \\ -d seektao.cc \\ -d \u0026#34;*.seektao.cc\u0026#34; 接着就是: 输入邮箱， 是否同意注册acme（选Y）， 是否同意发送邮件。。。看自己吧 接着等待，等待。。就完成了 通过日志可以看到证书文件保存在 /etc/letsencrypt/live\n1 2 3 4 5 # 其中 [cert name]/privkey.pem：证书的私钥。 [cert name]/fullchain.pem：在大多数服务器软件中使用的证书文件。 [cert name]/chain.pem：在Nginx \u0026gt;=1.3.7 中用于 OCSP stapling。 [cert name]/cert.pem：会破坏许多服务器配置，不应在未进一步阅读文档的情况下使用。 我们用到 privkey.pem，fullchain.pem即可。\n此节关于 dnspod 申请ssl证书就是如此。\ncertbot-dns-cloudflare 帮助文档：https://certbot-dns-cloudflare.readthedocs.io/en/stable/\n1 2 3 4 5 6 7 8 9 10 11 12 sudo snap install certbot-dns-cloudflare # 如果提示如下信息，输入：sudo snap set certbot trust-plugin-with-root=ok # 接着重新执行 sudo snap install certbot-dns-cloudflare error: cannot perform the following tasks: - Run hook prepare-plug-plugin of snap \u0026#34;certbot\u0026#34; (run hook \u0026#34;prepare-plug-plugin\u0026#34;: ----- Only connect this interface if you trust the plugin author to have root on the system. Run `snap set certbot trust-plugin-with-root=ok` to acknowledge this and then run this command again to perform the connection. If that doesn\u0026#39;t work, you may need to remove all certbot-dns-* plugins from the system, then try installing the certbot snap again. -----) 申请api token，点此跳转\n新建 cloudflare.ini，将下面的值替换为刚才自己申请的\n1 2 # Cloudflare API token used by Certbot dns_cloudflare_api_token = 0123456789abcdef0123456789abcdef01234567 建议修改权限\n1 sudo chmod 600 cloudflare.ini 申请方式：将以下的文件和域名替换为自己的 （1）\n1 2 3 4 sudo certbot certonly \\ --dns-cloudflare \\ --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini \\ -d example.com （2）\n1 2 3 4 5 sudo certbot certonly \\ --dns-cloudflare \\ --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini \\ -d example.com \\ -d www.example.com 自动续期 自动续期添加一个定时任务即可\n1 2 3 4 5 # 设置定时任务 sudo crontab -e # 每月1号的午夜执行 certbot renew 命令来续订证书 0 0 1 * * /usr/local/bin/certbot renew 需要注意自己的certbot执行路径是否正确\nwhich certbot 可以看到certbot执行路径\n关于续期的更多文档可以观看\nhttps://eff-certbot.readthedocs.io/en/latest/using.html#setting-up-automated-renewal\n","date":"2024-05-04T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405004/","title":"Debian下的Certbot安装使用，附nginx使用"},{"content":"https://github.com/jeessy2/ddns-go/releases/tag/v6.6.3\n下载解压\n","date":"2024-05-03T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405003/","title":"ddns-go"},{"content":"Debian 1 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026amp;\u0026amp; bash quick_start.sh Ubuntu 1 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026amp;\u0026amp; sudo bash quick_start.sh ","date":"2024-05-01T16:05:43+08:00","permalink":"https://blog.seektao.cc/p/2405001/","title":"1panel安装"},{"content":"获取所有容器id 1 sudo docker ps | awk {\u0026#39;print $1\u0026#39;} | sed -n \u0026#39;2,$ p\u0026#39; sudo docker ps 获取容器状态\nawk {\u0026lsquo;print $1\u0026rsquo;} 查看第一列\nsed -n \u0026lsquo;2,$ p\u0026rsquo; 查看从第2行到最后一行\n1 docker ps -aq 查看所有容器状态 1 2 3 4 5 # 使用docker自带命令 sudo docker stats -a # 使用获取所有id的方式 sudo docker ps | awk {\u0026#39;print $1\u0026#39;} | sed -n \u0026#39;2,$ p\u0026#39; | xargs sudo docker stats xargs 反向传参\n停止所有容器（谨慎使用） 1 2 # 使用获取所有id的方式 sudo docker ps | awk {\u0026#39;print $1\u0026#39;} | sed -n \u0026#39;2,$ p\u0026#39; | xargs sudo docker rm 查看容器ip 1 docker inspect \u0026lt;container_id|container_name\u0026gt; ","date":"2024-05-01T13:05:46+08:00","permalink":"https://blog.seektao.cc/p/docker-command/","title":"Docker常用命令"},{"content":"引用 国内外综述部分的应用应该占据很大一部分的引用文献。不少于10篇\n这一步引用多也有好处，后续更改正文内容不用担心调很多文献顺序。血的教训。\n","date":"2024-04-16T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404016/","title":"本科毕业设计论文书写注意事项"},{"content":"前言 maccms的环境PHP，对于PHP配置太繁琐，且污染系统环境，所以采用docker的方式安装，docker镜像已经好心人帮忙构建了，用的最多是这个：esme518/docker-maccms10。\n伪静态配置 默认运行环境是apache，按照官方的教程在根目录添加 .htaccess，接着后台开启伪静态是不成功的，因为docker这个版本没有启用rewrite组件。我们这下来介绍如何开启rewrite模块。\n启用 mod_rewrite （1）进入docker容器\n1 docker exec -it \u0026lt;容器id\u0026gt; bash （2）查看是否启用 mod_rewrite\n1 apachectl -M （3）如果输出结果没有 mod_rewrite，则启用\n1 a2enmod rewrite （4）重启 apache，使其生效，运行后会退出容器\n1 service apache2 restart （5）再次进入容器，查看是否启用\n1 apachectl -M 开启伪静态 （1）在根目录添加 .htaccess\n1 vim .htaccess 1 2 3 4 5 6 7 8 \u0026lt;IfModule mod_rewrite.c\u0026gt; Options +FollowSymlinks -Multiviews RewriteEngine on RewriteCond %{REQUEST_FILENAME} !-d RewriteCond %{REQUEST_FILENAME} !-f RewriteRule ^(.*)$ index.php?/$1 [QSA,PT,L] \u0026lt;/IfModule\u0026gt; （2）登录后台，启用伪静态\n路径为：系统-URL地址配置-路由伪静态设置\n路由状态：开启 伪静态状态：开启 测试访问网站，查看是否成功。\n插件 自动更新海报图 maccms10设置定时采集，任务脚本 添加采集的教程暂时省略\n定时任务脚本\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #!/bin/bash # 定义一个函数用于随机延迟 random_delay() { local delay=$(shuf -i 30-60 -n 1) sleep $delay } # 定义日志文件路径 log_file=\u0026#34;$HOME/logs/maccms/maccms_collect_log.log\u0026#34; # 定义请求路径数组 urls=( \u0026#34;https://movie.seektao.cc/api.php/timming/index.html?enforce=1\u0026amp;name=ikun_spare\u0026#34; \u0026#34;https://movie.seektao.cc/api.php/timming/index.html?enforce=1\u0026amp;name=hhzy_m3u8\u0026#34; \u0026#34;https://sesea.dynv6.net/api.php/timming/index.html?enforce=1\u0026amp;name=layazy_m3u8\u0026#34; ) # 函数用于记录日志 log_message() { echo \u0026#34;$(date +\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;) --- $1 --- $2\u0026#34; \u0026gt;\u0026gt; $log_file } echo \u0026#34;采集任务开始...\u0026#34; # 循环遍历请求路径数组 for url in \u0026#34;${urls[@]}\u0026#34; do echo \u0026#34;正在请求：$url\u0026#34; /usr/bin/curl \u0026#34;$url\u0026#34; random_delay if [ $? -eq 0 ]; then log_message \u0026#34;$url\u0026#34; \u0026#34;success\u0026#34; else log_message \u0026#34;$url\u0026#34; \u0026#34;error\u0026#34; fi done echo \u0026#34;所有任务执行完毕。\u0026#34; exit 0 常见问题 https://www.maccms.plus/guide/help.html\n如重装maccms\nhttps://www.maccms.plus/faq/#%E5%A6%82%E4%BD%95%E9%87%8D%E8%A3%85%E8%8B%B9%E6%9E%9Ccms\n1 rm -rf application/data/install/install.lock 查看php信息 在php项目的根目录添加 info.php\n1 2 3 4 echo \u0026#34;\u0026lt;?php phpinfo(); ?\u0026gt; \u0026#34; \u0026gt; info.php 访问这个文件，比如：www.phpsite.com/info.php\n","date":"2024-04-15T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404015/","title":"影视站点maccms搭建教程"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 使用：yt-dlp.exe [选项] URL [URL...] 选项： 通用选项： -h, --help 打印此帮助文本并退出 --version 打印程序版本并退出 -U, --update 将此程序更新到最新稳定版本 --no-update 不检查更新（默认） --update-to [CHANNEL]@[TAG] 升级/降级到特定版本。如果省略，CHANNEL和TAG默认为\u0026#34;stable\u0026#34;和\u0026#34;latest\u0026#34;；有关详细信息，请参阅\u0026#34;UPDATE\u0026#34;。支持的通道：stable、nightly、master -i, --ignore-errors 忽略下载和后处理错误。即使后处理失败，下载也将被视为成功 --no-abort-on-error 在下载错误时继续下一个视频；例如，在播放列表中跳过不可用的视频（默认） --abort-on-error 如果出现错误，则中止进一步视频的下载（别名：--no-ignore-errors） --dump-user-agent 显示当前用户代理并退出 --list-extractors 列出所有支持的提取器并退出 --extractor-descriptions 输出所有支持的提取器的描述并退出 --use-extractors NAMES 使用的提取器名称，用逗号分隔。您还可以使用正则表达式、\u0026#34;all\u0026#34;、\u0026#34;default\u0026#34;和\u0026#34;end\u0026#34;（结束URL匹配）；例如 --ies \u0026#34;holodex.*,end,youtube\u0026#34;。用\u0026#34;-\u0026#34;前缀名称来排除它，例如 --ies default,-generic。使用 --list-extractors 列出提取器名称。（别名：--ies） --default-search PREFIX 用于未经验证的URL的前缀。例如，\u0026#34;gvsearch2:python\u0026#34;为搜索词\u0026#34;python\u0026#34;从谷歌视频下载两个视频。使用值\u0026#34;auto\u0026#34;让yt-dlp猜测（\u0026#34;auto_warning\u0026#34;在猜测时发出警告）。\u0026#34;error\u0026#34;会引发错误。默认值\u0026#34;fixup_error\u0026#34;修复损坏的URL，但如果无法修复则发出错误而不是搜索 --ignore-config 不加载除 --config-locations 给定的配置文件之外的任何配置文件。为了向后兼容，如果在系统配置文件中找到此选项，则不加载用户配置。（别名：--no-config） --no-config-locations 不加载任何自定义配置文件（默认）。当在配置文件中给出时，忽略当前文件中定义的所有先前的 --config-locations --config-locations PATH 主配置文件的位置；可以是配置的路径或其包含目录（\u0026#34;-\u0026#34;为stdin）。可以多次使用，也可在其他配置文件中使用 --flat-playlist 不提取播放列表的视频，只列出它们 --no-flat-playlist 完全提取播放列表的视频（默认） --live-from-start 从开始下载直播流。目前仅支持YouTube（实验性） --no-live-from-start 从当前时间下载直播流（默认） --wait-for-video MIN[-MAX] 等待计划直播流可用。传递最小秒数（或范围）以在重试之间等待 --no-wait-for-video 不等待计划的直播流（默认） --mark-watched 标记视频为已观看（即使使用 --simulate） --no-mark-watched 不标记视频为已观看（默认） --color [STREAM:]POLICY 是否在输出中发出颜色代码，可选地以流（stdout或stderr）为前缀以应用设置。可以是\u0026#34;always\u0026#34;、\u0026#34;auto\u0026#34;（默认）、\u0026#34;never\u0026#34;或\u0026#34;no_color\u0026#34;（使用非彩色终端序列）。可以多次使用 --compat-options OPTS 选项可以帮助保持与youtube-dl或youtube-dlc配置的兼容性，通过恢复yt-dlp所做的一些更改。有关详细信息，请参阅 \u0026#34;默认行为的差异\u0026#34; --alias ALIASES OPTIONS 为选项字符串创建别名。除非别名以破折号\u0026#34;-\u0026#34;开头，否则它将以\u0026#34;--\u0026#34;为前缀。根据Python字符串格式化迷你语言解析参数。例如 --alias get-audio,-X \u0026#34;-S=aext:{0},abr -x --audio-format {0}\u0026#34; 创建选项 \u0026#34;--get-audio\u0026#34; 和 \u0026#34;-X\u0026#34;，它们接受一个参数（ARG0）并扩展为 \u0026#34;-S=aext:ARG0,abr -x --audio-format ARG0\u0026#34;。所有定义的别名都列在 --help 输出中。别名选项可能会触发更多别名；因此，请小心避免定义递归选项。作为安全措施，每个别名最多可触发100次。此选项可以多次使用 ","date":"2024-04-14T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404014/","title":"yt-dlp中文命令文档"},{"content":"八障 修定八个障碍\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 忧 喜 苦 乐 寻 - 寻找 伺 - 等待 出息 入息 八触 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 动 痒 轻 重 冷 暖 涩 滑 相关著作： 《大毘婆裟论》，《俱舍论》\n修定过程最多的两个问题 一、散乱 散乱 大的叫散乱，\n掉举 二、昏沉 昏沉 睡眠 凡夫修道成佛五个步骤 一、资粮位 福德资粮 六和敬：修福德初步\n1 2 3 4 5 6 身和同住：身体绝对的健康，彼此没有摩擦 口和同净：没有说脏话，也没有说讨厌人的话，也没有挑拨是非，也没有说别人的不对 意和同悦：思想意识是相同的，一个团体 戒和同修： 利和同均：共同的利益谁也没有私心，天下为公 见和同解：思想是相同的见解 智慧资粮 二、加行位 三、见道位 不见本性，修法无益\n四、修道位 五、究竟位 成佛成道\n见道以后，悟后起修\n先修后悟\n修道，见道齐头并进\n佛在《楞严经》讲过：自未得度，菩萨发心，自觉已圆，如来应世。\n数息法 - 六妙门 智者大师，天台宗，《六妙门》\n1 2 3 4 5 6 7 8 9 10 11 数息 随息 止息 观 还 净 四臂观音 六子大明咒\n1 2 3 4 5 6 7 8 9 10 11 嗡 嘛 呢 叭（bie） 弥 吽（hong） 理教\n五字真言\n1 观世音菩萨 需要绝对的真诚，相信\n\u0026hellip;..\n诚则灵！！！\n安那般那 根据 《达摩禅经》来的，参合了 《大毘婆裟论》这些，舍利子 ， 目连尊者 等等的著作，修持法门。\n安那（出息）（an ruo） 般那（入息）（bo ruo）\n数息：出 入 息 ，到达 息 数 一，一来一回，数二\n如此一来， 便随息了\n佛 在 《阿含经》告诉罗睺罗尊者，息长知长，息短知短。息冷知冷，息暖知暖\n六字诀 意念 念，口有型，但不出声\n用客家话念\n1 2 3 4 5 6 7 8 9 10 11 呵（ho） - 心 呼（fu） - 脾 嘘（hi） - 肝 吹（chui） - 肾 嘻（hi） - 三焦 呬（si） - 肺 [[佛学]]概论 - 五部 龙树菩萨 《大智度论》 第一部[[佛学]]概论\n佛者觉也，智慧的成就\n《华严经》- 不读华严，不知佛家之富贵，由龙树菩萨从龙宫带回\n无著菩萨 - 大乘，《瑜伽师地论》弥勒菩萨论述，无著菩萨记录，玄奘法师所译。\n世轻菩萨 - 小乘，《俱舍论》\n佛法传入中国后的著作：\n《摩呵止观》\n《宗镜录》- 永明寿禅师，据说是阿弥陀佛化生未来\n《菩提道次第广论》- 宗喀吧大师\n瑜伽师地论 瑜伽：交感，天人交感，与天地精神相往来。\n师：瑜伽师\n地：一步一步\n论：论著\n十七地：\n四颠倒 小乘佛法：\n无常 苦 空 无我 得道之后：\n常：天地与我同根，万物与我一体 乐： 我 净 成佛涅槃法门 《楞严经》佛告阿难，“十方婆伽梵，一路涅槃门”\n十方：东南西北，东南，西南，东北，西北，上下方位\n婆伽梵：佛的别名\n十方婆伽梵，一路涅槃门：十方三世一切佛，只有一条路成佛。\n所有佛法，用功的方法，归纳起来只有一条路，“止观”\n止 是修定的功夫。观 是修慧的功夫。\n止：梵文叫做“奢摩他”，其实就是“三摩地” 观：毗婆舍那\n止：身心宁静到极点\n观：比如水宁静，清晰到极点，一点灰尘掉下去，都能知道，这就是 观 的境界\n禅定 - 四禅八定 四禅\n初禅：离生喜乐 二禅：定生喜乐 三禅：离喜得乐 四禅：舍念清净 《瑜伽师地论》\n三脉七轮 三脉：\n任脉 督脉 中脉 七轮：\n从上至下\n梵穴轮 顶轮 眉间轮 喉轮 心轮 脐轮 海底轮 观世音 音声入道\n观自在\n内观 - 内视\n","date":"2024-04-13T22:04:14+08:00","permalink":"https://blog.seektao.cc/p/xiu-xing-guo-cheng/","title":"修行过程"},{"content":"原文 闻如是。一时佛在拘夷那竭国。如来三月当般涅槃。与诸比丘及诸菩萨。无央数众来诣佛所稽首于地。世尊寂静默无所说光明不现。贤者阿难作礼白佛言。世尊前后说法威光独显。今大众会光更不现。何故如此。其必有故。愿闻其意。佛默不应。如是至三佛告阿难。吾涅槃后法欲灭时。五逆浊世魔道兴盛。魔作沙门坏乱吾道。著俗衣裳乐好袈裟五色之服。饮酒啖肉杀生贪味。无有慈心更相憎嫉。时有菩萨辟支罗汉。精进修德一切敬待。人所宗向教化平等。怜贫念老鞠育穷厄。恒以经像令人奉事。作诸功德志性恩善。不侵害人捐身济物。不自惜己忍辱仁和。设有是人。众魔比丘咸共嫉之诽谤扬恶。摈黜驱遣不令得住。自共于后不修道德。寺庙空荒无复修理转就毁坏。但贪财物积聚不散不作福德。贩卖奴婢耕田种植。焚烧山林伤害众生无有慈心。奴为比丘。婢为比丘尼。无有道德淫侄浊乱男女不别。令道薄淡皆由斯辈。或避县官依倚吾道。求作沙门不修戒律。月半月尽虽名诵戒。厌倦懈怠不欲听闻。抄略前后不肯尽说。经不诵习。设有读者不识字句。为强言是。不咨明者贡高求名。虚显雅步以为荣冀望人供养。众魔比丘命终之后。精神当堕无择地狱。五逆罪中。饿鬼畜生靡不经历恒河沙劫。罪竟乃出生在边国无三宝处。法欲灭时女人精进恒作功德。男子懈慢不用法语。眼见沙门如视粪土无有信心。法将殄没。登尔之时诸天泣泪。水旱不调五谷不熟。疫气流行死亡者众。人民勤苦县官计克。不顺道理皆思乐乱。恶人转多如海中沙。善者甚少若一若二。劫欲尽故日月转短人命转促。四十头白。男子淫侄精尽夭命。或寿六十。男子寿短女人寿长。七八九十或至百岁。大水忽起卒至无期。世人不信故为有常。众生杂类不问豪贱。没溺浮漂鱼鳖食啖。时有菩萨辟支罗汉。众魔驱逐不预众会。三乘入山福德之地。恬怕自守以为欣快寿命延长。诸天卫护月光出世。得相遭值共兴吾道。五十二岁。首楞严经。般舟三昧。先化灭去。十二部经寻后复灭。尽不复现。不见文字。沙门袈裟自然变白。吾法灭时譬如油灯。临欲灭时光明更盛。于是便灭。吾法灭时亦如灯灭。自此之后难可数说。如是之后数千万岁。弥勒当下世间作佛。天下泰平毒气消除。雨润和适五谷滋茂。树木长大人长八丈。皆寿八万四千岁。众生得度不可称计。贤者阿难作礼白佛。当何名斯经。云何奉持。佛言。阿难。此经名为法灭尽。宣告一切宜令分别。功德无量不可称计。四部弟子闻经悲惨惆怅。皆发无上圣真道意。悉为佛作礼而去。\n译文：（来自chatgpt） 听着呢。有一次佛陀在拘夷那竭国。如来三个月后就要般涅槃了。那时有无数的比丘和菩萨前来见佛，向他顶礼膜拜。世尊安静地默不作声，没有散发光明。贤者阿难向佛行礼，问道：“世尊之前后说法时，法力显赫，如今大众聚集，光明却不再显现，这是为何呢？请告知其中的原因，我愿听从。”佛陀沉默不语。后来，连续三次佛陀告诉阿难：“在我般涅槃后，法欲灭时，邪恶之世将兴盛，邪魔将扰乱我的教法，他们会穿俗世的衣服，喜好五颜六色的袈裟，饮酒食肉，杀生贪欲，彼此没有慈悲之心，相互仇恨嫉妒。但会有菩萨和辟支佛，他们努力修行善德，尊重一切，教化平等，怜悯贫穷，关怀老弱，教导人们以经典和形象来崇敬，做各种善事，以仁慈之心对待他人，不伤害他人，舍身助人，不自私自利，忍辱仁和。但会有一些人，被邪魔比丘们诽谤中伤，排斥驱逐，他们不再修行德行，佛寺荒废，不再修缮，而是贪图财富，积聚不散，不做善事，买卖奴隶，耕种土地，破坏山林，伤害众生，没有慈悲之心。他们把奴隶当成比丘，把婢女当成比丘尼，没有德行，淫乱污秽，男女不分，导致佛法衰微。或者避开县官，依赖我的教法，却不遵守戒律，虽然名义上念戒，却厌倦懈怠，不愿听闻，偷换擅改，不诵经典，甚至有些人连文字都不认识，却妄自称是。这些人追求名利，虚有其表，希望得到人们的供养。这些邪魔比丘们在临终后，灵魂将堕入无间地狱，受五逆罪之苦，成为饿鬼或畜生，经历无数劫数的苦难，直到最后投生在没有佛法的国度。在佛法衰微时，妇女将精进修行善德，而男子则懈怠不学佛法，看到沙门就像看待粪土一样，没有信心。佛法将要消失时，天下将会有水旱不调、五谷不熟，疫气流行，众生死亡，人民辛苦，县官不公，众恶人增多如海中的沙，善者极少，劫数将尽，日月将缩短，人的寿命将变短，男子淫乱而早亡，或者寿命只有六十岁，男子寿命短而女子寿命长，有的甚至可以活到七八九十岁，甚至百岁。忽然间大水泛滥，人们丧命无数。因为世人不相信，所以认为这是常态。各种生灵都会受到影响，无论贵贱，都将沉溺其中，鱼和龟都会被淹没，被其他生灵吞食。但会有菩萨和辟支佛，被邪魔驱逐，但他们会进入山中或其他福地，过着宁静的生活，因为他们害怕被邪魔伤害，所以自我保护，以求长寿。天人会保护他们，月光会出现，他们会得到相应的帮助，直到五十二岁时，首楞严经和般舟三昧会先后消失，十二部经也会逐渐失传，文字不再出现，沙门的袈裟也会自然变白。佛法消失时就像灯灭一样，但在即将完全消失之际，光明会更加耀眼，然后完全消失。佛法消失时就像灯灭一样，从那时起，难以计数。在此之后的数千万年里，弥勒菩萨将在世间成佛，天下将太平，毒气将消除，雨水和气候将和适，五谷将茂盛，树木将茁壮成长，人的寿命将延长至八万四千岁，众生将得到救度，无法计数。贤者阿难向佛行礼，问道：“这部经叫什么名字？该如何持守？”佛陀说：“阿难，这部经名为《法灭尽》，应当宣扬给所有人听，其中的功德无量，无法计数。”四部弟子听了经文后，感到悲痛和惆怅，都发愿追求最高的圣道，向佛行礼后离去。\n","date":"2024-04-13T19:04:23+08:00","permalink":"https://blog.seektao.cc/p/fo-shuo-fa-mie-jin-jing/","title":"佛说法灭尽经"},{"content":"中阴身\n","date":"2024-04-13T19:04:11+08:00","permalink":"https://blog.seektao.cc/p/fo-fa-zhong-de-min-ci-jie-shi/","title":"概念"},{"content":"下载常用命令 通用\n1 yt-dlp -f ‘bv[ext=mp4]+ba[ext=m4a]’ –embed-metadata –merge-output-format mp4 链接 文档 中文版\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 使用：yt-dlp.exe [选项] URL [URL...] 选项： 通用选项： -h, --help 打印此帮助文本并退出 --version 打印程序版本并退出 -U, --update 将此程序更新到最新稳定版本 --no-update 不检查更新（默认） --update-to [CHANNEL]@[TAG] 升级/降级到特定版本。如果省略，CHANNEL和TAG默认为\u0026#34;stable\u0026#34;和\u0026#34;latest\u0026#34;；有关详细信息，请参阅\u0026#34;UPDATE\u0026#34;。支持的通道：stable、nightly、master -i, --ignore-errors 忽略下载和后处理错误。即使后处理失败，下载也将被视为成功 --no-abort-on-error 在下载错误时继续下一个视频；例如，在播放列表中跳过不可用的视频（默认） --abort-on-error 如果出现错误，则中止进一步视频的下载（别名：--no-ignore-errors） --dump-user-agent 显示当前用户代理并退出 --list-extractors 列出所有支持的提取器并退出 --extractor-descriptions 输出所有支持的提取器的描述并退出 --use-extractors NAMES 使用的提取器名称，用逗号分隔。您还可以使用正则表达式、\u0026#34;all\u0026#34;、\u0026#34;default\u0026#34;和\u0026#34;end\u0026#34;（结束URL匹配）；例如 --ies \u0026#34;holodex.*,end,youtube\u0026#34;。用\u0026#34;-\u0026#34;前缀名称来排除它，例如 --ies default,-generic。使用 --list-extractors 列出提取器名称。（别名：--ies） --default-search PREFIX 用于未经验证的URL的前缀。例如，\u0026#34;gvsearch2:python\u0026#34;为搜索词\u0026#34;python\u0026#34;从谷歌视频下载两个视频。使用值\u0026#34;auto\u0026#34;让yt-dlp猜测（\u0026#34;auto_warning\u0026#34;在猜测时发出警告）。\u0026#34;error\u0026#34;会引发错误。默认值\u0026#34;fixup_error\u0026#34;修复损坏的URL，但如果无法修复则发出错误而不是搜索 --ignore-config 不加载除 --config-locations 给定的配置文件之外的任何配置文件。为了向后兼容，如果在系统配置文件中找到此选项，则不加载用户配置。（别名：--no-config） --no-config-locations 不加载任何自定义配置文件（默认）。当在配置文件中给出时，忽略当前文件中定义的所有先前的 --config-locations --config-locations PATH 主配置文件的位置；可以是配置的路径或其包含目录（\u0026#34;-\u0026#34;为stdin）。可以多次使用，也可在其他配置文件中使用 --flat-playlist 不提取播放列表的视频，只列出它们 --no-flat-playlist 完全提取播放列表的视频（默认） --live-from-start 从开始下载直播流。目前仅支持YouTube（实验性） --no-live-from-start 从当前时间下载直播流（默认） --wait-for-video MIN[-MAX] 等待计划直播流可用。传递最小秒数（或范围）以在重试之间等待 --no-wait-for-video 不等待计划的直播流（默认） --mark-watched 标记视频为已观看（即使使用 --simulate） --no-mark-watched 不标记视频为已观看（默认） --color [STREAM:]POLICY 是否在输出中发出颜色代码，可选地以流（stdout或stderr）为前缀以应用设置。可以是\u0026#34;always\u0026#34;、\u0026#34;auto\u0026#34;（默认）、\u0026#34;never\u0026#34;或\u0026#34;no_color\u0026#34;（使用非彩色终端序列）。可以多次使用 --compat-options OPTS 选项可以帮助保持与youtube-dl或youtube-dlc配置的兼容性，通过恢复yt-dlp所做的一些更改。有关详细信息，请参阅 \u0026#34;默认行为的差异\u0026#34; --alias ALIASES OPTIONS 为选项字符串创建别名。除非别名以破折号\u0026#34;-\u0026#34;开头，否则它将以\u0026#34;--\u0026#34;为前缀。根据Python字符串格式化迷你语言解析参数。例如 --alias get-audio,-X \u0026#34;-S=aext:{0},abr -x --audio-format {0}\u0026#34; 创建选项 \u0026#34;--get-audio\u0026#34; 和 \u0026#34;-X\u0026#34;，它们接受一个参数（ARG0）并扩展为 \u0026#34;-S=aext:ARG0,abr -x --audio-format ARG0\u0026#34;。所有定义的别名都列在 --help 输出中。别名选项可能会触发更多别名；因此，请小心避免定义递归选项。作为安全措施，每个别名最多可触发100次。此选项可以多次使用 ","date":"2024-04-13T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404013/","title":"yt-dlp下载工具"},{"content":"释迦摩尼佛\n","date":"2024-04-13T14:04:19+08:00","permalink":"https://blog.seektao.cc/p/shi-jia-mo-ni-fo/","title":"释迦摩尼佛"},{"content":"暂无\n","date":"2024-04-12T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404012/","title":"you-get下载器（待续）"},{"content":"有些程序使用的频繁，为了免去手动运行，可以设置开机自启动。\n但是有些程序自身没有开机自启的设置，此情况下，我们可以将程序的快捷方式添加到Windows的【启动】文件夹，实现程序开机自启。\nWindows程序自启动目录：\n1 C:\\Users\\taoone\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup 或者通过 win+r ，输入 shell:startup回车打开。\n","date":"2024-04-11T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404011/","title":"Windows将程序设置开机自启"},{"content":"方式一：手动修改注册表 打开注册表，win+s搜索注册表或者regedit打开注册表，\n定位到\n1 计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell 右键新增项，名字随意，建议有意义的名字，比如 OpenCmdHere\n在 OpenCmdHere 下继续新增项，名字为 command，这个名字不可更改。\n在 command 下修改默认的数据，改为\n1 cmd.exe /k cd \u0026#34;%V\u0026#34; 在OpenCmdHere 下新增字符串值，名称为 Icon，数据为 cmd.exe\n退出查看效果如何\n方式二：执行reg文件 为了简化操作，方式一的注册表我已导出为 .reg文件，只需要新建文件，后缀改为 .reg，把下面的内容粘贴进去执行即可\n1 2 3 4 5 6 7 8 Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\OpenCmdHere] @=\u0026#34;Open Cmd Here\u0026#34; \u0026#34;Icon\u0026#34;=\u0026#34;cmd.exe\u0026#34; [HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\OpenCmdHere\\command] @=\u0026#34;cmd.exe /k cd \\\u0026#34;%V\\\u0026#34;\u0026#34; ","date":"2024-04-10T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404010/","title":"windows右键新增打开cmd"},{"content":"GitHub项目：https://github.com/redis-windows/redis-windows\n下载解压\n安装服务\n1 2 3 4 sc.exe create Redis binpath=RedisService.exe详细所在位置 start= auto # 例如 sc.exe create Redis binpath=D:\\develop\\Redis-7.2.4-Windows-x64-cygwin-with-Service\\RedisService.exe start= auto 服务启动停止\n1 2 3 4 5 6 7 8 # 启动 net start Redis # 停止 net stop Redis # 删除服务 sc.exe delete Redis ","date":"2024-04-09T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404009/","title":"redis-windows安装"},{"content":"前言 此前已经写过一篇关于 picgo 的文章，使用 picgo-core 将 markdown 图片上传至 smms 图床\n本次在此基础上更改一些内容，采用 yarn 的方式全局安装 picgo ，使其不再收到 node 版本变动收到影响。\n为何要切换安装方式？\n之前使用 npm 安装到全局，后来使用 nvm 管理 node 版本，在切换版本后，当前的版本是没有 picgo 的，比如我使用 node 16 安装 picgo，在切换成 node 18 就没有 picgo，解决办法有：\n固定安装依赖位置，每安装切换一个新版本 node，都重新设置全局依赖位置。 直接安装 picgo app。 图形化一直常驻稍显占内存。 安装 yarn 上面的方式都不好管理，所以采用 yarn 来安装。\nyarn 也是一个包管理工具，使用 nvm 切换 node 版本，yarn 也不受影响。\nyarn 下载：Windows 版点此下载\n下载详情页：https://classic.yarnpkg.com/lang/en/docs/install\n不要采用 npm 安装 yarn，如果使用，yarn 也就受到了 node 版本切换的影响。\n安装 picgo 1 yarn global add picgo 将 yarn 全局的安装位置加入环境变量\n大多数情况下，全局安装目录位于以下位置：\nWindows：C:\\Users\\用户名\\AppData\\Local\\Yarn\\bin Mac：/usr/local/share/.config/yarn/global/node_modules Linux：/usr/local/share/.config/yarn/global/node_modules picgo配置 关于 picgo 安装配置信息可以参考之前的文章，这里就不再赘述。\n使用 picgo-core 将 markdown 图片上传至 smms 图床\n附录 关于 nvm ，可以看这里\nnvm，Node 多版本共存的工具\n","date":"2024-04-08T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404008/","title":"picgo自动上传图片到图床（优化版）"},{"content":"mysqldump方式 使用mysql自带的备份工具\n1 2 # 备份整个数据库，整个备份会把数据库名也包含进去，恢复需要保持数据名一致 mysqldump -u root -p maccms \u0026gt; maccms_$(date \u0026#39;+%Y%m%d_%H%M%S\u0026#39;).sql 1 2 # 恢复数据 mysql -u root -p maccms \u0026lt; maccms_20240501_143709.sql ","date":"2024-04-07T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404007/","title":"MySQL备份数据库"},{"content":"数据库 后台有些数据不是以maccms配置文件存在的，而是在数据库中，这里列举出常见数据\n1 2 3 4 视频数据 分类管理 采集接口 用户数据 maccms本地文件 后天的有些数据不是存在数据库中，而是存在本地配置文件中，迁移或者备份需要指导这些文件。\n站点 备份 先进入maccms的配置文件夹下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # 需要在此目录下 $ tree -L 1 . ├── addons ├── api.php ├── application ├── crossdomain.xml ├── extend ├── haokanadmin.php ├── index.php ├── install.php ├── LICENSE ├── macplus ├── README.md ├── robots.txt ├── runtime ├── static ├── template ├── thinkphp ├── upload ├── vendor └── 说明文档 然后开始备份\n1 2 3 4 5 6 7 8 9 10 11 tar -zcvf maccms_backup_$(date \u0026#39;+%Y%m%d_%H%M%S\u0026#39;).tar.gz \\ application/database.php \\ application/route.php \\ application/extra/maccms.php \\ application/extra/bind.php \\ application/extra/timming.php \\ application/extra/vodplayer.php \\ application/extra/voddowner.php \\ application/extra/vodserver.php \\ application/extra/quickmenu.php \\ static/images/logo.jpg 解释如下：（运行上面那个命令）\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # maccms 备份 tar -zcvf maccms_backup_$(date \u0026#39;+%Y%m%d_%H%M%S\u0026#39;).tar.gz \\ # 数据库连接配置 application/database.php \\ # 路由规则 application/route.php \\ # 后台主页 application/extra/maccms.php \\ # ！！！绑定的采集分类，不备份的话新添加相同的采集还需要手动绑定 application/extra/bind.php \\ # 定时任务 application/extra/timming.php \\ # application/extra/vodplayer.php \\ application/extra/voddowner.php \\ application/extra/vodserver.php \\ # 快捷菜单 application/extra/quickmenu.php \\ # 已修改的logo static/images/logo.jpg 恢复 1 tar -zxvf 备份文件 -C 恢复的位置 例如\n1 tar -zxvf maccms_backup_20240511_170345.tar.gz -C ./data/ 主题 备份（根据自己安装的实际情况来）\n1 2 3 4 # mxonepro tar -zcvf mxonepro.tar.gz ./template/mxpro/ ./mxtheme # 恢复\n","date":"2024-04-06T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404006/","title":"maccms数据备份和恢复"},{"content":" 1 2 3 sudo apt install openjdk-17-jdk sudo apt install openjdk-17-jre ","date":"2024-04-05T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404005/","title":"Linux，Debian安装Java17"},{"content":"mongodb的版本为：4.4+\n官方地址：https://www.mongodb.com/docs/v4.4/tutorial/install-mongodb-on-debian/\n1 2 3 4 5 6 7 8 9 10 11 12 sudo apt-get install gnupg curl curl -fsSL https://www.mongodb.org/static/pgp/server-4.4.asc | \\ sudo gpg -o /usr/share/keyrings/mongodb-server-4.4.gpg \\ --dearmor echo \u0026#34;deb [ signed-by=/usr/share/keyrings/mongodb-server-4.4.gpg ] http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\u0026#34; | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list sudo apt-get update sudo apt-get install -y mongodb-org 1 sudo systemctl start mongod ","date":"2024-04-04T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404004/","title":"linux，debain安装mongodb"},{"content":"今天阿里云又发邮件和短信提醒我了，提示我的磁盘占用超过95%，好吧，晚上来看看怎么清理清理。 （1）手动查询出什么文件夹占用了大量的空间\n1 du -h --max-depth=1 / 截图如下 来针对性的进一步查询\n1 2 3 du -h --max-depth=1 /home | sort -hr ## 接下来依葫芦画瓢即可,找到不需要的大文件删除 （2）docker 我平时诸多服务采用的都是docker启动，借助docker自动删除一些不用的镜像，容器，网络，存储卷\n1 2 3 4 5 6 7 8 9 docker image prune -a docker container prune docker volume prune docker network prune docker system prune -a 最后结果\n可以看到清理了9个g个空间。有些应用知识临时测试，不打算长期用就及时删除吧，免得到时候还不好找。\n阿里云的ecs，40个g对于我安装了15个应用来说，只能刚刚好了。\n","date":"2024-04-03T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404003/","title":"Linux存储空间的查询，清理"},{"content":"docker一键启动\n1 docker run -itd -p 8461:8080 -p 1337:1337 -p 7900:7900 --shm-size=\u0026#34;2g\u0026#34; --restart unless-stopped --name gpt4free hlohaus789/g4f:latest 访问地址：\nip:8461 ","date":"2024-04-02T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404002/","title":"gpt4free免费的aigc项目"},{"content":"Nginx 先写好nginx配置文件，\n/etc/nginx/sites-available/movie\n1 2 3 4 5 6 7 8 9 10 11 12 server { listen 80; server_name domain.com; location / { proxy_pass http://127.0.0.1:80; # 替换为你的应用程序地址 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } 再使用 certbot 的nginx插件申请\n1 certbot --nginx -d domain.com ","date":"2024-04-01T15:07:04+08:00","permalink":"https://blog.seektao.cc/p/2404001/","title":"Certbot申请域名的多种方式"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 汝坐道场。销落诸念。其念若尽。则诸离念一切精明。动静不移。忆忘如一。当住此处。入三摩提。如明目人。处大幽暗。精性妙净。心未发光。此则名为色阴区宇。若目明朗。十方洞开。无复幽黯。名色阴尽。是人则能超越劫浊。观其所由。坚固妄想以为其本。 汝坐道场。销落诸念。其念若尽。则诸离念一切精明。动静不移。忆忘如一。当住此处。入三摩提。如明目人。处大幽暗。精性妙净。心未发光。此则名为色阴区宇。若目明朗。十方洞开。无复幽黯。名色阴尽。是人则能超越劫浊。观其所由。坚固妄想以为其本。 彼善男子。修三摩提。受阴尽者。虽未漏尽。心离其形。如鸟出笼。已能成就。从是凡身。上历菩萨六十圣位。得意生身。随往无碍。譬如有人。熟寐寱言。是人虽则无别所知。其言已成音韵伦次。令不寐者。咸悟其语。此则名为想阴区宇。若动念尽。浮想销除。于觉明心。如去尘垢。一伦生死。首尾圆照。名想阴尽。是人则能超烦恼浊。观其所由。融通妄想以为其本。 彼善男子。修三摩提。想阴尽者。是人平常梦想消灭。寤寐恒一。觉明虚静。犹如晴空。无复粗重。前尘影事。观诸世间大地山河。如镜鉴明。来无所黏。过无踪迹。虚受照应。了罔陈习。唯一精真。生灭根元。从此披露。见诸十方十二众生。毕殚其类。虽未通其各命由绪。见同生基。犹如野马。熠熠清扰。为浮根尘究竟枢穴。此则名为行阴区宇。若此清扰熠熠元性。性入元澄。一澄元习。如波澜灭。化为澄水。名行阴尽。是人则能超众生浊。观其所由。幽隐妄想以为其本。 彼善男子。修三摩提。行阴尽者。诸世间性。幽清扰动。同分生机。倏然隳裂。沈细纲纽。补特伽罗。酬业深脉。感应悬绝。于涅槃天。将大明悟。如鸡后鸣。瞻顾东方。已有精色。六根虚静。无复驰逸。内外湛明。入无所入。深达十方十二种类。受命元由。观由执元。诸类不召。于十方界。已获其同。精色不沈。发现幽秘。此则名为识阴区宇。若于群召已获同中。销磨六门。合开成就。见闻通邻。互用清净。十方世界。及与身心。如吠琉璃。内外明彻。名识阴尽。是人则能超越命浊。观其所由。罔象虚无。颠倒妄想以为其本。 汝等存心。秉如来道。将此法门。于我灭后。传示末世。普令众生觉了斯义。无令见魔。自作沈孽。保绥哀救。销息邪缘。令其身心入佛知见。从始成就。不遭歧路。 精真妙明。本觉圆净。非留死生。及诸尘垢。乃至虚空。皆因妄想之所生起。斯元本觉妙明精真。妄以发生诸器世间。如演若多。迷头认影。妄元无因。于妄想中。立因缘性。迷因缘者。称为自然。彼虚空性。犹实幻生。因缘自然。皆是众生妄心计度。阿难。知妄所起。说妄因缘。若妄元无。说妄因缘。元无所有。何况不知。推自然者。是故如来与汝发明。五阴本因。同是妄想。 是五受阴。五妄想成。汝今欲知因界浅深。唯色与空。是色边际。唯触及离。是受边际。唯记与忘。是想边际。唯灭与生。是行边际。湛入合湛。归识边际。此五阴元。重叠生起。生因识有。灭从色除。理则顿悟。乘悟并销。事非顿除。因次第尽。 ","date":"2024-03-20T12:03:27+08:00","permalink":"https://blog.seektao.cc/p/len-yan-jing-1/","title":"楞严经：增补楞严法要串珠修证次第"},{"content":"南无（mo）阿（a）弥陀佛\n南无 \u0026mdash; 皈依 阿 \u0026mdash; 无量无边 弥陀 \u0026mdash; 寿与光\n阿弥陀佛 \u0026mdash; 无量光寿佛 \u0026mdash; 无量光无量寿\n普贤如来根本咒\n1 2 3 4 5 嗡 ------------ 喉咙带鼻音到脑部，打通脑部气脉 阿 (a) ------------ 胸部发音 吽 ------------ 丹田发音 ","date":"2024-03-20T12:03:19+08:00","permalink":"https://blog.seektao.cc/p/nan-mo-a-mi-tuo-fo/","title":"南无阿弥陀佛"},{"content":"更新软件包缓存\n1 apt update 安装软件\n1 apt install 名字 卸载软件\n1 apt remove 名字 更新软件包\n1 apt upgrade 卸载软件并删除与之关联的配置文件\n1 apt purge 名字 ","date":"2024-03-20T12:03:03+08:00","permalink":"https://blog.seektao.cc/p/apt-command/","title":"apt常见命令"},{"content":"前言 最近在看动漫，但是好多站点要么没有，要么搜不到，有些搜索还有时间限制，或者从网盘转存，太繁琐了。所以想在自己的服务器新增一个看影视的功能，毕竟有时候找资源是真的痛苦。\n加上之前了解到GitHub上有一个在线采集影视的项目，正好今天上上手，自己动手部署，丰衣足食。\n项目介绍 项目框架为 Go+Vue。用到了 Redis和 Mysql，经过我的测试，docker启动运行需要差不多 500M 的内存，主要是MySQL占用内存较大，感觉可以优化为 postgresql 来大大降低内存占用。\n项目地址：https://github.com/ProudMuBai/GoFilm\n项目提供的教程需要自己构建docker镜像，并且构建的镜像需要特别大，对此我进行了优化，并讲 docker 镜像上传到了 docker仓库，所以你可以直接使用我构建的镜像而不用自己手动构建\n截至目前构建的最新版本为\n1 2 3 提交编号：67097207074deffb884c2ba88c935dc35efd46f0 日期：Feb 26, 2024 前置准备 安装好 docker，如果没有，请参考 docker安装。\n部署 方式一： xxxxxxxxxx # 前台运行./cms​# 后台运行nohup ./cms shell\n为了简单起见，采用 root 用户，如果不是，请自己注意权限问题，加上 sudo提权。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 进入 /opt/目录 cd /opt/ # 克隆项目 git clone https://github.com/muyiacc/GoFilm.git # 复制 GoFilm的 film目录到 /opt/ cp -r GoFilm/film ./ # 进入film cd film # 创建容器 docker compose up -d 方式二 使用项目作者提供的教程，请参考：film项目安装\n初始化 部署完成后还需进入管理端设置采集主站点\n浏览器输入 ip/manage，进入管理界面，默认用户和密码为 admin\n\u0026ldquo;HD(bf)\u0026rdquo;, Uri: https://bfzyapi.com/api.php/provide/vod/\n\u0026ldquo;HD(kk)\u0026rdquo;, Uri: https://kuaikan-api.com/api.php/provide/vod/from/kuaikan/\n\u0026ldquo;HD(fs)\u0026rdquo;, Uri: https://www.feisuzyapi.com/api.php/provide/vod/\n\u0026ldquo;HD(bfBk)\u0026rdquo;, Uri: http://by.bfzyapi.com/api.php/provide/vod/\n经测试，推荐使用的采集站\n删除容器 1 docker compose down ","date":"2024-03-11T00:03:15+08:00","permalink":"https://blog.seektao.cc/p/2403011/","title":"开源多播放源采集在线影视GoFilm"},{"content":" 使用 pg_dump 命令备份整个数据库：\n1 pg_dump -U username -d dbname \u0026gt; backup.sql username 是数据库用户的用户名。 dbname 是要备份的数据库的名称。 backup.sql 是备份文件的名称，你可以根据需要自定义。 备份特定表：\n如果你只想备份特定的表，可以使用以下命令：\n1 pg_dump -U username -d dbname -t tablename \u0026gt; table_backup.sql tablename 是要备份的表的名称。 备份后台数据库：\n如果要备份远程数据库，可以使用以下命令：\n1 pg_dump -h hostname -U username -d dbname \u0026gt; backup.sql hostname 是数据库服务器的主机名或 IP 地址。 备份包括所有者和权限信息：\n有时候你可能希望备份时包括所有者和权限信息。你可以使用以下命令：\n1 pg_dump -U username -d dbname -O -x \u0026gt; backup.sql -O 选项用于不包括所有者信息。 -x 选项用于不包括访问权限信息。 备份完成后，你会在当前目录下找到生成的备份文件。\n请注意，备份数据库时，确保数据库连接是安全的，并且备份文件存储在安全的位置。备份完成后，你可以使用 psql 命令来还原数据库，命令如下：\n1 psql -U username -d dbname \u0026lt; backup.sql 这将从备份文件中还原数据库。\n","date":"2024-03-09T00:03:15+08:00","permalink":"https://blog.seektao.cc/p/2403009/","title":"PostgreSQL备份数据库"},{"content":"查看ssl证书详细信息\n1 2 3 openssl x509 -in /path/to/public.crt -text -noout openssl ec -in /path/to/private.key -text -noout 比如快速查找包含的域名\n1 openssl x509 -in cert.pem -text -noout | grep seektao.cc ","date":"2024-03-08T00:03:35+08:00","permalink":"https://blog.seektao.cc/p/2403008/","title":"openssl小小使用"},{"content":"介绍 为什么需要通过官方仓库安装？ 答：系统默认的软件源版本太低\nDebian 参考教程 https://nginx.org/en/linux_packages.html#Debian\n前提条件：\n1 sudo apt install curl gnupg2 ca-certificates lsb-release debian-archive-keyring 导入密钥，验证包的正确性：\n1 2 curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\ | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg \u0026gt;/dev/null 验证下载的文件是否包含正确的密钥：\n1 gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg 输出应包含完整指纹573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62如下:\npub rsa2048 2011-08-19 [SC] [expires: 2024-06-14] 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 uid nginx signing key signing-key@nginx.com\n如果指纹不同，删除文件。\n二选一：\n要为稳定的 nginx 包设置 apt 存储库，请运行以下命令： 1 2 3 echo \u0026#34;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/nginx.list 如果希望使用 mainline nginx 包，请改为运行以下命令: 1 2 3 echo \u0026#34;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/nginx.list 设置存储库固定，使用Nginx官方的软件包而不是发行版提供的软件包：\n1 2 echo -e \u0026#34;Package: *\\nPin: origin nginx.org\\nPin: release o=nginx\\nPin-Priority: 900\\n\u0026#34; \\ | sudo tee /etc/apt/preferences.d/99nginx 要安装 nginx，请运行以下命令:\n1 2 sudo apt update sudo apt install nginx Ubuntu 参考教程 https://nginx.org/en/linux_packages.html#Ubuntu\n前提条件：\n1 sudo apt install curl gnupg2 ca-certificates lsb-release ubuntu-keyring 导入密钥，验证包的正确性：\n1 2 curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\ | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg \u0026gt;/dev/null 验证下载的文件是否包含正确的密钥：\n1 gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg 输出应包含完整指纹573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62如下:\npub rsa2048 2011-08-19 [SC] [expires: 2024-06-14] 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 uid\n如果指纹不同，删除文件。\n二选一：\n要为稳定的 nginx 包设置 apt 存储库，请运行以下命令： 1 2 3 echo \u0026#34;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ http://nginx.org/packages/ubuntu `lsb_release -cs` nginx\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/nginx.list 如果希望使用 mainline nginx 包，请改为运行以下命令: 1 2 3 echo \u0026#34;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/nginx.list 设置存储库固定，使其更喜欢我们的软件包而不是发行版提供的软件包：\n1 2 echo -e \u0026#34;Package: *\\nPin: origin nginx.org\\nPin: release o=nginx\\nPin-Priority: 900\\n\u0026#34; \\ | sudo tee /etc/apt/preferences.d/99nginx 要安装 nginx，请运行以下命令:\n1 2 sudo apt update sudo apt install nginx ","date":"2024-03-07T00:03:15+08:00","permalink":"https://blog.seektao.cc/p/2403007/","title":"Nginx篇：通过apt的nginx官方仓库安装"},{"content":"nginx-proxy-manager 可以自动续期ssl证书，使用docker搭建也比较方便。\n今天我的网站出现证书过期，然后我去管理端手动续期也出现了失败，但是没有报具体的错误，接着升级了镜像，新开容器也没有解决。\n还好这个问题之前我也遇见过，可以通过重新申请域名ssl证书复现，让其给出真正的报错，结果和之前一样，缺乏 “zope”模块。\n错误大概如下：\n1 The \u0026#39;certbot_dns_dnspod.dns_dnspod\u0026#39; plugin errored while loading: No module named \u0026#39;zope\u0026#39;. You may need to remove or update this plugin. The Certbot log will contain the full error details and this should be reported to the plugin developer. 其中的 No module named \u0026lsquo;zope\u0026rsquo;，就是重点，解决办法就是进入容器，安装 zope\n1 2 3 4 sudo docker exec -it [容器的id] /bin/bash # 进入容器之后 pip install zope -i https://pypi.tuna.tsinghua.edu.cn/simple 等待安装完成，ctrl+p，ctrl+q 退出即可。\n接着再重新去手动续期下即可。\n","date":"2024-03-05T00:03:15+08:00","permalink":"https://blog.seektao.cc/p/2403005/","title":"nginx-proxy-manager申请证书失败之缺乏zope模块【已解决】"},{"content":"暂无\n","date":"2024-03-04T00:03:15+08:00","permalink":"https://blog.seektao.cc/p/2403004/","title":"MySQL内存优化"},{"content":"官网：https://fvm.app/\n安装 Windows （1）管理员方式打开powershell，安装chocolatey\n1 Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;)) （2）安装好 chocolatey，使用 chocolatey 安装 fvm\n1 choco install fvm 结果出错\n1 2 3 4 5 6 7 8 ERROR: The remote file either doesn\u0026#39;t exist, is unauthorized, or is forbidden for url \u0026#39;https://storage.googleapis.com/dart-archive/channels/stable/release/3.1.3/sdk/dartsdk-windows-x64-release.zip\u0026#39;. Exception calling \u0026#34;GetResponse\u0026#34; with \u0026#34;0\u0026#34; argument(s): \u0026#34;The underlying connection was closed: An unexpected error occurred on a send.\u0026#34; This package is likely not broken for licensed users - see https://docs.chocolatey.org/en-us/features/private-cdn. Environment Vars (like PATH) have changed. Close/reopen your shell to see the changes (or in powershell/cmd.exe just type `refreshenv`). The install of dart-sdk was NOT successful. Error while running \u0026#39;C:\\ProgramData\\chocolatey\\lib\\dart-sdk\\chocolateyInstall.ps1\u0026#39;. See log for details. Progress: Downloading fvm 3.0.14... 100% 应该是网络问题，国内无法访问，当初下载flutter都是使用的镜像。\nLinux 1 curl -fsSL https://fvm.app/install.sh | sudo bash ","date":"2024-03-03T00:03:15+08:00","permalink":"https://blog.seektao.cc/p/2403003/","title":"FVM，Flutter的多版本管理工具"},{"content":"情景一：主机连接容器 需求：主机内的某个应用需要用到容器启动的数据库，主机的应用关于该容器数据库的host，port该如何填写？\n情景二：容器连接容器 第一种：同一配置文件 第二种：不同配置文件 新建一个网络，把容器都加入到这个网络里\n1 docker network create my_network 容器1：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 version: \u0026#39;3.3\u0026#39; services: maccms10: image: esme518/docker-maccms10 container_name: maccms10 volumes: - ./data:/var/www/html ports: - 2419:80 networks: - my_network environment: - DB_HOST=mariadb - DB_PORT=3306 networks: my_network: external: true 容器2：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 version: \u0026#39;3.3\u0026#39; services: mariadb: image: mariadb:10.3 container_name: mariadb volumes: - ./mysql:/var/lib/mysql - ./backup:/backup environment: - MARIADB_ROOT_PASSWORD=12345678 ports: - 2420:3306 networks: - my_network networks: my_network: external: true 情景三：容器连接主机 1 2 3 4 5 6 7 8 9 10 11 12 version: \u0026#39;3.3\u0026#39; services: maccms10: image: esme518/docker-maccms10 container_name: maccms10 volumes: - ./data:/var/www/html ports: - 2419:80 environment: - DB_HOST=host.docker.internal # 使用特殊的DNS名称连接到主机上的数据库 - DB_PORT=3306 # 主机上数据库的端口 ","date":"2024-03-02T00:03:11+08:00","permalink":"https://blog.seektao.cc/p/2403002/","title":"Docker容器和主机互相连接的三种情景"},{"content":"前言 之前一直使用压缩包的方式安装MySQL，后来发现新装系统要下载指定版本，版本不一定好找，安装过程的命令复用性不高，并不好用， 遂采用apt仓库安装。\n卸载 卸载系统自带，删除残留的文件\n1 2 3 4 5 dpkg -l | grep -E \u0026#39;(mysql|maria)\u0026#39; sudo apt remote --purge 软件包名字 sudo rm -rf /etc/mysql /var/lib/mysql 安装 mysql-apt-config 下载 mysql-apt-config 下载地址：https://dev.mysql.com/downloads/repo/apt/\n1 2 # 一键命令 wget https://repo.mysql.com//mysql-apt-config_0.8.32-1_all.deb 历史版本： wget https://dev.mysql.com/get/mysql-apt-config_0.8.29-1_all.deb\n安装 mysql-apt-config 1 sudo apt install ./mysql-apt-config_0.8.32-1_all.deb 弹出配置界面，如果需要配置，回车进入，一般默认即可，所以直接键盘上下键选择ok，即可添加成功\n更新软件仓库 1 sudo apt update 安装MySQL 1 2 3 4 5 6 7 8 9 10 11 sudo apt install mysql-community-client-plugins sudo apt install mysql-community-client-core sudo apt install mysql-common sudo apt install mysql-community-client sudo apt install mysql-client sudo apt install mysql-community-server 最后弹出图形界面，设置密码即可\n","date":"2024-03-01T00:03:15+08:00","permalink":"https://blog.seektao.cc/p/2403001/","title":"Linux使用APT仓库安装MySQL"},{"content":"邮箱\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 chatgpt412@seektao.cc chatgpt920@seektao.cc chatgpt716@seektao.cc chatgpt2@seektao.cc chatgpt269@seektao.cc chatgpt428@seektao.cc chatgpt873@seektao.cc chatgpt771@seektao.cc chatgpt829@seektao.cc chatgpt259@seektao.cc 注册ChatGPT：https://chat.openai.com\n获取API key：https://platform.openai.com\nsess-QULZqoAkcxCtrGNkOT3MZNHWUmdENYIqOVYwUulz sess-3ZHvR7crqpBtrJj0D94cXdQxA6P2r24RipUtuNgm\n","date":"2023-12-14T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312014/","title":"批量注册chatgpt账号"},{"content":"1. 概述 本地的一些环境如何部署到公网访问，本地在有公网ip的情况下实现\n2. 准备工作 公网ip ","date":"2023-12-13T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312013/","title":"使用Windows10搭建DDNS服务和HTTP服务"},{"content":" 视频讲解：Bilibili/B站 功能：实现 mpv 播放器 自动播放 下一个视频 脚本名称：autoload.lua 脚本地址：Github ","date":"2023-12-12T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312012/","title":"MPV播放器指南-脚本-第一期：自动连播"},{"content":" Windows10专业工作站版本\n1. 概述 RuskDesk 是一个使用 rust语言编写的开源的远程控制，支持自行搭建服务端，本次就来介绍一下如何在 windows上搭建。\n官网地址：https://rustdesk.com\n2. 搭建RustDesk Server 下载两个工具：NSSM ，RuskDesk Server\n解压它们，放到各自的文件夹下，把 NSSM 加入到系统的环境变量，确保可随处执行\nxxxxxxxxxx nssm stop JupyterLabService​​nssm remove JupyterLabServicecmd\n1 2 nssm install \u0026#34;RustDesk hbbs service\u0026#34; \u0026#34;C:\\Program Files\\RustDesk Server\\hbbs.exe\u0026#34; -r 0.0.0.0 -k _ nssm install \u0026#34;RustDesk hbbr service\u0026#34; \u0026#34;C:\\Program Files\\RustDesk Server\\hbbr.exe\u0026#34; -k _ 比如我的如下\n1 nssm install \u0026#34;RustDesk hbbs service\u0026#34; \u0026#34;D:\\Program Files\\rustdesk-server-windows-x86_64\\hbbs.exe\u0026#34; -r 0.0.0.0 -k _ 执行完成之后应该在 服务 能够看到这个 启动服务\n1 nssm start \u0026#34;RustDesk hbbs service\u0026#34; 关闭服务\n1 nssm stop \u0026#34;RustDesk hbbs service\u0026#34; 3. 客户端 下载客户端：点此下载\n安装到本地，安装过程不做介绍。\n安装完成应该如下 点击我所标记的地方，进入设置 接着点击网络，解锁网络设置 填如id服务器，和Key。等等，我发现了个问题，web端官方给出的文档是 21114端口，好像无法访问，先打开打开cmd，查看监听的端口， 果然没有21114端口，然后我去github官方找doc了， 搜索 21114，有一个相关的回答，官方说web端被移除了，合着我白忙活了？？\n不过别慌，不就是没有web客户端嘛，先填写本机ip试试先，至于这个 key嘛，如果你留意文件夹还记得是否还记得有个 .pub结尾的。熟悉证书的都有点灵感了，这个一般都是公钥，使用记事本打开复制到key中试试，结果如下\n返回主页，看中间的底部，有个 就绪字样 可以了？？为了确定到底是不是，然后我就把那个id服务器随便填了一个ip，发现还真就不行了，多试了几次也还是这样，填回自己的就好了，为了给你们看看还是截图为证\n好了，关于这部分应该就是可以了，至于远程连接实际有没有问题，下次再测试测试，现在已经晚上12：23了。\n在后来我找解决web客户端的时候，我发现 rustdesk server 文件夹下有个RustDeskServer.Setup.exe 好家伙，这不就是server安装程序嘛，我还用nssm干嘛，点击下一步下一步就好了，后面测试了确实是可以的，不过有一步是弹出个程序框，需要点击启动。好了，现在真的12：30了。\n","date":"2023-12-11T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312011/","title":"Windows搭建RustDesk-Server并使用-1"},{"content":"1. 概述 想在 Windows上搭建 Jupyter-lab服务，开启自启，有公网ip的同学还可以远程访问，实现远程办公。\n1 conda install jupyterlab 1 2 3 4 5 6 nssm install JupyterLabService \u0026#34;jupyter-lab\u0026#34; \u0026#34;--config=C:\\path\\to\\your\\jupyter_config.json\u0026#34; nssm install JupyterLabService \u0026#34;D:\\develop\\miniconda3\\Scripts\\jupyter-lab.exe\u0026#34; \u0026#34;--config=C:\\path\\to\\your\\jupyter_config.json\u0026#34; sc create JupyterLabService binPath= \u0026#34;\\\u0026#34;D:\\develop\\miniconda3\\Scripts\\jupyter-lab.exe\\\u0026#34; --config=C:\\path\\to\\your\\jupyter_config.json\u0026#34; start= auto 使用以下命令来启动这个服务：\n1 nssm start JupyterLabService 这将会启动 JupyterLab 服务，并让它使用你指定的 jupyter_server_config.json 配置文件。\n1 2 3 4 nssm stop JupyterLabService nssm remove JupyterLabService ","date":"2023-12-10T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312010/","title":"Windows搭建Jupyter-lab服务，加入系统服务，开机自启。指定端口和默认路径，开启远程访问，配合公网ip，可远程工作。(未完成)"},{"content":"工具下载 下载 Unlocker: https://github.com/DrDonk/unlocker/releases/download/v4.2.7/unlocker427.zip\n下载 VMware17: https://www.vmware.com/go/getworkstation-win\n下载 MacOS 13: https://archive.org/download/macos-collection/Public%20Betas/macOS%2013%20%28Ventura%29/Ventura%2013.0%20v18.0.03.iso\n建议使用 motix 下载，速度更快，有些可能需要用点上网手段才可以下载： Motrix: https://dl.motrix.app/release/Motrix-Setup-1.8.19.exe\nVM新建虚拟机选择MacOS，版本选择13即可\n1 2 3 4 5 6 7 8 9 10 11 12 smbios.reflectHost = \u0026#34;TRUE\u0026#34; hw.model = \u0026#34;MacBookPro14,3\u0026#34; board-id = \u0026#34;Mac-551B86E5744E2388\u0026#34; cpuid.0.eax = \u0026#34;0000:0000:0000:0000:0000:0000:0000:1011\u0026#34; cpuid.0.ebx = \u0026#34;0111:0101:0110:1110:0110:0101:0100:0111\u0026#34; cpuid.0.ecx = \u0026#34;0110:1100:0110:0101:0111:0100:0110:1110\u0026#34; cpuid.0.edx = \u0026#34;0100:1001:0110:0101:0110:1110:0110:1001\u0026#34; cpuid.1.eax = \u0026#34;0000:0000:0000:0001:0000:0110:0111:0001\u0026#34; cpuid.1.ebx = \u0026#34;0000:0010:0000:0001:0000:1000:0000:0000\u0026#34; cpuid.1.ecx = \u0026#34;1000:0010:1001:1000:0010:0010:0000:0011\u0026#34; cpuid.1.edx = \u0026#34;0000:0111:1000:1011:1111:1011:1111:1111\u0026#34; featureCompat.enable = \u0026#34;TRUE\u0026#34; 1 2 3 4 5 6 7 8 9 10 11 12 13 cpuid.0.eax = \u0026#34;0000:0000:0000:0000:0000:0000:0000:1011\u0026#34; cpuid.0.ebx = \u0026#34;0111:0101:0110:1110:0110:0101:0100:0111\u0026#34; cpuid.0.ecx = \u0026#34;0110:1100:0110:0101:0111:0100:0110:1110\u0026#34; cpuid.0.edx = \u0026#34;0100:1001:0110:0101:0110:1110:0110:1001\u0026#34; cpuid.1.eax = \u0026#34;0000:0000:0000:0001:0000:0110:0111:0001\u0026#34; cpuid.1.ebx = \u0026#34;0000:0010:0000:0001:0000:1000:0000:0000\u0026#34; cpuid.1.ecx = \u0026#34;1000:0010:1001:1000:0010:0010:0000:0011\u0026#34; cpuid.1.edx = \u0026#34;0000:0111:1000:1011:1111:1011:1111:1111\u0026#34; smbios.reflectHost = \u0026#34;TRUE\u0026#34; hw.model = \u0026#34;MacBookPro14,3\u0026#34; board-id = \u0026#34;Mac-551B86E5744E2388\u0026#34; keyboard.vusb.enable = \u0026#34;TRUE\u0026#34; mouse.vusb.enable = \u0026#34;TRUE\u0026#34; ","date":"2023-12-09T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312009/","title":"VMware17安装MacOS13（待）"},{"content":"在初次使用 Redis 时，以下是一些常见的需要修改的命令：\n修改绑定地址：\n1 bind 127.0.0.1 默认情况下，Redis 绑定在本地回环地址 127.0.0.1。如果您想让 Redis 可以从其他主机访问，可以将此地址修改为服务器的 IP 地址或 0.0.0.0，表示接受来自任何地址的连接。\n修改监听端口：\n1 port 6379 默认情况下，Redis 监听端口 6379。如果您需要使用其他端口，可以将此值修改为所需的端口号。\n配置密码：\n1 requirepass your_password 默认情况下，Redis 未设置密码。为了增加安全性，您可以设置密码以保护 Redis 服务器。将 your_password 替换为您自己的密码。\n设置持久化选项：\n1 save 60 1000 这是示例持久化选项的配置。Redis 允许您将数据持久化到磁盘，以便在重启后恢复数据。上述配置表示在 60 秒内，如果有至少 1000 个键被修改，则自动执行持久化操作。您可以根据需求调整这些值。\n配置最大内存限制：\n1 maxmemory 2GB 默认情况下，Redis 不设置最大内存限制。通过设置最大内存限制，您可以防止 Redis 在使用过多内存时导致服务器性能下降或崩溃。将 2GB 替换为您希望设置的内存限制值。\n这些是一些常见的需要修改的 Redis 配置命令，您可以根据自己的需求进行相应的修改。修改完成后，记得重新启动 Redis 服务器使更改生效。\n1 2 3 4 daemonize protected-mode bind requirepass ","date":"2023-12-08T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312008/","title":"Redis初始配置"},{"content":"1. MPV播放器 1.1. 概述 a free, open source, and cross-platform media player\n简单来说，就是一个开源的，多平台的媒体播放器，支持视频，音频，图片等等。\n托管地址：https://github.com/mpv-player/mpv\n官网：https://mpv.io/\n下载地址：https://mpv.io/installation/\n文档：https://mpv.io/manual/stable/\n1.2. 下载安装 本次以Win10平台为例，下载最新稳定版：点击开始下载。\n下载完成之后解压，不要解压到C盘下（权限太高），建议放到其他盘符，比如我的是解压路径是 D:\\Program Files\\mpv-x86_64-v3-20231210-git-443c248\\，双击 mpv.exe 即可运行mpv播放器。\n关联格式：快速打开mpv\n进入解压目录下的 installer 文件夹，有个 mpv-install.bat 管理员权限 运行，等待完成，按任意键退出。\n创建属于自己配置文件夹，用于自定义配置，安装插件等\n进入解压的目录，新建 portable_config文件夹，以后配置就放在这个文件夹下， 进入 portable_config文件夹， 新建 mpv.conf文件，这代表了mpv的配置文件， 新建 input.conf文件，存放自定义的快捷键配置， 新建 scripts文件夹，以后安装第三方脚本就放在这个目录下， 新建 script-opts文件夹，存放第三方脚本配置。 到此安装基本完成。\n2. 脚本 为了更好的体验，自定义配置。\n为了避免冗余，以下所有脚本都遵循上述规范的配置，即：\nscripts : 脚本文件 input.conf : 自定义快捷键 mpv.conf : mpv配置 2.1. 杜比视界 杜比视界 DV HDR 常见的播放器都不支持，mpv只需要在 mpv.conf 中添加两行代码即可让颜色正常化\n不过加上之后内存占用变高，看情况开吧。\n1 2 vo=gpu-next # 杜比视界颜色正常化 gpu-context=win # 杜比视界颜色正常化 2.2. 缩略图 需要第三方脚本支持：https://github.com/po5/thumbfast\n下载项目下的 thumbfast.lua，osc.lua，提示：点击可直接下载。\n下载之后把 thumbfast.lua 放入 mpv目录/portable_config\\，也就是 mpv.conf 同目录。\nosc.lua 放入 mpv目录/portable_config\\scripts。\n在 input.conf 加入一行\n1 Ctrl+r load-script \u0026#34;~~home/thumbfast.lua\u0026#34;;show-text \u0026#34;载入略缩图脚本\u0026#34; 重启mpv，即可生效，需要启用时， 按 ctrl+r即可加载缩略图。\n如果需要默认加载，把 thumbfast.lua 放入 scripts 中即可。不过占内存，不建议。\n2.3 文件浏览器 功能：在 mpv 中浏览和打开文件和文件夹。\n该脚本在 mpv API 之外不使用任何东西，因此在所有平台上都应该是相同的。浏览器可以上下移动目录，开始播放文件和文件夹，或者将它们添加到队列中。\n地址：https://github.com/CogentRedTester/mpv-file-browser\n快捷键\nCtrl+o 打开脚本，进入选择 键盘上下键 选择列表 enter 选中播放 键盘左右键 切换文件夹 ECS 关闭列表 脚本配置\nmpv目录\\portable_config\\script-opts\\file_browser.conf\n1 2 # 注意使用英文 , 隔开 root=~/,C:/,D:/,E:/ 2.4 最近播放 https://github.com/hacel/recent\n快捷键 ` ： 打开最近播放\n配置\nmpv目录\\portable_config\\script-opts\\recent.conf\nauto_run_idle=no\t关闭mpv打开时显示最近播放，默认为yes\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 auto_save=yes save_bind= auto_save_skip_past= auto_run_idle=no\t# 关闭mpv打开时显示最近播放，默认为yes write_watch_later=yes display_bind=` mouse_controls=yes log_path=history.log date_format=%d/%m/%y %X show_paths=no split_paths=yes font_scale=50 border_size=0.7 hi_color=H46CFFF ellipsis=no 3. mpv.conf 1 2 3 vo=gpu-next # 杜比视界颜色正常化 gpu-context=win # 杜比视界颜色正常化 volume=70\t# 默认音量设为70 4. 常用快捷键 以下皆为内置快捷键\n1 2 3 4 5 6 7 8 9 f\t全屏 j J\t循环当前的字幕 [ ] 将当前播放速度减小/增加10% backspace\t将速度重置为正常 m\t静音，再按取消静音 9 0\t调小音量/调大音量 space p\t暂停，再按取消暂停 q\t停止播放并退出 Q\t停止播放并退出，如果重新播放，尽可能恢复播放的文件的播放位置 关于快捷键可查看 附录-快捷键\n附录 快捷键 图示：\n英文版\n中文版：\n快捷键 中文 英文 LEFT and RIGHT 向后/向前跳转5秒。Shift+箭头进行1秒精确跳转（见\u0026ndash;hr-seek）。 Seek backward/forward 5 seconds. Shift+arrow does a 1 second exact seek (see \u0026ndash;hr-seek). UP and DOWN 向前/向后跳转1分钟。Shift+箭头进行5秒精确跳转（见\u0026ndash;hr-seek）。 Seek forward/backward 1 minute. Shift+arrow does a 5 second exact seek (see \u0026ndash;hr-seek). Ctrl+LEFT and Ctrl+RIGHT 跳转到上一个/下一个字幕。受一些限制，可能并不总是有效；参见sub-seek命令。 Seek to the previous/next subtitle. Subject to some restrictions and might not always work; see sub-seek command. Ctrl+Shift+LEFT and Ctrl+Shift+RIGHT 调整字幕延迟，以便下一个或上一个字幕立即显示。这对于将字幕与音频同步特别有用。 Adjust subtitle delay so that the next or previous subtitle is displayed now. This is especially useful to sync subtitles to audio. [ and ] 将当前播放速度减小/增加10%。 Decrease/increase current playback speed by 10%. { and } 当前播放速度减半/加倍。 Halve/double current playback speed. BACKSPACE 将播放速度重置为正常。 Reset playback speed to normal. Shift+BACKSPACE 撤销上次跳转。仅当播放列表条目未更改时有效。再次按下将返回到原始位置。有关详细信息，请参阅revert-seek命令。 Undo the last seek. This works only if the playlist entry was not changed. Hitting it a second time will go back to the original position. See revert-seek command for details. Shift+Ctrl+BACKSPACE 标记当前位置。然后Shift+BACKSPACE将使用该标记位置作为还原位置（一旦您跳回，标记将被重置）。您可以使用此功能在文件中进行跳转，然后返回到您离开的确切位置。 Mark the current position. This will then be used by Shift+BACKSPACE as revert position (once you seek back, the marker will be reset). You can use this to seek around in the file and then return to the exact position where you left off. \u0026lt; and \u0026gt; 在播放列表中向后/向前。 Go backward/forward in the playlist. ENTER 在播放列表中向前。 Go forward in the playlist. p and SPACE 暂停（再次按下取消暂停）。 Pause (pressing again unpauses). . 向前一步。按一次将暂停，每连续按下一次将播放一帧，然后再次进入暂停模式。 Step forward. Pressing once will pause, every consecutive press will play one frame and then go into pause mode again. , 向后一步。按一次将暂停，每连续按下一次将倒放一帧，然后再次进入暂停模式。 Step backward. Pressing once will pause, every consecutive press will play one frame in reverse and then go into pause mode again. q 停止播放并退出。 Stop playing and quit. Q 类似于q，但存储当前播放位置。如果可能的话，稍后再次播放相同的文件将在旧的播放位置继续播放。请参阅RESUMING PLAYBACK。 Like q, but store the current playback position. Playing the same file later will resume at the old playback position if possible. See RESUMING PLAYBACK. / and * 减小/增大音量。 Decrease/increase volume. 9 and 0 减小/增大音量。 Decrease/increase volume. m 静音。 Mute sound. _ 循环浏览可用的视频轨道。 Cycle through the available video tracks. # 循环浏览可用的音频轨道。 Cycle through the available audio tracks. E 循环浏览可用的版本。 Cycle through the available Editions. f 切换全屏（另请参阅\u0026ndash;fs）。 Toggle fullscreen (see also \u0026ndash;fs). ESC 退出全屏模式。 Exit fullscreen mode. T 切换置顶（另请参阅\u0026ndash;ontop）。 Toggle stay-on-top (see also \u0026ndash;ontop). w and W 减小/增大平移和扫描范围。当前e键目前执行相同操作，但不建议使用。 Decrease/increase pan-and-scan range. The e key does the same as W currently, but use is discouraged. o and P 在OSD上显示进度条、已用时间和总持续时间。 Show progression bar, elapsed time and total duration on the OSD. O 在OSD状态之间切换正常和播放时间/持续时间。 Toggle OSD states between normal and playback time/duration. v 切换字幕可见性。 Toggle subtitle visibility. j and J 循环浏览可用的字幕。 Cycle through the available subtitles. z and Z 通过+/- 0.1秒调整字幕延迟。当前x键执行相同操作，但不建议使用。 Adjust subtitle delay by +/- 0.1 seconds. The x key does the same as Z currently, but use is discouraged. l 设置/清除A-B循环点。有关详细信息，请参阅ab-loop命令。 Set/clear A-B loop points. See ab-loop command for details. L 切换无限循环。 Toggle infinite looping. Ctrl++ and Ctrl+- 通过+/- 0.1秒调整音频延迟（A/V同步）。 Adjust audio delay (A/V sync) by +/- 0.1 seconds. Shift+g and Shift+f 通过+/- 10%调整字幕字体大小。 Adjust subtitle font size by +/- 10%. u 在SSA/ASS字幕中切换仅应用\u0026ndash;sub-ass-*覆盖（默认）和几乎完全覆盖它们的常规字幕样式。有关更多信息，请参阅\u0026ndash;sub-ass-override。 Switch between applying only \u0026ndash;sub-ass-* overrides (default) to SSA/ASS subtitles, and overriding them almost completely with the normal subtitle style. See \u0026ndash;sub-ass-override for more info. V 切换字幕VSFilter纵横比兼容模式。有关更多信息，请参阅\u0026ndash;sub-ass-vsfilter-aspect-compat。 Toggle subtitle VSFilter aspect compatibility mode. See \u0026ndash;sub-ass-vsfilter-aspect-compat for more info. r and R 上/下移动字幕。当前t键执行相同操作，但不建议使用。 Move subtitles up/down. The t key does the same as R currently, but use is discouraged. s 拍摄截图。 Take a screenshot. S 拍摄截图，不带字幕。（这取决于VO驱动程序支持与否。） Take a screenshot, without subtitles. (Whether this works depends on VO driver support.) Ctrl+s 拍摄截图，如窗口显示（带字幕、OSD和缩放视频）。 Take a screenshot, as the window shows it (with subtitles, OSD, and scaled video). PGUP and PGDWN 跳转到上一个/下一个章节的开始。在大多数情况下，“上一个”实际上将会到达当前章节的开始；请参阅\u0026ndash;chapter-seek-threshold。 Seek to the beginning of the previous/next chapter. In most cases, \u0026ldquo;previous\u0026rdquo; will actually go to the beginning of the current chapter; see \u0026ndash;chapter-seek-threshold. Shift+PGUP and Shift+PGDWN 向后或向前跳转10分钟。（这曾经映射到不带Shift的PGUP/PGDWN。） Seek backward or forward by 10 minutes. (This used to be mapped to PGUP/PGDWN without Shift.) d 激活/停用去隔行。 Activate/deactivate deinterlacer. A 循环切换宽高比覆盖。 Cycle aspect ratio override. Ctrl+h 切换硬件视频解码开/关。 Toggle hardware video decoding on/off. Alt+LEFT, Alt+RIGHT, Alt+UP, Alt+DOWN 移动视频矩形（平移）。 Move the video rectangle (panning). Alt++ and Alt+- 将Alt与+或-键组合可更改视频缩放。 Combining Alt with the + or - keys changes video zoom. Alt+BACKSPACE 重置平移/缩放设置。 Reset the pan/zoom settings. F8 显示播放列表和其中的当前位置（仅在使用UI窗口时有用，在终端上损坏）。 Show the playlist and the current position in it (useful only if a UI window is used, broken on the terminal). F9 显示音频和字幕流列表（仅在使用UI窗口时有用，在终端上损坏）。 Show the list of audio and subtitle streams (useful only if a UI window is used, broken on the terminal). i and I 显示/切换显示有关当前播放文件的统计信息的叠加层，例如编解码器、帧速率、丢帧数等。有关更多信息，请参阅STATS。 Show/toggle an overlay displaying statistics about the currently playing file such as codec, framerate, number of dropped frames and so on. See STATS for more information. DEL 在OSC之间循环显示可见性：从不/自动（鼠标移动）/始终 Cycle OSC visibility between never / auto (mouse-move) / always ` 显示控制台。（ESC关闭它。有关CONSOLE的详细信息，请参阅CONSOLE。） Show the console. (ESC closes it again. See CONSOLE.) 1 and 2 调整对比度。 Adjust contrast. 3 and 4 调整亮度。 Adjust brightness. 5 and 6 调整伽马值。 Adjust gamma. 7 and 8 调整饱和度。 Adjust saturation. Alt+0 (and Command+0 on macOS) 将视频窗口调整为原始大小的一半。 Resize video window to half its original size. Alt+1 (and Command+1 on macOS) 将视频窗口调整为其原始大小。 Resize video window to its original size. Alt+2 (and Command+2 on macOS) 将视频窗口调整为其原始大小的两倍。 Resize video window to double its original size. Command + f (macOS only) 切换全屏（另请参阅\u0026ndash;fs）。 Toggle fullscreen (see also \u0026ndash;fs). PAUSE 暂停。 Pause. STOP 停止播放并退出。 Stop playing and quit. PREVIOUS and NEXT 向后/向前跳转1分钟。 Seek backward/forward 1 minute. ZOOMIN and ZOOMOUT 更改视频缩放。 Changes video zoom. ","date":"2023-12-07T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312007/","title":"MPV播放器入门指南-第一期-带你走进命令行播放器的世界"},{"content":"Windows下默认安装的环境在 家目录\\.conda\\envs我想把它换到安装目录去\n先备份环境信息，进入激活的环境\n1 conda env export \u0026gt; environment.yaml 修改 environment.yaml\n1 prefix: D:\\develop\\miniconda3\\envs\\common 恢复\n1 conda env create -f environment.yaml 一劳永逸： 新建 家目录\\.condarc 把 安装目录下的 envs 加入进去 ，并放在前面\n1 2 3 4 envs_dirs: - D:\\develop\\miniconda3\\envs - C:\\Users\\taoone\\.conda\\envs - C:\\Users\\taoone\\AppData\\Local\\conda\\conda\\envs 使用 conda info 查看\n","date":"2023-12-06T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312006/","title":"Minconda迁移已经存在的环境"},{"content":"安装 Linux 官方教程：https://docs.flutter.cn/get-started/install/linux\n查看flutter配置情况\n1 2 flutter doctor -v # 简略显示：flutter doctor - 配置android sdk\n1 flutter config --android-sdk=/home/taoone/development/Android/Sdk 全绿即是ok，如图：\n配置镜像源 清华源 帮助文档：https://mirror.tuna.tsinghua.edu.cn/help/flutter/\n长期使用 TUNA 镜像：\n1 2 echo \u0026#39;export FLUTTER_STORAGE_BASE_URL=\u0026#34;https://mirrors.tuna.tsinghua.edu.cn/flutter\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;export PUB_HOSTED_URL=\u0026#34;https://mirrors.tuna.tsinghua.edu.cn/dart-pub\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc 在编译android项目时，flutter还会从 https://storage.googleapis.com/download.flutter.io 下载Java程序库，您可以在 Android 项目目录下的 build.gradle 中添加下面一行下载源，从而使用TUNA镜像。\n1 2 3 4 5 6 7 allprojects { repositories { google() jcenter() maven { url \u0026#39;https://mirrors.tuna.tsinghua.edu.cn/flutter/download.flutter.io\u0026#39; } } } Flutter SDK 的更新会从 Github 获取，如您的开发设备访问 Github 速度慢，可以在 开发设备的 Flutter SDK 目录 运行下面的命令，将 Git 上游设置为 TUNA 镜像：\n1 git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/flutter-sdk.git ","date":"2023-12-05T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312005/","title":"Flutter安装配置"},{"content":"在线查看\nhttps://pan.seektao.cc/s/AOf3\n","date":"2023-12-04T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312004/","title":"DNS泄露"},{"content":"在Debian系统上清理无用的软件包和残留文件，您可以执行以下步骤：\n清理无用的软件包：使用apt包管理器清理无用的软件包。运行以下命令以更新软件包列表并删除不再需要的软件包：\n1 2 sudo apt update sudo apt autoremove apt autoremove命令将自动删除已经不再需要的软件包及其依赖项。\n清理残留的配置文件：有时，卸载软件包后会保留一些残留的配置文件。您可以使用以下命令清理这些文件：\n1 sudo dpkg --purge $(dpkg -l | grep \u0026#39;^rc\u0026#39; | awk \u0026#39;{print $2}\u0026#39;) 这将删除所有已经标记为\u0026quot;rc\u0026quot;（已删除但仍保留配置文件）的软件包。\n清理临时文件和缓存：您可以使用以下命令清理系统中的临时文件和包管理器缓存：\n1 2 sudo apt clean sudo apt autoclean apt clean命令将清理已下载的软件包文件，而apt autoclean命令将清理过期的软件包缓存。\n通过执行上述步骤，您可以清理Debian系统中的无用软件包和残留文件，从而释放磁盘空间并保持系统整洁。请注意，在执行命令之前，确保您具有足够的权限以使用sudo来执行它们。\n","date":"2023-12-03T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312003/","title":"Debian清理无用的软件包和残留文件"},{"content":"这玩意折腾我好久\n最小化安装配置，如果安装图形化，可能是NetworkManager，这部分不适用\n编辑配置文件\n1 sudo vim /etc/network/interfaces 1 2 3 4 5 iface ens33 inet static address 192.168.10.12 netmask 255.255.255.0 gateway 192.168.10.2 dns-nameservers 8.8.8.8 8.8.4.4 重启网路服务\n1 sudo systemctl restart networking ","date":"2023-12-02T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2312002/","title":"Debian12设置静态ip"},{"content":"打开 Firefox ，在地址栏搜索 about:config\n1 about:config 同意风险。\n搜索 layout.css.devPixelsPerPx\n1 layout.css.devPixelsPerPx 修改值，默认值为 -1，代表不修改。\n我们可以先改为 1，观看效果，如果过大，改为 0.9，依次类推，根据自己情况修改为合适的\n额外的，如果图标和字体过小，就把值 调大一点，直到合适自己\n","date":"2023-11-20T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311020/","title":"解决Firefox在高分辨率显示器下图标和字体显示过大"},{"content":"curl test.ipw.cn\n","date":"2023-11-19T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311019/","title":"测试ipv6"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 a|b\t匹配 a 或 b gr(a|e)y\t匹配 gray 或 grey .\t匹配任一字符 [abc]\t匹配任一字符: a 或 b 或 c [^abc]\t匹配任一字符, 但不包括 a, b, c [a-z]\t匹配从 a 到 z 之间的任一字符 [a-zA-Z]\t匹配从 a 到 z, 及从 A 到 Z 之间的任一字符 ^\t匹配文件名的头部 $\t匹配文件名的尾部 ( )\t匹配标记的子表达式 \\n\t匹配第 nth 个标记的子表达式, nth 代表 1 到 9 \\b\t匹配字词边界 *\t匹配前一项内容 0 或多次 ?\t匹配前一项内容 0 或 1 次 +\t匹配前一项内容 1 或多次 *?\t匹配前一项内容 0 或多次 (懒人模式) +?\t匹配前一项内容 1 或多次 (懒人模式) {x}\t匹配前一项内容 x 次 {x,}\t匹配前一项内容 x 或多次 {x,y}\t匹配前一项内容次数介于 x 和 y 之间 \\\t特殊转义字符 ","date":"2023-11-18T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311018/","title":"正则表示式语法"},{"content":"打开 C:\\ProgramData\\Microsoft\\Windows Defender\\Scans\\History，然后删除里面的一个叫 “Service” 的文件夹。\n","date":"2023-11-17T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311017/","title":"删除windows的defender误报"},{"content":"关于对2020年诺贝尔物理学奖的一些思考 **时间：**2020年10月9日，星期日\n**原由：**今天刷短视频刷到了量子物理学，想起最近的物理学奖和前几天老师发了个朋友圈说诺奖日，大多数博主都在讲量子纠缠的问题，还调侃爱因斯坦是真的错了。针对量子纠缠内容和人们的一些评论，我的一些思考想法。\n==诺贝尔物理学奖的具体情况为:==\nNobel Prize in Physics The 2022 physics laureates The Nobel Prize in Physics 2022 was awarded to Alain Aspect, John F. Clauser and Anton Zeilinger “for experiments with entangled photons, establishing the violation of Bell inequalities and pioneering quantum information science”.\nTheir results have cleared the way for new technology based upon quantum information.\nNobel Prize in Physics The 2022 physics laureates The Nobel Prize in Physics 2022 was awarded to Alain Aspect, John F. Clauser and Anton Zeilinger “for experiments with entangled photons, establishing the violation of Bell inequalities and pioneering quantum information science”.\nTheir results have cleared the way for new technology based upon quantum information.\n以下为机器翻译：\n2022年诺贝尔物理学奖 纠缠如何成为一种强大的工具 通过开创性的实验，阿兰·韦西、约翰·克劳塞和安东·蔡林格已经证明了研究和控制处于纠缠状态的粒子的潜力。纠缠对中的一个粒子发生的情况决定了另一个粒子的发生，即使它们之间的距离真的太远而无法相互影响。获奖者对实验工具的开发为量子技术的新时代奠定了基础。\n诺贝尔物理学奖 2022年物理学奖得主 2022年诺贝尔物理学奖授予阿兰·韦西，约翰·克劳塞和安东·蔡林格“对纠缠光子的实验，确定了对贝尔不等式的违反和量子信息科学的开创”。\n他们的研究结果为基于量子信息的新技术扫清了道路。\n以上来自诺贝尔奖官网：NobelPrize.org\n==总结就是：Alain Aspect, John F. Clauser and Anton Zeilinger 等三人对量子纠缠的实验，验证了量子不遵循贝尔不等式，和开创了量子信息科学的开创==\n接着，我去查询了什么是贝尔不等式，以下为维基百科对贝尔不等式的解释：（已机翻）\n在理论物理学里，贝尔定理（Bell\u0026rsquo;s theorem）表明：\n​\t任何关于定域隐变数的物理理论无法克隆量子力学的每一个预测。\n贝尔定理是一种不可行定理，又知名为贝尔不等式。这定理在物理学和科学哲学里异常重要，因为这定理意味着量子物理必需违背定域性原理或反事实确定性[1] [2]。发表于1964年，贝尔定理是因北爱尔兰物理学家约翰·贝尔而命名。\n贝尔定理的实验验证所得到的结果，符合量子力学理论的预测，并且显示某些量子效应似乎能够以超光速行进。由于这验证结果，所有归类为隐变数理论、经得起考验的量子理论都只能限制为非定域种类。2015年，台夫特理工大学的罗纳德·汉森等人在《自然》的封面文章表示，成功关闭所有漏洞，目前量子理论比定域性隐变量理论更准确地描述量子纠缠现象。[3]\n","date":"2023-11-16T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311016/","title":"关于2022年诺贝尔物理学奖的一些思考"},{"content":"win+s 搜索cmd，使用管理员打开，依此执行以下的命令\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 这一步耐心等待 for %i in (%windir%\\system32\\*.dll) do regsvr32.exe /s %i for %i in (%windir%\\system32\\*.ocx) do regsvr32.exe /s %i 执行完毕后重启设备，继续执行下方命令： Dism /Online /Cleanup-Image /ScanHealth Dism /Online /Cleanup-Image /CheckHealth 这一步可能会卡住62.3%，等待太久就关掉它，重新执行，直到成功 DISM /Online /Cleanup-image /RestoreHealth 前面没有问题，到这一步结束后会显示修复成功的信息，执行完重启 sfc /SCANNOW ","date":"2023-11-15T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311015/","title":"修复Windows的Defender脱机版扫描点击无反应"},{"content":"快捷方式 ZoomIt 提供了许多快捷方式，可以大大扩展其用法。\n函数 快捷键 缩放模式 Ctrl + 1 放大 鼠标向上或向上滚动箭头 缩小 鼠标向下滚动或向下键 在缩放模式下启动绘图 () Left-Click 在缩放模式下停止绘图 () Right-Click 在缩放模式下不处于缩放) 模式时开始绘制 ( Ctrl + 2 (绘图模式) 增加/减少线条和光标大小 Ctrl + 鼠标向上/向下或箭头键 将光标居中 (绘图模式) 空格键 白板 (绘图模式) W 黑板 (绘图模式) K 键入文本 (左对齐) T 键入文本 (右对齐) Shift + T 增加/减小字体大小 (键入模式 Ctrl + 鼠标向上/向下或箭头键 红色笔 R 绿色笔 G 蓝色笔 B 黄色笔 Y 橙色笔 O 粉色笔 P 绘制直线 按住 Shift 绘制矩形 按住 Ctrl 绘制省略号 “按住”选项卡 绘制箭头 按住 Ctrl + Shift 擦除最后一个绘图 Ctrl+Z 擦除所有绘图 E 将屏幕截图复制到剪贴板 Ctrl + C 将屏幕截图另存为 PNG Ctrl+S “开始/停止”屏幕录制保存为 MP4 (Windows 10 2019 年 5 月更新 及更高) Ctrl + 5 显示倒计时计时器 Ctrl + 3 增加/减少时间 Ctrl + 鼠标向上/向下或箭头键 最小化计时器 (而不暂停计时器) Alt + Tab 最小化时显示计时器 缩放图标上的Left-Click 实时缩放模式 Ctrl + 4 退出 Esc 或 Right-Click ","date":"2023-11-14T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311014/","title":"zoomit快捷键"},{"content":" 1 net user administrator /active:yes ","date":"2023-11-13T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311013/","title":"Windows启用Administrator"},{"content":"Alist是一个网盘管理工作，可以挂在多个网盘，使用go编写，所以多平台支持，之前在服务器安装了alist，使用的Linux系统，这次在Windows下也安装一下\n笔者Windows版本为 Windows10 专业工作站，我不确定家庭版是否有限制\n1. 下载 下载地址： https://github.com/alist-org/alist/releases/\n点我可直接下载\n下载的文件解压到一个目录，最好先手动创建一个文件夹，比如 D:\\Program Files\\alist\n完整的路径如下\n1 D:\\Program Files\\alist\\alist.exe 2. 运行 启动服务，在地址栏输入cmd快速进入当前目录，输入\n1 alist.exe server 就会在当前目录下生成 data文件夹。包含了程序的数据。\n打开浏览器：localhost:5244 即可访问，终端出现了随机密码，但是默认密码太麻烦了，建议直接重置密码。\n回到 alist所在目录，看到 第一次运行的时候生成的 data 文件夹，这个是存放数据的文件夹。\n生成（重置）密码：回到 alist.exe所在目录，重新打开一个 cmd 窗口\n1 2 3 4 5 # 指定密码 alist.exe admin set 你的密码 --data .\\data # 随机生成密码 alist.exe admin random --data .\\data --data 表示指定数据目录。不指定可能会报错 如果出现了如下报错，表示修改密码没有生效，报错如下：\n1 ERRO[2023-11-29 17:42:49] [del_user_cache_online] error: that\u0026#39;s not even a token 回到浏览器：输入：localhost:5244 即可使用 alist了。\n现在我们使用的是默认端口，由于我的电脑上 小白羊盘 内置了alist占用了 5244端口，所以在运行alist的时候可以把 端口修改，进入 data，可以看到有个 config.json的文件，里面就包含了端口的信息。\n文件所在的路径：D:\\Program Files\\alist\\data\\config.json 打开 config.json，修改以下的值 修改 \u0026ldquo;http_port\u0026rdquo;: 5244, 为 \u0026ldquo;http_port\u0026rdquo;: 5245, 重新启动服务，指定数据所在的目录\n1 alist.exe server --data=.\\data 现在打开浏览器：输入 localhost:5245 即可打开 alist\n3. 系统服务 还有一个问题，启动成功了，但是每次需要手动运行有点麻烦，最好的办法就是创建系统服务，让它开机自启。借助 NSSM 创建系统服务。\n下载nssm： 点击下载\n将 nssm 解压之后，将所在的路径（比如 D:\\Program Files\\nssm-2.24\\win64）添加到系统环境变量，确保可随处执行 nssm。\n创建 alist 自启动 服务，使用管理员运行 cmd：\n1 nssm install alist \u0026#34;D:\\Program Files\\alist\\alist.exe\u0026#34; \u0026#34;server --data=\\\u0026#34;D:\\Program Files\\alist\\data\\\u0026#34;\u0026#34; 停止之前运行中的alist，使用 系统服务运行。\n启动服务\n1 nssm start alist 停止服务\n1 nssm stop alist 重启服务\n1 nssm restart alist 移除服务（先要停止）\n1 nssm remove alist ps：最后：windows 上创建系统服务真的好麻烦，这个系统服务我搞了好久才解决，要么就是 “” 不能加，还用过sc创建，也不行。各种问题，还是linux方便。\n错误记录：\n1 2 3 4 5 6 7 nssm install alist \u0026#34;D:\\Program Files\\alist\\alist.exe\u0026#34; server --data=\u0026#34;D:\\Program Files\\alist\\data\u0026#34; nssm install alist \u0026#34;D:\\Program Files\\alist\\alist.exe\u0026#34; server --data=\u0026#34;D:\\Program Files\\alist\\data\u0026#34; sc create alist binPath= \u0026#34;D:\\Program Files\\alist\\alist.exe server --data=\\\u0026#34;D:\\Program Files\\alist\\data\\\u0026#34;\u0026#34; ...... 4. 附录 关于 帮助命令\nalist\n1 2 3 alist -h alist admin -h nssm\n1 nssm -h ","date":"2023-11-12T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311012/","title":"Windows下安装Alist，并安装系统服务自启动"},{"content":"win10系统Windows 沙盒无法启动0x80070005错误解决方法 1、在开始菜单中搜索cmd ，以管理员身份运行【命令提示符】；\n2、请您启动管理员模式的命令提示符，依次输入以下命令并回车 Dism /Online /Cleanup-Image /ScanHealth Dism /Online /Cleanup-Image /CheckHealth DISM /Online /Cleanup-image /RestoreHealth 运行管理员身份的命令提示符并执行以下命令（重置组策略） RD /S /Q \u0026ldquo;%WinDir%\\System32\\GroupPolicyUsers\u0026rdquo; 回车 RD /S /Q \u0026ldquo;%WinDir%\\System32\\GroupPolicy\u0026rdquo; 回车 gpupdate /force 回车 重新启动计算机后即可正常运行沙盒！\n","date":"2023-11-11T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311011/","title":"Windows10沙盒无法运行解决办法参考"},{"content":" 系统：Debian12 显示服务器：Wayland\n关于waydroid的安装本篇不再介绍，至于如何安装可以观看 官网教程也可以查看 Linux 下安装使用 Waydrioid\n今天的主角是： waydroid_script\n描述： Python Script to add OpenGapps, Magisk, libhoudini translation library and libndk translation library to waydroid !\n我们将通过这个脚本安装 libhoudini translation library，用来在x86_64上支持arm，\n安装 waydroid_script 1、 克隆项目\n1 git clone https://github.com/casualsnek/waydroid_script 进入克隆的目录\n1 cd waydroid_script 2、新建虚拟环境或者使用已有环境，请根据自己情况在以下方案自选其一\n（1）新建虚拟环境安装依赖\n1 2 3 4 5 # 新建虚拟环境 python3 -m venv venv # 安装依赖 venv/bin/pip install -r requirements.txt （2）使用其他方式管理环境，安装依赖\n本地的环境我通过minconda管理，所以不采用上述新建虚拟环境方式\n1 2 3 4 5 6 7 8 9 # 新建环境 conda create -n waydroid python=3.10 conda activate waydroid # 确认当前所处的环境,*开头的为激活的环境 conda info -e # 安装依赖 pip install -r requirements.txt 安装模块（root权限） 安装所需要的模块只需要选择 {} 后面内容\n1 sudo venv/bin/python3 main.py install {gapps, magisk, libndk, libhoudini, nodataperm, smartdock, microg, mitm} 因为我的 minconda使用普通用户安装，加上 sudo 需要使用绝对路径\n1 2 3 4 5 # 查看 python3 的位置，确保当前的环境是 之前创建的 waydroid which python3 # 结果如下 /home/taoone/opt/miniconda3/envs/waydroid/bin/python3 安装 libhoudini 只需要请将路径替换为自己的\n1 sudo /home/taoone/opt/miniconda3/envs/waydroid/bin/python3 main.py install libhoudini 卸载\n1 sudo /home/taoone/opt/miniconda3/envs/waydroid/bin/python3 main.py uninstall libhoudini 额外的，作者还提到在 AMD上 libndk 表现比 libhoudini更好，我的机器是 AMD的，我先安装的是它，但是经我测试好像有些问题。所以又换回了 libhoudini，故还是推荐 libhoudini。\n以下为 安装 libndk\n1 sudo /home/taoone/opt/miniconda3/envs/waydroid/bin/python3 main.py install libndk 卸载\n1 sudo /home/taoone/opt/miniconda3/envs/waydroid/bin/python3 main.py uninstall libndk 安装模块后需要重启 waydroid-controller\n1 systemctl restart waydroid-container.service 测试 下载一个 arm架构的app，看看是否能运行，比如就以微信为例。\n1 2 3 4 5 6 7 8 9 10 11 12 # 下载微信跳过， # 启动 waydroid waydroid session start # 进程阻塞，新开终端安装微信 waydroid app install weixin8043android2480_0x28002b38_arm64_1.apk # 除了手动下载weixin apk,当然也可以打开google play搜索wechat进行安装 # 打开界面查看微信是否安装成功 waydroid show-full-ui 打开微信的方式：主界面上拉打开应用盒子，应该是可以WeChat图标的，点击即可\n","date":"2023-11-10T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311010/","title":"Waydroid：在x86_64上运行arm架构的app"},{"content":"有时候下载的文件想要比对官方给出的 SHA256 值比较麻烦，这个脚本可以快速判断文件是否被篡改\n1 mkdir ~/bin \u0026amp;\u0026amp; vim sha256_compare.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #!/bin/bash script_name=$(basename \u0026#34;$0\u0026#34;) # 帮助函数 show_help() { echo \u0026#34;用法: $script_name \u0026lt;下载文件\u0026gt; \u0026lt;期望的SHA256哈希值\u0026gt;\u0026#34; echo \u0026#34;比较给定文件的SHA256哈希值和期望的哈希值，判断文件是否被篡改。\u0026#34; } # 参数验证 if [ \u0026#34;$1\u0026#34; = \u0026#34;-h\u0026#34; ]; then show_help exit 0 fi if [ $# -ne 2 ]; then echo \u0026#34;错误：需要提供两个参数。\u0026#34; show_help exit 1 fi # 获取文件路径和给定的 SHA256 值 downloaded_file=$1 expected_hash=$2 # 检查文件是否存在 if [ ! -f \u0026#34;$downloaded_file\u0026#34; ]; then echo \u0026#34;错误：文件 \u0026#39;$downloaded_file\u0026#39; 不存在。\u0026#34; exit 1 fi # 计算下载文件的 SHA256 值 calculated_hash=$(sha256sum \u0026#34;$downloaded_file\u0026#34; | awk \u0026#39;{print $1}\u0026#39;) # 比对计算得到的哈希值和给定的哈希值 if [ \u0026#34;$calculated_hash\u0026#34; = \u0026#34;$expected_hash\u0026#34; ]; then echo \u0026#34;哈希值匹配，文件未被篡改。\u0026#34; else echo \u0026#34;哈希值不匹配，文件可能已被篡改。\u0026#34; fi 1 chmod +x sha256_compare.sh 1 export PATH=\u0026#34;$HOME/bin:$PATH\u0026#34; \u0026gt;\u0026gt; ~/.bash_profile 1 source ~/.bash_profile 脚本的用法为\n1 sha256_compare.sh \u0026lt;文件\u0026gt; \u0026lt;文件的哈希值\u0026gt; 1 2 # 查看帮助信息 sha256_compare.sh -h ","date":"2023-11-08T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311008/","title":"Shell脚本：快速比对文件的SHA256哈希值，判断文件是否被篡改"},{"content":"最近学习Flink用来测试socket处理数据，打开虚拟机使用linux发送未免太过麻烦，但是windows上的netcat安装解压后报毒，安全起见，我就还是卸载了，后来看到有说Namp下的ncat可以替代netcat 用于发送消息，那我就去下载了试试，发现确实可以替代。\nNmap下载地址：https://nmap.org/ncat/\n解压之后添加到环境变量，确保可以随处执行，netcat发送消息的命令为 nc，Nmap为ncat， 详细点为\nnetcat，-lk表示一直占用着，7777是端口\n1 nc -lk 7777 换成Nmap\n1 ncat -lk 7777 测试环节\n使用Flink测试，这段程序会检测 7777 端口的信息，这段代码是用于词频统计\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 package cc.seektao.wc; import org.apache.flink.api.common.typeinfo.Types; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStreamSource; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.util.Collector; public class WordCountStreamSocket { public static void main(String[] args) throws Exception { // 1. 准备环境 StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // 2. 读取数据 DataStreamSource\u0026lt;String\u0026gt; socketDS = env.socketTextStream(\u0026#34;localhost\u0026#34;, 7777); // 3. 处理数据: 切分、转换、聚合、 SingleOutputStreamOperator\u0026lt;Tuple2\u0026lt;String, Integer\u0026gt;\u0026gt; sum = socketDS .flatMap( (String line, Collector\u0026lt;Tuple2\u0026lt;String, Integer\u0026gt;\u0026gt; collector) -\u0026gt; { String[] words = line.split(\u0026#34; \u0026#34;); for (String word : words) { // 采集器采集数据发送到下游 collector.collect(new Tuple2\u0026lt;\u0026gt;(word, 1)); } }) .returns(Types.TUPLE(Types.STRING, Types.INT)) // landbda 表达式有类型擦除，需要手动指定泛型的参数类型 .keyBy(word -\u0026gt; word.f0) .sum(1); // 4. 输出 sum.print(); // 5. 启动 env.execute(); } } 运行Flink程序，程序会监听 7777 端口的信息\n新开windows终端，输入\n1 ncat -lk 7777 这时会阻塞，输入信息，比如\n1 2 3 hello flink hello spark hello world 程序就会显示统计信息\n1 2 3 4 5 6 3\u0026gt; (hello,1) 7\u0026gt; (flink,1) 1\u0026gt; (spark,1) 3\u0026gt; (hello,2) 5\u0026gt; (world,1) 3\u0026gt; (hello,3) ","date":"2023-11-07T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311007/","title":"Ncat替代netcat"},{"content":" 系统：Debian12 显示服务器：Wayland\n概述 Waydroid 是一个基于容器的，能在常规 GNU/Linux 启动完整的 Android 系统的方法。\n官网：https://waydro.id/ 文档：https://docs.waydro.id/\n快速上手 本次将快速安装 Waydroid ，关于更多的细节，请查看官网说明。\n需要注意的是，图形平台需要为 Wayland。\n下载安装 本次使用的是 Amd架构的 Debian12，图形平台 Wayland 等等满足安装需求。\n1 2 3 4 5 6 7 8 # Install pre-requisites sudo apt install curl ca-certificates -y # Add the official repository curl https://repo.waydro.id | sudo bash # Install waydroid sudo apt install waydroid -y 其他平台请查看：https://docs.waydro.id/usage/install-on-desktops\n快速上手 安装 Waydroid 软件包，这一步需要保持“良好的”网络环境，\n1 2 # 使用 google框架支持的 Android 镜像， sudo waydroid init -s GAPPS -f 启用 waydroid-container.service\n1 sudo systemctl enable --now waydroid-container 启动/关闭 会话\n1 2 3 4 5 # 启动 waydroid session start # 关闭 waydroid session stop 启动 GUI\n1 waydroid show-full-ui 安装应用\n1 waydroid app install xxx.apk ","date":"2023-11-05T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311005/","title":"Linux下的安卓模拟器Waydrioid使用"},{"content":" 系统：Debian12\nGrub2 是Linux众多发行版默认引导器，有必要对它简单了解一下。\n比如：\n默认界面还是太丑，可以换个主题 修改启动等待时间 先简单了解 Grub 配置文件\n路径：/etc/default/grub GRUB_TIMEOUT： 启动等待时间，默认 5 s GRUB_THEME：主题位置 GRUB_BACKGROUND：背景 修改完配置，需要更新 Grub 配置\n1 sudo update-grub 修改默认启动时间 现在我的系统只剩下 Debian12 了，默认启动的 5s 等待时间我觉得有点影响使用体验，所以打算关闭它，把 GRUB_TIMEOUT 的值改为 1\n1 2 3 4 5 6 7 sudo vim /etc/default/grub # 把 GRUB_TIMEOUT 修改为 1 GRUB_TIMEOUT=1 # (可选)在等待时间结束后自动启动默认操作系统，而不显示菜单 # GRUB_TIMEOUT_STYLE=hidden 1 2 # 更新配置 sudo update-grub 主题 通过这个网址能找到很多grub主题：https://store.kde.org/browse?cat=109\u0026amp;ord=latest\ntela https://github.com/muyiacc/grub2-themes-tela\n克隆运行后即可\n","date":"2023-11-04T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311004/","title":"Grub2简单使用"},{"content":"Debian 前置条件 Debian Bookworm 12 (stable) Debian Bullseye 11 (oldstable) 卸载旧版本 1 for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done 设置存储库 1 2 3 4 5 6 7 8 9 10 11 12 13 # Add Docker\u0026#39;s official GPG key: sudo apt-get update sudo apt-get install ca-certificates curl sudo install -m 0755 -d /etc/apt/keyrings sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc sudo chmod a+r /etc/apt/keyrings/docker.asc # Add the repository to Apt sources: echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\ $(. /etc/os-release \u0026amp;\u0026amp; echo \u0026#34;$VERSION_CODENAME\u0026#34;) stable\u0026#34; | \\ sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null sudo apt-get update 安装 1 sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin Ubuntu 前置条件 Ubuntu Noble 24.04 (LTS) Ubuntu Mantic 23.10 (EOL: July 12, 2024) Ubuntu Jammy 22.04 (LTS) Ubuntu Focal 20.04 (LTS) 卸载旧版本 1 for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done 设置存储库 1 2 3 4 5 6 7 8 9 10 11 12 13 # Add Docker\u0026#39;s official GPG key: sudo apt-get update sudo apt-get install ca-certificates curl sudo install -m 0755 -d /etc/apt/keyrings sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc sudo chmod a+r /etc/apt/keyrings/docker.asc # Add the repository to Apt sources: echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\ $(. /etc/os-release \u0026amp;\u0026amp; echo \u0026#34;$VERSION_CODENAME\u0026#34;) stable\u0026#34; | \\ sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null sudo apt-get update 安装 1 sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin Windows 使用 Windows 安装 docker desktop 下载 docker desktop 即可\n如果下载速度慢，可以使用我分享的网络链接：\nhttps://www.123684.com/s/4MOKVv-P02pd?提取码:love\nhttps://www.123865.com/s/4MOKVv-P02pd?提取码:love\n直接在 WSL中安装 安装之前，下载你安装的wsl版本对应docker文件，比如我安装的系统是 debain 12\n为什么下载 dcoker 安装文件安装,？因为 wsl 不是一个完整的系统，没有systemctl ，无法使用apt安装，所以需要手动下载文件安装\n注意下载docker组件之间的版本适配，如何确定下载不同的版本呢，这里有个小技巧，\n","date":"2023-11-03T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311003/","title":"Docker安装"},{"content":"1. 安装语言包 首先我们需要安装locales这个软件包：\nsudo apt install locales\n2. 配置语言环境 执行下列命令配置语言环境：\n1 sudo dpkg-reconfigure locales 空格选中，回车确定\n","date":"2023-11-02T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311002/","title":"Debian配置系统中文语言及环境"},{"content":" 1 2 3 4 5 6 7 8 sudo dpkg-reconfigure locales # 勾选上，回车下一步 en_US.UTF-8 zh_CN.UTF-8 # 生效 sudo update-locale ","date":"2023-11-01T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2311001/","title":"Debian11配置Locales"},{"content":"概述 本文档包含了各个常用镜像服务及对应镜像站\n各个镜像源的帮助文档：\n清华：https://mirror.tuna.tsinghua.edu.cn/help 阿里云：https://developer.aliyun.com/mirror/ 中科大：https://mirrors.ustc.edu.cn/help/ 华为云：https://mirrors.huaweicloud.com/home\n系统软件源 Debian 查看系统发行版本\n1 cat /etc/issue 清华 Debian12：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 cat \u0026lt;\u0026lt; EOF | sudo tee /etc/apt/sources.list \u0026gt; /dev/null # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释 deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换 deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware # deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware EOF Debain10：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释 deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free # deb http://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free # # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free deb http://security.debian.org/debian-security buster/updates main contrib non-free # deb-src http://security.debian.org/debian-security buster/updates main contrib non-free PyPI 清华 临时使用\n1 pip install -i https://pypi.tuna.tsinghua.edu.cn/simple package_name 设为默认\n1 2 python -m pip install --upgrade pip pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple 阿里 公网配置方法：\n找到下列文件 1 ~/.pip/pip.conf 在上述文件中添加或修改: 1 2 3 4 5 [global] index-url = http://mirrors.aliyun.com/pypi/simple/ [install] trusted-host=mirrors.aliyun.com ECS内网配置方法：\n找到下列文件 1 ~/.pip/pip.conf 在上述文件中添加或修改: 1 2 3 4 5 [global] index-url=http://mirrors.cloud.aliyuncs.com/pypi/simple/ [install] trusted-host=mirrors.cloud.aliyuncs.com NPM 查看镜像源\n1 npm config get registry 删除镜像源\n1 npm config rm registry 淘宝 http://npm.taobao.org和 http://registry.npm.taobao.org 将在 2022.06.30 号正式下线和停止 DNS 解析。\n新域名为 npmmirror.com, 相关服务域名切换规则请参考：\n1 npm config set registry https://registry.npmmirror.com yarn 查看镜像源\n1 yarn config get registry 设置为淘宝镜像源\n1 yarn config set registry https://registry.npmmirror.com 删除镜像源\n1 yarn config rm registry 华为云 切换 1 npm config set registry https://mirrors.huaweicloud.com/repository/npm/ 验证 1 npm config get registry Go 七牛云 1 2 go env -w GO111MODULE=on go env -w GOPROXY=https://goproxy.cn,direct Maven 阿里云 打开 Maven 的配置文件(windows机器一般在maven安装目录的conf/settings.xml)，在\u0026lt;mirrors\u0026gt;\u0026lt;/mirrors\u0026gt;标签中添加 mirror 子节点:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;!-- 阿里云仓库 --\u0026gt; \u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;alimaven\u0026lt;/id\u0026gt; \u0026lt;mirrorOf\u0026gt;central\u0026lt;/mirrorOf\u0026gt; \u0026lt;name\u0026gt;aliyun maven\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://maven.aliyun.com/nexus/content/repositories/central/\u0026lt;/url\u0026gt; \u0026lt;/mirror\u0026gt;\t\u0026lt;!-- 中央仓库1 --\u0026gt; \u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;repo1\u0026lt;/id\u0026gt; \u0026lt;mirrorOf\u0026gt;central\u0026lt;/mirrorOf\u0026gt; \u0026lt;name\u0026gt;Human Readable Name for this Mirror.\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://repo1.maven.org/maven2/\u0026lt;/url\u0026gt; \u0026lt;/mirror\u0026gt; \u0026lt;!-- 中央仓库2 --\u0026gt; \u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;repo2\u0026lt;/id\u0026gt; \u0026lt;mirrorOf\u0026gt;central\u0026lt;/mirrorOf\u0026gt; \u0026lt;name\u0026gt;Human Readable Name for this Mirror.\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://repo2.maven.org/maven2/\u0026lt;/url\u0026gt; \u0026lt;/mirror\u0026gt; Docker软件源 非 Docker Hub镜像源\n清华 Debian/Ubuntu/Raspbian 用户 以下内容根据 官方文档 修改而来。\n如果你过去安装过 docker，先删掉：\n1 for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done 首先安装依赖：\n1 2 sudo apt-get update sudo apt-get install ca-certificates curl gnupg 信任 Docker 的 GPG 公钥并添加仓库：\n如果为Ubuntu、Raspbian，请查看 https://mirror.tuna.tsinghua.edu.cn/help/docker-ce/\n1 2 3 4 5 6 7 8 9 10 sudo install -m 0755 -d /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg sudo chmod a+r /etc/apt/keyrings/docker.gpg echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \\ \u0026#34;$(. /etc/os-release \u0026amp;\u0026amp; echo \u0026#34;$VERSION_CODENAME\u0026#34;)\u0026#34; stable\u0026#34; | \\ sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null 如果提示\n1 2 -bash: gpg: command not found curl: (23) Failed writing body 请安装 gpg 之后，再次尝试上述的步骤： 信任 Docker 的 GPG 公钥并添加仓库\n1 sudo apt install gpg 最后安装\n1 2 3 sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin Gradle 腾讯云（推荐，版本全）\n1 https://mirrors.cloud.tencent.com/gradle 阿里云（有些小版本没有）\ngradele 4.1 之后 1 https://mirrors.aliyun.com/macports/distfiles/gradle/ ","date":"2023-10-29T14:07:29+08:00","permalink":"https://blog.seektao.cc/p/mirror/","title":"镜像源大汇总，强烈推荐！"},{"content":"docker 1 2 3 4 5 6 7 8 version: \u0026#39;3.9\u0026#39; services: javbus-api: image: ovnrain/javbus-api ports: - \u0026#39;8922:3000\u0026#39; restart: unless-stopped container_name: javbus-api ","date":"2023-10-26T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/jav-bus-api/","title":"快速安装jav-bus的api"},{"content":"自己搭建的kms激活服务器 一条命令激活windows，只需要管理员打开cmd运行下面这条命令即可\n1 slmgr /skms kms.seektao.cc \u0026amp;\u0026amp; slmgr /ato ","date":"2023-10-25T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310025/","title":"自己搭建kms实现Windows激活"},{"content":" 由于 PMail 后续更新，本文也将修改，适应最新版本\n前言 最近想自建一个域名邮箱，开源的邮箱服务内存占用太高，对于个人使用不太友好，接着找到一个由 Golang 编写的域名邮箱Pmail。\n官方介绍：PMail是一个追求极简部署流程、极致资源占用的个人域名邮箱服务器。单文件运行，包含完整的收发邮件服务和Web端邮件管理功能。只需一台服务器、一个域名、一行代码、一分钟部署时间，你就能够搭建出一个自己的域名邮箱。\nGitHub地址：https://github.com/Jinnrry/PMail/\n以下为界面截图：\n准备工作 服务器，开放了25号端口的服务器，没有开放则无法发信。 域名 nginx 反代服务器 nginx proxy manager（可选，但建议），与nginx二选一 docker或者docker-compose 部署 提示：文章篇幅较长\ndocker-compose\n如果服务器80，443端口没有被占用，搭建过程则较为简单。如果80，443端口被其他应用占用，搭建过程则较为繁琐。\n本次80，443端口被nginx proxy manager占用，所以采用映射其他端口搭建\n本次教程采用docker-compose方式安装，方便管理配置文件和升级。其余方式请参考官方教程\n在你喜欢的目录下，新建 pamail 文件夹，在 pamil文件夹下，新建 docker-compose.yml文件，如：\n1 2 3 mkdir -r ~/opt/pmail \u0026amp;\u0026amp; cd ~/opt/pmail docker network create pmail_network vim docker-compose.yml 文件内容如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 version: \u0026#39;3.9\u0026#39; services: pmail: container_name: pmail image: \u0026#39;ghcr.io/jinnrry/pmail:latest\u0026#39; volumes: - \u0026#39;./config:/work/config\u0026#39; ports: # pop - \u0026#39;110:110\u0026#39; - \u0026#39;995:995\u0026#39; # smtp - \u0026#39;25:25\u0026#39; - \u0026#39;465:465\u0026#39; # web访问 - \u0026#39;8780:80\u0026#39; - \u0026#39;8781:443\u0026#39; restart: unless-stopped networks: - pmail_network networks: pmail_network: external: true 配置文件编写完成之后，在 docker-compose.yml 所在目录下，运行\n1 sudo docker compose up 接着会开启一个阻塞的前台进程，会打印日志信息，没有报错的话，服务则已经启动。\n开放端口，因为使用的云服务器，所以需要在云服务器管理面板，开放安全组，也就是端口，笔者使用的阿里云。\n进入 ecs管理面板，在左侧选择 【安全组】，选择服务器对应的安全组。\n接着【手动添加】\n填写端口范围和授权对象，端口即为配置文件开放的端口，授权对象为0.0.0.0，表示所有ip都可访问，描述为备注信息。\n保存后，安全组配置完成。\n配置pmail\n暂停pamil的启动，修改配置文件\n1 sudo vim /config/config.json 修改配置文件\n1 \u0026#34;sslType\u0026#34;:\u0026#34;1\u0026#34;,\u0026#34;httpPort\u0026#34;:0,\u0026#34;httpsPort\u0026#34;:0 网页访问服务器的公网ip+端口，如本次教程为 http://ip:8780，ip为服务器的公网ip，在ecs管理面板 可以看到。\n欢迎界面，初次进入的页面如下：\n下一步，选择数据库，建议默认即可，根据自己使用的数据库安装\n继续下一步，设置pmail管理员密码\n下一步，设置域名\n下一步，设置DNS，将以下信息添加到dns解析处，\nDNS记录配置，在上一步，需要将DNS记录添加到对应的域名，我使用的DNSPOD，点此跳转DNSPOD ，进入之后，按照提示添加记录即可\n配置ssl，dns记录添加完成之后，回到pmail配置页面，继续配置证书。\n这里选择手动配置ssl证书，如果服务器的80端口没有被占用，可以选择自动配置，当然，前面的docker-compose.yml端口信息也需要改成80，443。\n为什么选择不用80，443端口呢？？\n自动配置ssl需要用到80端口来验证服务器的所有权，所以自动配置ssl必须使用80端口。但是我的服务器安装了nginx proxy manger（简称npm） ，反代服务，一个web端的nginx工具，简化nginx配置，还可以一键生成ssl证书，我的服务器应用比较多，其他应用采用的都是子域名的方式访问。通过这种方式，简化的自己的工作、但是npm已经占用了80，443端口，所以80，443端口不可用。总不可能为了一个域名服务，让其他域名都不可用域名访问了吧。所以，将容器的80，443端口映射到了其他端口。\n默认的证书位置在 ./config/ssl/private.key、./config/ssl/public.crt下，我们就把自己的ssl证书上传到 ./config/ssl下。\n如果继续介绍npm申请ssl证书，这篇文章的篇幅就会过长。如果需要，到时候会另开文章介绍，这里就不多介绍了。也可自行搜索相关教程。\n关于ssl配置可以参考这篇博文：Debian下的Certbot安装使用，附nginx使用\n完成了这一步后，就基本完成了，不过还需要配置反向代理。\n反向代理 dns记录\n进入 dnspod管理页面，新增dns记录，如下\n新增代理\n进入npm管理页面，新增代理\n点击 Add Proxy Host\n编辑新增内容，按照如图所示编辑，打码的部分为服务的ip或者域名。\n开启ssl，点击ssl，ssl证书选择已经申请的，如果没有，这里不做介绍。\n强制ssl开启，http2开启，如图：\n最后点击save保存。到这反向代理也配置完成。\n但是访问会出现\n修改pmail配置文件，关闭前台进程，ctrl+c，关闭。\npmail的配置文件已经挂载到本地了，在 config/config.json下，\n进入pmail文件夹，编辑 config.json\n1 2 3 cd ~/opt/pmail sudo vim config/config.json httpsEnabled 配置改成2 sslType\t改成1 启动测试 修改配置后，重新启动docker容器。\n在 docker-compose.yml 所在目录下，运行\n1 2 3 sudo docker up -d # -d 表示后台运行 浏览器通过域名访问或者ip+端口访问即可\n最终效果如下，\n测试，发送测试邮件给163邮箱\n163邮箱 接收\n总结：\n搭建过程较为繁琐，需要的前置条件较多.\npmail界面相较于其他邮箱要差一些，没有多用户功能，最新版已增加，实现了基本的收发功能。基本满足个人使用。\n感谢作者的开源精神。\n最后继续附上pmail的GitHub地址：https://github.com/Jinnrry/PMail/\n附录 配置信息详解\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \u0026#34;logLevel\u0026#34;: \u0026#34;info\u0026#34;, //日志输出级别 \u0026#34;domain\u0026#34;: \u0026#34;domain.com\u0026#34;, // 你的域名 \u0026#34;webDomain\u0026#34;: \u0026#34;mail.domain.com\u0026#34;, // web域名 \u0026#34;dkimPrivateKeyPath\u0026#34;: \u0026#34;config/dkim/dkim.priv\u0026#34;, // dkim 私钥地址 \u0026#34;sslType\u0026#34;: \u0026#34;0\u0026#34;, // ssl证书更新模式，0自动，1手动 \u0026#34;SSLPrivateKeyPath\u0026#34;: \u0026#34;config/ssl/private.key\u0026#34;, // ssl 证书地址 \u0026#34;SSLPublicKeyPath\u0026#34;: \u0026#34;config/ssl/public.crt\u0026#34;, // ssl 证书地址 \u0026#34;dbDSN\u0026#34;: \u0026#34;./config/pmail.db\u0026#34;, // 数据库连接DSN \u0026#34;dbType\u0026#34;: \u0026#34;sqlite\u0026#34;, //数据库类型，支持sqlite 和 mysql \u0026#34;httpsEnabled\u0026#34;: 0, // web后台是否启用https 0默认（启用），1启用，2不启用 \u0026#34;spamFilterLevel\u0026#34;: 0,// 垃圾邮件过滤级别，0不过滤、1 spf dkim 校验均失败时过滤，2 spf校验不通过时过滤 \u0026#34;httpPort\u0026#34;: 80, // http 端口 . 默认 80 \u0026#34;httpsPort\u0026#34;: 443, // https 端口 . 默认 443 \u0026#34;weChatPushAppId\u0026#34;: \u0026#34;\u0026#34;, // 微信推送appid \u0026#34;weChatPushSecret\u0026#34;: \u0026#34;\u0026#34;, // 微信推送秘钥 \u0026#34;weChatPushTemplateId\u0026#34;: \u0026#34;\u0026#34;, // 微信推送模板id \u0026#34;weChatPushUserId\u0026#34;: \u0026#34;\u0026#34;, // 微信推送用户id \u0026#34;tgChatId\u0026#34;: \u0026#34;\u0026#34;, // telegram 推送chatid \u0026#34;tgBotToken\u0026#34;: \u0026#34;\u0026#34;, // telegram 推送 token \u0026#34;isInit\u0026#34;: true // 为false的时候会进入安装引导流程 } ","date":"2023-10-23T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/pmail/","title":"强烈推荐，一个内存占用极低的自建域名邮箱Pmail"},{"content":"要将 Vim 的 Tab 键设置为四个空格，请按照以下步骤进行操作：\n打开终端，并输入以下命令以编辑 Vim 的全局配置文件：\nvim ~/.vimrc\n在 Vim 配置文件中，添加以下行来设置 Tab 键为四个空格：\nset tabstop=4 set shiftwidth=4 set expandtab\ntabstop=4：设置 Tab 键的宽度为四个空格。 shiftwidth=4：设置自动缩进时的宽度为四个空格。 expandtab：将 Tab 键自动转换为空格。 保存并关闭文件。在 Vim 中，按下 Esc 键，然后输入 :wq，然后按下 Enter 键。\n现在，当你在 Vim 中使用 Tab 键时，它将自动插入四个空格。你也可以使用退格键将四个空格删除。\n请注意，这将会影响全局的 Vim 配置，因此在所有的 Vim 编辑器中都会生效。如果你只想在特定项目中使用四个空格的 Tab 键，请将这些配置添加到项目的本地配置文件（例如项目根目录下的 .vimrc 文件）中。\n","date":"2023-10-22T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310022/","title":"VIM的配置"},{"content":"前言 之前使用 gitee 当作图床，typora 能渲染，但是博客里无法渲染，可能是有防盗链，所以换成了 smms 图床，换了之后就可以了。\nPicgo-Core 不推荐使用图形化的 picgo，占用内存。建议使用 nodejs 安装 picgo，安装 nodejs 之后，再安装 picgo。\nNodeJs 官网：https://nodejs.org/en\nNodeJs 安装之后使用 npm 安装 picgo\n1 2 3 4 5 # 通过node安装picgo（前提node环境已经安装好） npm install picgo -g # 配置文件所在的位置 # 用户家目录下的.picgo/config.json 把 picgo 所在的路径添加到系统环境变量，方便使用。\n在 typora 设置中，图像选择【上传图片】，上传服务选择 【costom command】,命令选择 picgo 所在的位置，不过需要在最后面加上 小写字母 u，如：\n1 picgo u 关于 picgo 的更多信息请参考：https://picgo.github.io/PicGo-Core-Doc/\n图床服务 smms 注册账号 smms 注册账户拥有 5g 的空间，对于文章上传图片来说，应该是够用了，如果不够大不了再注册个账户而已。\n官网：https://sm.ms/\n备用地址：https://smms.app\n注册账户之后，进入控制台查看 api token，记下来，稍后使用。\n配置 picgo 首先确定好是否配置了环境变量，如果没有配置，请在 picgo 所在的路径打开终端。\n1 2 3 4 5 6 7 8 9 10 11 12 # 1. 查看picgo版本 picgo -v # 2. 设置使用的图床服务 # 键盘上下键选择使用的图床服务，如smms，回车确认 picgo use # 3. 设置使用的图床配置，如上传的路径，token等 picgo set uploader # 继续选择smms，输入api token，输入的时候密码看不见。 # 接着输入smms备用域名，如smms.app 设置完成之后，随便截张图复制到 typora 中看它是否会自动上传。如果可以，则完成，失败，查看失败信息，进行排查。\n插件 picgo-plugin-smms-user（smms必装） 这个插件配置 smms，可在 typora 中使用，返回链接自动更换 typora 默认的本地地址。\n安装\n1 picgo install picgo-plugin-smms-user 配置\n1 picgo set uploader picgo-plugin-web-uploader 1 2 # 安装 picgo install picgo-plugin-web-uploader picgo-plugin-telegraph-image 这个插件用于开源的自建图床服务，Telegraph-Image\n安装\n1 picgo install picgo-plugin-telegraph-image 配置\n1 picgo set uploader ","date":"2023-10-21T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310021/","title":"使用picgo-core将markdown图片上传至smms图床"},{"content":"使用maven将阿里云的上传sdk的jar包添加到本地仓库\njar包的下载地址：点此跳转\n下载下来解压，进入lib目录，有类似\naliyun-java-sdk-vod-2.16.11.jar aliyun-java-vod-upload-1.4.15.jar 这两个jar包，在此目录打开终端\nmaven项目缺少 aliyun-java-vod-upload，使用这个命令\n1 mvn install:install-file -DgroupId=com.aliyun -DartifactId=aliyun-java-vod-upload -Dversion=1.4.15 -Dpackaging=jar -Dfile=aliyun-java-vod-upload-1.4.15.jar maven项目缺少 aliyun-sdk-vod-upload，使用这个命令\n1 mvn install:install-file -DgroupId=com.aliyun -DartifactId=aliyun-sdk-vod-upload -Dversion=1.4.15 -Dpackaging=jar -Dfile=aliyun-java-vod-upload-1.4.15.jar ","date":"2023-10-20T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310020/","title":"使用maven将阿里云的上传sdk的jar包添加到本地仓库"},{"content":"需求： 转换申请的 ssl 证书格式，以 pem 结尾的证书改成 key、crt结尾。\n科普：证书格式\ncert.pem：这是服务器证书，也称为公钥证书或端点证书。当客户端请求与服务器建立SSL/TLS连接时，服务器会将此证书发送给客户端以验证身份和建立安全连接。 chain.pem：这是证书链（CA Bundle），其中包括根证书和中间证书。证书链用于构建完整的证书信任链，以验证服务器证书的真实性。 fullchain.pem：这是服务器证书和证书链的组合。它包括服务器证书和中间证书链，但不包括根证书，因为客户端应该已经具有根证书的信任。 privkey.pem：这是私钥文件，它是与服务器证书配对使用的秘密密钥。私钥文件必须保持机密，不应共享或泄露给其他人，以确保安全连接的保密性 解决方法 fullchain.pem 转换 public.crt 1 openssl x509 -in fullchain.pem -out public.crt privkey.pem 转换 privkey.key 1 openssl ec -in privkey.pem -out private.key 如果出现了错误，具体原因为 加密算法不是 EC 其实还有 RSA、DSA等加密算法。\n1 2 # 使用rsa算法转换 openssl rsa -in privkey.pem -out private.key ","date":"2023-10-19T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310019/","title":"SSL证书格式转换"},{"content":"首言 本文编辑于 2023-09-14\n作者：muyiacc\nGithub：github.com/muyiacc\n环境：debian11\n为了通过网址远程查看服务器及容器的运行状况，选择了时下最热门的监控方案：Prometheus+node_exporter+Grafana。\n现记录下自己的安装过程。\n1. Prometheus 官网地址\thttps://prometheus.io/docs/introduction/overview/\n1.1. 概述 Prometheus 是一个开源的系统监控和警报工具包，由SoundCloud 构建，由Golang编写，现有非常活跃的开发人员和社区，是一个独立的开源项目，于2016年加入了云原生计算基金会，成为继Kubernetes之后的第二个托管项目。总结：非常热门+ NB。\n1.2. 安装 话不多说，开始使用安装之旅。\n1）官网下载页面\nhttps://prometheus.io/download/\n核心组件 prometheus的最新版下载地址为：\nhttps://github.com/prometheus/prometheus/releases/download/v2.47.0/prometheus-2.47.0.linux-amd64.tar.gz\n上面的地址为github，众所周知，因为某些原因，你下载可能会出现网络问题，这里不做解决。\n如果你的系统可直连github，可以通过如下命令直接下载。\n1 wget https://github.com/prometheus/prometheus/releases/download/v2.47.0/prometheus-2.47.0.linux-amd64.tar.gz 提示 wget 没安装？\ndebian： sudo apt install wget\ncentos: sudo yum install wget\n2）解压安装\n下载完成之后，解压安装\n解压放到自己熟悉的路径即可。\n1 tar -zxvf prometheus-2.47.0.linux-amd64.tar.gz -C ~/opt/ 修改名字\n1 2 cd ~/opt mv prometheus-2.47.0.linux-amd64 prometheus-2.47.0 在解压的目录下，找到 prometheus.yml 文件，这是prometheus的配置文件\n本文只为快速搭建使用，对于配置的含义不做详细解释。\n默认的文件也不需要修改，需要注意的地方是\n1 2 3 4 5 6 7 8 9 scrape_configs: # The job name is added as a label `job=\u0026lt;job_name\u0026gt;` to any timeseries scraped from this config. - job_name: \u0026#34;prometheus\u0026#34; # metrics_path defaults to \u0026#39;/metrics\u0026#39; # scheme defaults to \u0026#39;http\u0026#39;. static_configs: - targets: [\u0026#34;localhost:9090\u0026#34;] 默认的端口是9090，如果你的端口被占用了，只需要修改上述的端口即可。\n1.3. 启动 因为使用go语言编写，编译后的文件 只需要执行解压后的文件 prometheus\n进入解压的目录\n1）前台启动\n1 ./prometheus --config.file=prometheus.yml 2）后台启动\n1 nohup ./prometheus --config.file=prometheus.yml \u0026amp;\u0026gt;\u0026gt; prometheus.log \u0026amp; 上述的命令的含义为：后台启动，错误的日志重定向到标准输出，也就是将所有的日志追加到prometheus.log 中，prometheus.log会自动生成\n通过浏览器 ip:端口 就可以访问。\n如果是服务器，需要开放安全组，这里不做介绍。\n关于对 Prometheus 的简单介绍就先到这里。\n2. node_exporter 2.1. 概述 在 Prometheus 的架构设计中，Prometheus Server 主要负责数据的收集，存储并且对外提供数据查询支持。\n实际的监控样本数据的收集则是由 Exporter 完成，因此为了能够监控到某些东西，如主机的 CPU 使用率，我们需要使用到 Exporter。\nPrometheus 周期性的从 Exporter 暴露的 HTTP 服务地址（通常是/metrics）拉取监控样本数据。\n为了能够采集到主机的运行指标如 CPU, 内存，磁盘等信息。我们可以使用 Node Exporter。Node Exporter 同样采用 Golang 编写，并且不存在任何的第三方依赖，只需要下载，解压即可运行。\n下载地址：\thttps://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz\n2.2. 安装 1 2 3 4 5 6 7 8 # 下载 wget https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz # 解压 tar -zxvf node_exporter-1.6.1.linux-amd64 -C ~/opt/ # 修改名字 cd ~/opt/ \u0026amp;\u0026amp; mv node_exporter-1.6.1.linux-amd64 node_exporter-1.6.1 2.3. 启动 直接执行 node_exporter文件即可\n1 2 3 cd ~/opt/linux-amd64 node_exporter-1.6.1 ./node_exporter 通过控制台打印的信息可以知道，端口为 9100\n浏览器访问 ip:9100即可访问\n设置开机自启，编写systemd 服务脚本\n关于如何编写，可以观看这篇文章\nhttps://blog.csdn.net/lu_embedded/article/details/132424115\n服务脚本文件以 .service 结尾，由 Unit、Service 和 Install 三个区块组成，这里提供一个示例\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [Unit] Description=test # 简单描述服务 After=network.target # 描述服务类别，表示本服务需要在network服务启动后在启动 Before=xxx.service # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系 [Service] Type=forking # 设置服务的启动方式 User=USER # 设置服务运行的用户 Group=USER # 设置服务运行的用户组 WorkingDirectory=/PATH\t# 设置服务运行的路径(cwd) KillMode=control-group # 定义systemd如何停止服务 Restart=no # 定义服务进程退出后，systemd的重启方式，默认是不重启 ExecStart=/start.sh # 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking） [Install] WantedBy=multi-user.target # 多用户 创建 service 文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 sudo vim /usr/lib/systemd/system/node_exporter.service [Unit] Description=node_export Documentation=https://github.com/prometheus/node_exporter After=network.target [Service] Type=simple User=ecs-user ExecStart=/home/ecs-user/opt/node_exporter-1.6.1/node_exporter Restart=on-failure [Install] WantedBy=multi-user.target 开启自启\n1 2 3 4 5 6 # 查看状态 systemctl status node_exporter # 启动node_exporter systemctl start node_exporter # 开启自启 systemctl enable node_exporter 3. Grafana 3.1 概述 Grafana 是一款采用 Go 语言编写的开源应用，主要用于大规模指标数据的可视化展现\n是网络架构和应用分析中最流行的时序数据展示工具，目前已经支持绝大部分常用的时序数据库。\n官网：https://grafana.com/zh-cn/grafana/\n3.2 安装 个人使用，选择 Standalone Linux Binaries 版本\n1 2 3 4 5 6 7 # 下载 wget https://dl.grafana.com/enterprise/release/grafana-enterprise-10.1.1.linux-amd64.tar.gz # 解压 tar -zxvf grafana-enterprise-10.1.1.linux-amd64.tar.gz -C ~/opt/ # 不用修改名字了，默认为grafana-10.1.1 3.3 启动 进入解压的目录之后\n1 nohup ./bin/grafana-server web \u0026amp;\u0026gt;\u0026gt; grafana.log \u0026amp; 3.4 集成Prometheus 启动Grafana之后，浏览器访问 ip:3000，进入登录界面，默认用户和密码都为admin\n输出密码之后，会提示修改密码，修改即可。\n完成之后，进入主界面 ，大概如下：\n![image-20230914174457412](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 17-45-17_image-20230914174457412.png)\n3.4.1 配置数据源 按住Ctrl+K，搜索 data sources，选中data sources 配置数据源，进入如下界面\n![image-20230914174701933](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 17-47-04_image-20230914174701933.png)\n选择 add new data source ，选择Prometheus，进入配置\n![image-20230914174847825](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 17-48-49_image-20230914174847825.png)\n这里只需要配置一下 Prometheus server URL，默认没改端口的填入 http://localhost:9090，不要选择https，滑到最底下，选择save \u0026amp; test按钮，如果显示Successfully queried the Prometheus API，表示对接成功。\n3.4.2 创建仪表盘 Dashboard Ctrl + K，搜索 Dashboards，进入Dashboards，选择new dashborad，后续自行探索吧。\n![image-20230914175424008](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 17-54-27_image-20230914175424008.png)\n3.4.3 导入仪表盘 Dashboard Ctrl + K，搜索 Dashboards，进入Dashboards，选择Import\n![image-20230914175910755](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 17-59-12_image-20230914175910755.png)\n填入 ID ,Load 即可\n对于如何寻找已经创建好的仪表盘，可在官网寻找 https://grafana.com/grafana/dashboards/\n![image-20230914180001302](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 18-00-03_image-20230914180001302.png)\n这里推荐一个 https://grafana.com/grafana/dashboards/12633-linux/\n填入的id为12633，load后进入如下界面，选择之前连接的Prometheus，最后 Import就大功告成了。\n![image-20230914180651577](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 18-06-53_image-20230914180651577.png)\n最后的展示\n![image-20230914180755078](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-14 18-07-57_image-20230914180755078.png)\n","date":"2023-10-18T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310018/","title":"Prometheus+node_exporter+Grafana实现监控服务器"},{"content":"概述 Node Version Manager，NodeJS 版本管理工具\nGithub: https://github.com/nvm-sh/nvm\n快速上手 安装nvm\n1 wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash 查看帮助信息\n1 nvm --help 查看可安装的 Node 版本\n1 2 # 查看node版本 nvm ls-remote 安装默认的 Node lts 版本\n1 2 # 安装lts版本 nvm install --lts # 安装默认的 lts 版本，目前是20 安装指定的 Node 版本\n1 nvm install 16.20.2 查看本地已下载的 Node 信息\n1 nvm ls 使用指定的 Node 版本\n1 2 # 确保已经安装过 nvm use 16 Windows windows下其实也有nvm，不过项目是另一个，nvm-windows\n使用命令有所不同，不过都很简单。\n","date":"2023-10-17T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310017/","title":"nvm，Node版本管理工具"},{"content":"如果日志文件太大，使用一些工具来查看和分析日志内容，以便更方便地定位问题。以下是几种常用的方法：\n使用tail命令：tail命令可以用来查看日志文件的末尾内容。可以通过指定-n参数来指定要显示的行数，例如：\n1 tail -n 100 logs.log 这将显示日志文件的最后100行内容。可以根据需要调整行数，以便查看足够的日志内容。\n使用less命令：less命令可以以分页的方式查看文件内容，并且支持向前/向后翻页浏览。可以运行以下命令来使用less命令查看日志文件：\n1 less logs.log 运行后，可以使用上下箭头键进行滚动，按空格键向下翻页，按b键向上翻页，按q键退出查看。\n使用日志分析工具：如果的日志文件非常庞大或需要更高级的日志分析功能，可以考虑使用专门的日志分析工具，例如grep、awk、sed等。这些工具可以帮助根据特定的模式或关键词过滤、搜索和提取日志内容。\n例如，可以使用grep命令来搜索包含特定关键词的日志行：\n1 grep \u0026#34;error\u0026#34; logs.log 这将显示包含 \u0026ldquo;error\u0026rdquo; 关键词的日志行。\n或者，可以使用awk命令来提取特定字段或进行更复杂的日志处理操作：\n1 awk \u0026#39;{print $1, $2, $5}\u0026#39; logs.log 这将提取日志行中的第1、2和5个字段，并将其显示出来。\n","date":"2023-10-16T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310016/","title":"Linux下的日志太大，如何查看不卡顿"},{"content":" title: Linux下的 Typora 安装和激活 author: taoone create_date: 2023-10-19\ntypora作为markdown的编辑器的翘楚不用多介绍了吧，就是收费了，不过收费才能让软件走的更好，更远，所以，所以\u0026hellip;所以呢，我目前选择破解\n安装typora 方式一 注意：此方式会下载最新版本.\n官网教程：https://typoraio.cn/#linux\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 # or run: # sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE wget -qO - https://typoraio.cn/linux/public-key.asc | sudo tee /etc/apt/trusted.gpg.d/typora.asc # add Typora\u0026#39;s repository sudo add-apt-repository \u0026#39;deb https://typoraio.cn/linux ./\u0026#39; sudo apt-get update # install typora sudo apt-get install typora 方式二 可以下载指定的版本，更改后面的版本号即可\nhttps://download2.typoraio.cn/linux/typora_1.7.5_amd64.deb\n下载完成时候安装\n1 sudo dpkg -i typora_1.7.5_amd64.deb 激活typora 以下命令均为绝对路径，只需要复制粘贴即可\n下载\n1 2 3 git clone https://github.com/muyiacc/NodeInject.git ~/.NodeInject git clone https://github.com/muyiacc/NodeInject_Hook_example.git ~/.NodeInject_Hook_example 将NodeInject_Hook_example下hook.js 复制到 NodeInject/src下，并改名为hooklog.js\n1 cp ~/.NodeInject_Hook_example/hook.js ~/.NodeInject/src/hooklog.js 安装rust 按照官方教程，需要用到cargo，这是rust所包含的包管理工具，所以还得安装rust 中间选择 1 使用默认推荐安装 安装完成之后，接着刷新环境\n1 curl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh 1 source \u0026#34;$HOME/.cargo/env\u0026#34; 接着在终端输入，测试安装是否成功，输出如下信息则安装成功\n1 2 → cargo -V cargo 1.73.0 (9c4383fb5 2023-08-26) 进入NodeInject编译\n1 cd ~/.NodeInject \u0026amp;\u0026amp; cargo build 将编译后的可执行文件复制到 typora文件夹下，并切换，执行复制的文件\n1 2 3 sudo cp ~/.NodeInject/target/debug/node_inject /usr/share/typora/ sudo /usr/share/typora/node_inject 这里出现如下信息，则到目前为止，没有任何问题。\n1 2 3 4 5 extracting node_modules.asar adding hook.js applying patch packing node_modules.asar done! 切换回 NodeInject_Hook_example，生成 license\n1 2 3 4 5 cd ~/.NodeInject_Hook_example/license-gen/ ~/.NodeInject_Hook_example/license-gen/cargo build ~/.NodeInject_Hook_example/license-gen/target/debug/license-gen 接着出现 license\n1 License for you: 5QSW2H-X9GNBU-64F2MZ-YYHJ7W 打开typora，输入邮箱和许可证激活 幸运的话，就可以激活了。\n卸载typora 1 2 3 sudo apt purge typora sudo rm -rf /usr/share/typora ","date":"2023-10-15T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310015/","title":"Linux下的 Typora 安装和激活"},{"content":"今天安装了postman，下载下来之后发现是一个压缩包的文件，kde的全局搜索（alt+space）搜不到，想把它加进去。\n压缩包包含的目录如下\n1 2 drwxr-xr-x 6 taoone taoone 4096 Oct20日 23:17 app lrwxrwxrwx 1 taoone taoone 11 Oct20日 23:17 Postman -\u0026gt; app/Postman app\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 → ll app/ 总计 184784 drwxr-xr-x 6 taoone taoone 4096 Oct20日 23:17 . drwxr-xr-x 3 taoone taoone 4096 Oct20日 23:17 .. -rw-r--r-- 1 taoone taoone 148993 Oct20日 23:17 chrome_100_percent.pak -rw-r--r-- 1 taoone taoone 221103 Oct20日 23:17 chrome_200_percent.pak -rwxr-xr-x 1 taoone taoone 1123584 Oct20日 23:17 chrome_crashpad_handler -rwxr-xr-x 1 taoone taoone 53224 Oct20日 23:17 chrome-sandbox drwxr-xr-x 2 taoone taoone 4096 Oct20日 23:17 icons -rw-r--r-- 1 taoone taoone 10284336 Oct20日 23:17 icudtl.dat -rwxr-xr-x 1 taoone taoone 252576 Oct20日 23:17 libEGL.so -rwxr-xr-x 1 taoone taoone 3012552 Oct20日 23:17 libffmpeg.so -rwxr-xr-x 1 taoone taoone 5833784 Oct20日 23:17 libGLESv2.so -rwxr-xr-x 1 taoone taoone 4252936 Oct20日 23:17 libvk_swiftshader.so -rwxr-xr-x 1 taoone taoone 5709040 Oct20日 23:17 libvulkan.so.1 drwxr-xr-x 2 taoone taoone 4096 Oct20日 23:17 locales -rwxr-xr-x 1 taoone taoone 152013352 Oct20日 23:17 postman -rwxr-xr-x 1 taoone taoone 16848 Oct20日 23:17 Postman drwxr-xr-x 4 taoone taoone 4096 Oct20日 23:17 resources -rw-r--r-- 1 taoone taoone 5109757 Oct20日 23:17 resources.pak -rw-r--r-- 1 taoone taoone 405456 Oct20日 23:17 snapshot_blob.bin drwxr-xr-x 2 taoone taoone 4096 Oct20日 23:17 swiftshader -rw-r--r-- 1 taoone taoone 726296 Oct20日 23:17 v8_context_snapshot.bin -rw-r--r-- 1 taoone taoone 107 Oct20日 23:17 vk_swiftshader_icd.json 先解压让终端可以运行postman\n1 sudo tar -zxvf postman-linux-x64.tar.gz -C /opt/ 解压之后的文件夹是Postman，绝对路径为 /opt/Postman\n添加到 bin目录，创建软连接\n1 sudo ln -s /opt/Postman/Postman /usr/bin/Postman 添加全局搜索 全局搜索的配置文件在 /usr/share/applications，这里有很多已经安装的软件，如\n1 2 3 brave-browser.desktop firefox-esr.desktop google-chrome.desktop 名字都是 软件名.desktop的形式，我们仿照它们，新建一个\n1 vim postman.desktop 内容如下\n1 2 3 4 5 6 7 [Desktop Entry] Type=Application Name=Postman Icon=/opt/Postman/app/icons/icon_128x128.png Exec=/opt/Postman/Postman Terminal=false Categories=Application; 保存退出即可生效。\n最后 alt+space 输入postman即可搜索到\n","date":"2023-10-14T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310014/","title":"Linux下kde环境将应用程序添加快捷方式和全局搜索"},{"content":"介绍 之前介绍过一个免翻使用chatgpt接口的项目 Pandora，但是呢，这个项目的代理是由项目作者提供的，而且访问比较慢，界面比较朴实，体验感不太好，后来发现另一个chatgpt的web项目，名字叫 ChatGPT-Next-Web，可以很方便的使用代理接口，我们可以使用一些免费的接口来提升使用感。\nGithub 地址：https://github.com/Yidadaa/ChatGPT-Next-Web\n访问查看，界面样式可以看见还是很美观的：\n安装 使用docker compose 方式搭建。\ndocker-compose.yml\n1 2 3 4 5 6 7 8 9 10 11 12 version: \u0026#39;3.9\u0026#39; services: chatgpt-next-web: image: yidadaa/chatgpt-next-web container_name: chatgpt-next-web environment: - CODE=#页面访问密码， - OPENAI_API_KEY=#你的api key - BASE_URL=#接口地址 ports: - \u0026#39;3000:3000\u0026#39; restart: unless-stopped 上述的docker-compose 文件是一个简洁版，免去了代理proxy，我们使用免费的api接口，后面有介绍\n关于完整的内容可以去官方查看。\n启动容器\n1 docker compose up -d 接口 关于接口，网上也有一些免费的api 接口地址\n这里提供一个Github的开源项目：GPT_API_free\n快速获取api key，点击下面的连接获取api，获取的api用来替换上面配置的api，接口地址呢推荐使用下面的国内地址转发。\n申请领取内测免费API Key\n转发Host1: https://api.chatanywhere.com.cn (国内中转，延时更低，推荐)\n转发Host2: https://api.chatanywhere.cn (国外使用,国内需要全局代理)\n","date":"2023-10-13T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310013/","title":"Docker部署ChatGPT-Next-Web"},{"content":"前言 每次装新系统都要网上搜各种换仓库镜像源的教程，有的还不一定准确，自己总结下，免得到处翻找\n我一般用的是 Debian 系统，Centos 因为变得不再稳定，所以我已不再使用，如果你用的是 Debian 系，应该也适合你，如 Ubuntu。\n以下教程都是在 root 用户使用，新用户还需要编辑 sudoer 文件，太麻烦了，索性直接用 roo t用户，不过便于以后使用，以后可能普通用户也有换源的需求，有的命令也加上 sudo\n查看自己的 Debian 发行版本\n1 2 3 4 cat /etc/issue # 或者 cat /proc/version 本次教程发行版本是 Debian 12 (bookworm)\nDebian 软件源文件所在位置 /etc/apt/sources.list\n修改之前先备份\n1 sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak 清华源 官方帮助地址：https://mirrors.tuna.tsinghua.edu.cn/help/debian/\nStep 1 新系统更新软件缓存包时会用到 官方安全更新软件源，国内网络问题，所以会直接卡住，所以先使用清华源更新，更新后再换回来\n1 2 # 编辑 /etc/apt/sources.list sudo vi /etc/apt/sources.list 快捷键：\nhome键：光标跳转到行首 dG：删除全部内容 在官网选择好对应的版本和内容如下：\n是否使用 HTTPS：否 是否使用 sudo：是 Debian 版本：Debian 12 (bookworm) 启用源码镜像：否 使用官方安全更新软件源：否 将复制的内容粘贴到终端\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware deb http://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware # deb http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware # # deb-src http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware 退出，更新缓存\n1 2 3 4 sudo apt update # 这一步安装好vim，便于后续使用 sudo apt install vim Step 2（可选） Debian Buster 以上版本默认支持 HTTPS 源，所以可选。\n安装：\napt-transport-https ca-certificates 1 sudo apt install apt-transport-https ca-certificates Step 3 类似于step1，选择的内容则有所不同\n是否使用 HTTPS：==是== 是否使用 sudo：是 Debian 版本：Debian 12 (bookworm) 启用源码镜像：否 使用官方安全更新软件源：==是== 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # 编辑 /etc/apt/sources.list sudo vim /etc/apt/sources.list # 删除全部内容，粘贴重新复制的内容 deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware # # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware # deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware 更新缓存\n1 sudo apt update 现在就可以自由安装软件了。\n中科大 1 sudo sed -i \u0026#39;s/deb.debian.org/mirrors.ustc.edu.cn/g\u0026#39; /etc/apt/sources.list 阿里云 参考地址：https://developer.aliyun.com/mirror/debian?spm=a2c6h.13651102.0.0.7fb11b11uZIZXw\nDebian10 此源为阿里云的云服务器默认配置，使用阿里云镜像站的源下载速度很慢，不知为何。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ## Note, this file is written by cloud-init on first boot of an instance ## modifications made here will not survive a re-bundle. ## if you wish to make changes you can: ## a.) add \u0026#39;apt_preserve_sources_list: true\u0026#39; to /etc/cloud/cloud.cfg ## or do the same in user-data ## b.) add sources in /etc/apt/sources.list.d ## c.) make changes to template file /etc/cloud/templates/sources.list.debian.tmpl ### # See http://www.debian.org/releases/stable/i386/release-notes/ch-upgrading.html # for how to upgrade to newer versions of the distribution. deb http://mirrors.cloud.aliyuncs.com/debian/ bullseye main contrib non-free deb http://mirrors.cloud.aliyuncs.com/debian/ bullseye-updates main contrib non-free deb http://mirrors.cloud.aliyuncs.com/debian/ bullseye-proposed-updates main non-free contrib deb http://mirrors.cloud.aliyuncs.com/debian/ bullseye-backports main non-free contrib ## Major bug fix updates produced after the final release of the ## distribution. deb-src http://mirrors.cloud.aliyuncs.com/debian/ bullseye-updates main contrib non-free deb-src http://mirrors.cloud.aliyuncs.com/debian/ bullseye main contrib non-free deb-src http://mirrors.cloud.aliyuncs.com/debian/ bullseye-proposed-updates main contrib non-free deb-src http://mirrors.cloud.aliyuncs.com/debian/ bullseye-backports main contrib non-free deb http://mirrors.cloud.aliyuncs.com/debian-security/ bullseye-security main non-free contrib deb-src http://mirrors.cloud.aliyuncs.com/debian-security/ bullseye-security main non-free contrib ## Uncomment the following two lines to add software from the \u0026#39;backports\u0026#39; ## repository. ## ## N.B. software from this repository may not have been tested as ## extensively as that contained in the main release, although it includes ## newer versions of some applications which may provide useful features. ","date":"2023-10-12T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310012/","title":"Debian软件源之国内镜像源"},{"content":"linux原生版微信 linux上的微信版本今天发现优麒麟的适配比较好\n下载地址：点此跳转\n安装\n1 sudo dpkg -i 下载的安装包 引用自 未公开发行的Linux版微信：\n其实早就已经有原生态的微信，但是没有公开的发行。我是在阿里的源里面 \u0026gt; 找的原生微信。功能比较简陋，但是可以使用，已经升级几个版本了。有兴趣的可以去下载。 下载链接： https://mirrors.aliyun.com/ubuntukylin/pool/partner/weixin_2.1.4_amd64.deb?spm=a2c6h.25603864.0.0.7ead34376Zfwrf\nlinux wine版微信 上述是一个原生版本的微信，功能呢相对较少。\n除此之外，星火商店还有个wine版本的微信，功能趋近于windows平台。\n可以通过下载星火商店来安装wine版本的微信\n星火商店地址：https://spark-app.store\n","date":"2023-10-11T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310011/","title":"Debian安装微信"},{"content":"官网：1.1.1.1\n安装 Debian The supported releases are:\nBookworm (12) Bullseye (11) Buster (10) Stretch (9) Add cloudflare gpg key\n1 curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg Add this repo to your apt repositories echo \u0026ldquo;deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main\u0026rdquo; | sudo tee /etc/apt/sources.list.d/cloudflare-client.list\nInstall sudo apt-get update \u0026amp;\u0026amp; sudo apt-get install cloudflare-warp\n","date":"2023-10-10T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310010/","title":"Debian下使用warp"},{"content":"apt默认只有jdk17版本了,安装了jdk17之后，再安装jdk8\njdk17 1 sudo apt install openjdk-17-jdk jdk8 jdk-8，oracle的版本\n现在下载需要登陆，点此跳转页面选择版本下载\n下载好了之后，解压\n1 sudo tar -zxvf jdk-8u381-linux-x64.tar.gz -C /usr/lib/jvm/ 注册\n1 sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.8.0_381/bin/java 1 设置环境变量\n1 sudo vim /etc/profile.d/java.sh 1 2 export PATH=$PATH:/usr/lib/jvm/jdk1.8.0_381/bin/ export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_381/ 1 source /etc/profile.d/java.sh 切换版本 1 sudo update-alternatives --set java /usr/lib/jvm/jdk1.8.0_381/bin/java ","date":"2023-10-09T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310009/","title":"Debian12或者Linux安装JDK17和JDK8"},{"content":"本文以 Debian 12 为例\n准备 安装之前先确保环境的干净，查看数据库安装的情况\n1 dpkg -l | grep -E \u0026#39;(mysql|maria)\u0026#39; 根据上述命令的输出情况卸载他们，一般 debian 默认安装了 mariadb\n1 sudo apt purge 软件包名字 删除配置文件\n1 sudo rm -rf /etc/mysql /var/lib/mysql 安装 下载 mysql\n官网下载地址：https://downloads.mysql.com/archives/community/\n选择与系统最接近的版本\nDebian 11:\nV8.0.x: https://downloads.mysql.com/archives/get/p/23/file/mysql-server_8.0.33-1debian11_amd64.deb-bundle.tar Debain12:\nV8.4.x: https://cdn.mysql.com//Downloads/MySQL-8.4/mysql-server_8.4.3-1debian12_amd64.deb-bundle.tar 命令行下载：\n1 2 3 mkdir mysql \u0026amp;\u0026amp; cd ./mysql wget https://downloads.mysql.com/archives/get/p/23/file/mysql-server_8.0.34-1debian11_amd64.deb-bundle.tar 解压 mysql\n1 tar -xvf mysql-server_8.0.34-1debian11_amd64.deb-bundle.tar 安装 mysql\n!!! 由于每个人的环境都不一样，关于 mysql 的依赖需求，下面的教程不一定包含全部，如果没有涉及到，请自行上网搜索解决。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # 安装有依赖要求，所以按照顺序安装 sudo dpkg -i mysql-community-client-plugins_8.0.34-1debian11_amd64.deb # 如果提示缺少 libssl1.1， 请到这里下载：https://packages.debian.org/zh-cn/buster/libssl1.1，下载对应的版本，下载完成之后安装 # 这里贴出快速下载地址，可使用wget下载： # http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.1_1.1.1n-0+deb10u6_amd64.deb sudo dpkg -i mysql-community-client-core_8.0.34-1debian11_amd64.deb sudo dpkg -i mysql-common_8.0.34-1debian11_amd64.deb sudo dpkg -i mysql-community-client_8.0.34-1debian11_amd64.deb sudo dpkg -i mysql-client_8.0.34-1debian11_amd64.deb # 这一步可能会缺少libmecab2 # 所以安装 libmecab2 # sudo apt install libmecab2 sudo dpkg -i mysql-community-server-core_8.0.34-1debian11_amd64.deb # 这一步会有界面提示输入root密码，两次输入密码之后，选择 recommed 推荐的密码插件认证（8.0） sudo dpkg -i mysql-community-server_8.0.34-1debian11_amd64.deb 使用 system 服务管理 mysql 状态\n1 2 3 4 5 6 7 8 # 查看mysql的状态，默认应该是启动的 systemctl status mysql # 启动mysql sudo systemctl start mysql # 关闭mysql sudo systemctl stop mysql 卸载 如果需要卸载 mysql\n先停止 MySQL 服务\n1 sudo systemctl stop mysql 卸载组件\n1 2 3 4 5 6 7 # 按照顺序卸载 sudo dpkg -r mysql-community-server sudo dpkg -r mysql-community-server-core sudo dpkg -r mysql-client sudo dpkg -r mysql-community-client sudo dpkg -r mysql-common sudo dpkg -r mysql-community-client-core 删除相关文件和文件夹\n1 2 3 4 sudo rm -rf /etc/mysql/ sudo rm -rf /var/lib/mysql/ sudo rm -rf /usr/lib/mysql/ sudo rm -rf /var/log/mysql ","date":"2023-10-08T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310008/","title":"Linux安装和卸载MySQL8.0.x"},{"content":"debian12 安装中文输入法\n如果安装系统的时候选择是中文安装，默认就会安装好中文输入法，因为后面我安装rime,不熟悉卸载了fcitx5导致默认的中文失效，发现rime配置太麻烦，默认还不好用，所以打算又重新安装默认的中文输入法，但一直没搞对，后来终于解决了，这里介绍一下经验\n在使用fcitx5的前提下，安装中文输入法。本文不涉及字体等等\n如果没有安装dcitx5的按照以下安装:\nsudo apt update sudo apt install fcitx5\n正确步骤 实际上，中文输入法有个插件的，安装正确的插件才会恢复到默认的状态。\n首先建议把系统语言设置为中文，在设置中文输入法有大用！！如果需要设置为英文，再换回来。\n在终端直接用apt搜索fcitx5相关的中文插件，如下所示：\n1 apt list | grep fcitx5 | grep chinese 输出如下：\n1 2 3 4 5 6 WARNING: apt does not have a stable CLI interface. Use with caution in scripts. fcitx5-chinese-addons-bin/stable,now 5.0.16-1 amd64 [installed,automatic] fcitx5-chinese-addons-bin/stable 5.0.16-1 i386 fcitx5-chinese-addons-data/stable,stable,now 5.0.16-1 all [installed,automatic] fcitx5-chinese-addons/stable,stable,now 5.0.16-1 all [installed] 可以看到有 fcitx5-chinese-addons这个选项，安装它\n1 sduo apt install fcitx5-chinese-addons 安装完就已经安装好了中文输入法，包含一些如拼音，五笔等等。到这里在设置里选择输入法为拼音就好了，重启。就这么简单。\n网上答案质量层次不齐，害人不浅，搞死我了。。。\n附录 这里提供其中的一个错误实例，供参考，安装后都用不了： sudo apt install fcitx5-pinyin\n","date":"2023-10-07T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310007/","title":"debian12安装中文输入法"},{"content":"本文列举安装并使用的的一些软件，基于debian12，debain12有很大的更新，使用wayland替代了x11，本文编辑时，可能好多软件没适配，体验感稍差。\n本文将持续更新\nDebian 官方指南：Debian 系统中可用的软件\n浏览器 Firefox ESR 默认预装，感觉可以，更新频率比较慢\nFirefox 更新速度较快，有很多Firefox ESR没有的新功能\nGoogle chrome Brave https://brave.com/linux/\n1 2 3 4 5 6 7 8 9 sudo apt install curl sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg echo \u0026#34;deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\u0026#34;|sudo tee /etc/apt/sources.list.d/brave-browser-release.list sudo apt update sudo apt install brave-browser 下载工具 Free Download Manager 截止本文，我觉得是linux上最好的下载工具\n更新：推荐使用 gopeed\ngopeed https://github.com/GopeedLab/gopeed\nXDM 很混乱，感觉好久没怎么更新了，体验感较差\n社交 QQ 通过官网下载安装即可\n微信 推荐使用deepin-wechat，分辨率有问题，能尽量避免不用就不用吧，体验感很差\n官方已推出linux测试版，通过这个仓库可以下载：\nhttps://github.com/lovechoudoufu/wechat_for_linux\n播放器 VLC mpv 上手有一定难度，配置文件可备份，安装后即可使用\n个人配置仓库：https://github.com/muyiacc/mpv-config\nzyplayer 可以用来看影视\n音乐 LX Music 推荐，跨平台使用，可下载，但是界面来说，我感觉一般，播放没有列表选择，本地音乐支持不好，主要用来听网络上的歌曲\n可以使用网易云的歌单\nSpotify 官方教程：https://www.spotify.com/us/download/linux/\n1 2 curl -sS https://download.spotify.com/debian/pubkey_6224F9941A8AA6D1.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg echo \u0026#34;deb http://repository.spotify.com stable non-free\u0026#34; | sudo tee /etc/apt/sources.list.d/spotify.list 1 sudo apt-get update \u0026amp;\u0026amp; sudo apt-get install spotify-client 去广告脚本\n1 bash \u0026lt;(curl -sSL https://spotx-official.github.io/run.sh) Amberol 这是一款本地播放器，颜值高，Kde系通过 Flathub 安装\n1 flatpak install flathub io.bassi.Amberol 编辑器 Typora 教程：https://www.seektao.cc/archives/debian-typora-activation\n新版教程：https://www.seektao.cc/archives/202406151533\nObsidian 感觉怎么说呢，还是没有typora用的习惯\n神器，已作为我的主力编辑markdown的软件\nSublime Text https://www.sublimetext.com/docs/linux_repositories.html\n1 2 3 4 5 6 wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/sublimehq-archive.gpg \u0026gt; /dev/null echo \u0026#34;deb https://download.sublimetext.com/ apt/stable/\u0026#34; | sudo tee /etc/apt/sources.list.d/sublime-text.list sudo apt-get update sudo apt-get install sublime-text 编程 Jetbrains Toolbox 推荐，使用它安装其他jetbrains家族的软件，可以解决分辨率的问题，而且安装起来也比较方便。\n而且，学生免费\nNavicat 好看是好看，就是激活太麻烦了，不如用 Jetbrains 的Data Grip\n更新：Navicat推出了 lite版本，个人免费使用\n录屏 OBS Studio 推荐，跨平台，又是个推流工具\n安装方式：https://github.com/obsproject/obs-studio/wiki/unofficial-linux-builds#debian\n1 2 3 sudo apt update sudo apt install ffmpeg sudo apt install obs-studio SSH Termius 跨平台，美观，同步收费\nTabby 开源，可同步配置文件\n远程控制 ruskdesk https://github.com/rustdesk/rustdesk/releases/tag/1.2.3\n1 wget https://github.com/rustdesk/rustdesk/releases/download/1.2.3/rustdesk-1.2.3-x86_64.deb 截图 eSearch linux下的截图软件，可支持搜索，识别文字，还可以，但是debian12钉图会导致输入法失效，不知道你用的时候解决了没\ngithub可以搜索到\nflameshot debian12也有问题，功能感觉不如eSearch强大，不过也还可以\nsnipaste 没错，windows上的那个软件出linux版本了\nhttps://www.snipaste.com/\n虚拟机 Vmware 卸载方式，apt找不到设备，通过官网查到\n1 2 sudo su - vmware-installer -u vmware-workstation 推荐\n新装机器安装VMware后，新建虚拟机有问题，现在更推荐VirtualBox\nVirtualBox Oracle出品。\n其他 Thunderbird 聚合邮件工具\n","date":"2023-10-06T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310006/","title":"Debian12下的软件清单"},{"content":"安装 安装 Navicat Promium，最新版本是16，使用官网提供的下载方式\n1 2 3 4 5 6 7 cd ~ wget https://www.navicat.com/download/direct-download?product=navicat16-premium-en.AppImage\u0026amp;location=1 chmod +x navicat16-premium-en.AppImage ./navicat16-premium-en.AppImage 激活 Github开源的地址：点此跳转\n以下命令你只需复制粘贴即可\n提取AppImage 将下载的 AppImage 文件内容全部提取到一个文件夹中\n1 2 3 4 5 6 7 8 mkdir navicat16-premium-cs mount -o loop ./navicat16-premium-cs.AppImage ./navicat16-premium-cs sudo mount -o loop ./navicat16-premium-cs.AppImage ./navicat16-premium-cs # 这一步需要等待一会 cp -r ./navicat16-premium-cs ./navicat16-premium-cs-patched 编译 前提安装了\ncapstone keystone rapidjson 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 sudo apt update # 安装 capstone sudo apt install libcapstone-dev # 安装 keystone sudo apt install cmake git clone https://github.com/keystone-engine/keystone.git ~/.keystone cd ~/.keystone mkdir build cd build ../make-share.sh sudo make install sudo ldconfig # 安装 rapidjson sudo apt install rapidjson-dev 开始编译\n1 2 3 4 5 git clone https://github.com/JohnHubcr/navicat-keygen ~/.navicat-keygen cd ~/.navicat-keygen make all 重置 ","date":"2023-10-05T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310005/","title":"Debian12下的Navicat-Promium安装和激活(未完成)"},{"content":"命令英文版 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 Usage: warp-cli [OPTIONS] \u0026lt;COMMAND\u0026gt; Commands: register Register with the WARP API, replacing any existing registration (Must be run before first connection!) teams-enroll Enroll with Cloudflare for Teams delete Delete current registration rotate-keys Generate a new key-pair, keeping the current registration status Ask the daemon to send the current status warp-stats Retrieve the stats for the current WARP connection warp-dns-stats Retrieve the DNS stats for the current WARP connection settings Retrieve the current application settings connect Connect to WARP whenever possible [aliases: enable-always-on] disconnect Disconnect from WARP [aliases: disable-always-on] disable-wifi Automatically disable WARP on Wi-Fi networks (disabled for Zero Trust customers) enable-wifi Allow WARP on Wi-Fi networks (disabled for Zero Trust customers) disable-ethernet Automatically disable WARP on ethernet networks (disabled for Zero Trust customers) enable-ethernet Allow WARP on ethernet networks (disabled for Zero Trust customers) add-trusted-ssid Add a trusted Wi-Fi network for which WARP will be automatically disconnected remove-trusted-ssid Remove a trusted Wi-Fi network exclude-private-ips Exclude private IP ranges from tunnel enable-dns-log Enable DNS logging (Use with the -l option) disable-dns-log Disable DNS logging account Display the account associated with the current registration devices Display the list of devices associated with the current registration network Display the current network information get-virtual-networks List the available virtual networks set-virtual-network Set the currently connected virtual network via the id from get-virtual-networks set-mode Set the mode set-families-mode Set the families mode set-license Attach the current registration to a different account using a license key set-gateway Force the app to use the specified Gateway ID for DNS queries clear-gateway Clear the Gateway ID set-custom-endpoint Force the client to connect to the specified IP:PORT endpoint (Zero Trust customers must run this command as a privileged user) clear-custom-endpoint Remove the custom endpoint setting add-excluded-route Add an excluded IP remove-excluded-route Remove an excluded IP get-excluded-routes Get the list of excluded routes get-included-routes Get the list of included routes get-excluded-hosts Get the list of excluded hosts get-included-hosts Get the list of included hosts add-excluded-host Add an excluded host remove-excluded-host Remove an excluded host add-fallback-domain Add a domain that should be resolved with the fallback resolver instead of WARP\u0026#39;s remove-fallback-domain Stop a domain from being resolved with the fallback resolver get-fallback-domains Get the list of domains that go to the fallback resolver restore-fallback-domains Restore the list of fallback resolver domains to its default value get-device-posture Get the current device posture override Temporarily override MDM policies that require the client to stay enabled set-proxy-port Set the listening port for WARP proxy (127.0.0.1:{port}) is-mode-switch-allowed Outputs true if Teams users should be able to change connection mode, or false if not reset-settings Restore settings to default get-organization Get the name of the Teams organization currently in settings access-reauth Force refresh authentication with Cloudflare Access get-support-url Get the support url for the current Teams organization get-pause-end Retrieve the pause end time get-override-end Retrieve the admin override end time disable-connectivity-checks Disable the runtime connectivity checks enable-connectivity-checks Enable the runtime connectivity checks dump-excluded-routes Get split tunnel routing dump. For include-only mode, this shows routes NOT included get-alternate-network Get the name of the currently detected alternate network, if any get-dex-data Get the most recently uploaded DEX data. Returns the most recent test for each dex metric help Print this message or the help of the given subcommand(s) Options: -l, --listen Listen for status changes and DNS logs (if enabled) --accept-tos Accept the Terms of Service agreement -v, --verbose... Enable verbose output. Multiple \u0026#34;v\u0026#34;s adds more verbosity -h, --help Print help -V, --version Print version 命令中文版 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 用法：warp-cli [选项] \u0026lt;命令\u0026gt; 命令： register 注册到 WARP API，替换任何现有的注册（必须在首次连接之前运行！） teams-enroll 注册到 Cloudflare for Teams delete 删除当前注册 rotate-keys 生成新的密钥对，保留当前注册 status 请求守护进程发送当前状态 warp-stats 检索当前 WARP 连接的统计信息 warp-dns-stats 检索当前 WARP 连接的 DNS 统计信息 settings 检索当前应用程序设置 connect 尽可能连接到 WARP [别名：enable-always-on] disconnect 断开与 WARP 的连接 [别名：disable-always-on] disable-wifi 在 Wi-Fi 网络上自动禁用 WARP（对于 Zero Trust 客户禁用） enable-wifi 允许在 Wi-Fi 网络上使用 WARP（对于 Zero Trust 客户禁用） disable-ethernet 在以太网网络上自动禁用 WARP（对于 Zero Trust 客户禁用） enable-ethernet 允许在以太网网络上使用 WARP（对于 Zero Trust 客户禁用） add-trusted-ssid 添加一个受信任的 Wi-Fi 网络，WARP 将自动断开连接 remove-trusted-ssid 移除一个受信任的 Wi-Fi 网络 exclude-private-ips 从隧道中排除私有 IP 范围 enable-dns-log 启用 DNS 日志记录（与 -l 选项一起使用） disable-dns-log 禁用 DNS 日志记录 account 显示与当前注册关联的帐户 devices 显示与当前注册关联的设备列表 network 显示当前网络信息 get-virtual-networks 列出可用的虚拟网络 set-virtual-network 设置当前连接的虚拟网络（使用 get-virtual-networks 返回的 ID） set-mode 设置模式 set-families-mode 设置家庭模式 set-license 使用许可证密钥将当前注册关联到不同的帐户 set-gateway 强制应用程序使用指定的网关 ID 进行 DNS 查询 clear-gateway 清除网关 ID set-custom-endpoint 强制客户端连接到指定的 IP:PORT 端点（Zero Trust 客户必须以特权用户身份运行此命令） clear-custom-endpoint 删除自定义端点设置 add-excluded-route 添加一个被排除的 IP remove-excluded-route 移除一个被排除的 IP get-excluded-routes 获取被排除的路由列表 get-included-routes 获取包含的路由列表 get-excluded-hosts 获取被排除的主机列表 get-included-hosts 获取包含的主机列表 add-excluded-host 添加一个被排除的主机 remove-excluded-host 移除一个被排除的主机 add-fallback-domain 添加一个应使用回退解析器而不是 WARP 进行解析的域名 remove-fallback-domain 停止使用回退解析器解析域名 get-fallback-domains 获取使用回退解析器的域名列表 restore-fallback-domains 将回退解析器域名列表恢复为默认值 get-device-posture 获取当前设备姿态 override 临时覆盖需要客户端保持启用的 MDM 策略 set-proxy-port 设置 WARP 代理的监听端口（127.0.0.1:{port}） is-mode-switch-allowed 如果 Teams 用户可以更改连接模式，则输出 true；如果不可以，则输出 false reset-settings 恢复设置为默认值 get-organization 获取当前设置中的 Teams 组织名称 access-reauth 强制刷新与 Cloudflare Access 的身份验证 get-support-url 获取当前 Teams 组织的支持网址 get-pause-end 检索暂停结束时间 get-override-end 检索管理员覆盖结束时间 disable-connectivity-checks 禁用运行时连接性检查 enable-connectivity-checks 启用运行时连接性检查 dump-excluded-routes 获取分隔隧道路由转储。对于仅包含模式，显示未包含的路由 get-alternate-network 获取当前检测到的备用网络名称（如果有） get-dex-data 获取最近上传的 DEX 数据。返回每个 dex 指标的最新测试 help 打印此消息或给定子命令的帮助信息 选项： -l, --listen 监听状态变化和 DNS 日志（如果已启用） --accept-tos 接受服务条款协议 -v, --verbose... 启用详细输出。多个 \u0026#34;v\u0026#34; 增加更多详细程度 -h, --help 打印帮助信息 -V, --version 打印版本 ","date":"2023-10-04T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310004/","title":"Debain12安装cloudflare-warp"},{"content":"dempsey.dnspod.net edmund.dnspod.net\ngigi.ns.cloudflare.com lewis.ns.cloudflare.com\n","date":"2023-10-03T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310003/","title":"CloudFlare NameServer"},{"content":"Shell概述 bash vs zsh\nbash:\nbash 作为众多 linux 发行版的默认shell，和它打交道的实在太频繁了。但是它有些不足的地方：\n别名很多需要自己定制（ Debian12 就连ll都没有） 默认样式太简陋，所以我曾经一度换到 zsh zsh： zsh 很强大！拥有超多的插件，增强的命令补全，界面美化等等优点。\n但是！使用 zsh 一段时间之后，我发现也有些问题，比如：\nzsh 下使用 reboot 没找到是肿么回事？也可能是我菜，最后还得自己把命令添加到.zshrc中，就是很多系统下 bash 换到 zsh 会找不到 把环境变量放到 /etc/profile或者 /etc/profile.d 文件夹下会不识别，导致一系列问题。 这就违背了初心，所以，既然 bash 是 众多 linux 发行版的默认 shell，那么是否有 bash 的增强工具呢？\n今天的主角 bash-it 就是我们需要的东西！\n简介 Bash-it 是一个为 Bash 3.2+ 版本提供的社区命令和脚本集合。（这也是对 oh-my-zsh 的无耻模仿 😃）\n它包括自动补全、主题、别名、自定义函数，以及一些来自 Steve Losh 的代码片段，等等。\nBash-it 为您日常工作中使用、开发和维护 shell 脚本和自定义命令提供了一个可靠的框架。如果您经常使用 Bourne Again Shell（Bash），并且一直在寻找一种简单的方法来管理这些小脚本和别名，那么 Bash-it 非常适合您！ 停止污染您的 ~/bin 目录和 .bashrc 文件，fork/clone Bash-it 并开始修改吧。\n源码：https://github.com/Bash-it/bash-it 官网：https://bash-it.readthedocs.io/en/latest/\n安装 （1）克隆仓库\n官方版本\n1 git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it 我修改过后的版本（增加主题、修改了某些命令）\n1 git clone --depth=1 https://github.com/muyiacc/bash-it.git ~/.bash_it （2）安装\n1 ~/.bash_it/install.sh 这一步需要选择配置 .bashrc的策略：\n选择是的话会将 bash_it 的配置进行追加 否的话，会覆盖 .bashrc，并将 .bashrc复制一份为 .bashrc.bak 的备份 如果不是纯净的系统，环境中已经有一些软件的配置，选择 是\n安装之后，新开一个终端查看是否生效\n主题 默认主题是 bobby\n默认主题比较花哨，包含的信息容易影响注意力，所以我换成了内置的主题 bakke，看着简洁很多又不失美感\n每次安装更换主题已经厌烦了，已经习惯了默认配置，果然默认就是最好的！\n更换主题的方式在 .bashrc文件下，搜索 BASH_IT_THEME关键字，更改后面的内容就可以了，如下：\n1 export BASH_IT_THEME=\u0026#39;bakke\u0026#39; 也可以使用这个命令快速替换\n1 2 sed -i \u0026#39;s/^export BASH_IT_THEME=.*/export BASH_IT_THEME=\u0026#34;bakke\u0026#34;/g\u0026#39; ~/.bashrc source ~/.bashrc 如果你使用的是我修改过后的版本，可以使用主题 seektao，这个主题未提交到主项目（提交很麻烦~）\n1 2 sed -i \u0026#39;s/^export BASH_IT_THEME=.*/export BASH_IT_THEME=\u0026#34;seektao\u0026#34;/g\u0026#39; ~/.bashrc source ~/.bashrc 样式如下： 关于其他主题，你可以打开这个网址进行查找和预览 https://bash-it.readthedocs.io/en/latest/themes-list/#list-of-themes\n更多主题：\n1 2 sed -i \u0026#39;s/^export BASH_IT_THEME=.*/export BASH_IT_THEME=\u0026#34;nwinkler\u0026#34;/g\u0026#39; ~/.bashrc source ~/.bashrc 1 2 sed -i \u0026#39;s/^export BASH_IT_THEME=.*/export BASH_IT_THEME=\u0026#34;bakke\u0026#34;/g\u0026#39; ~/.bashrc source ~/.bashrc 1 2 sed -i \u0026#39;s/^export BASH_IT_THEME=.*/export BASH_IT_THEME=\u0026#34;bobby\u0026#34;/g\u0026#39; ~/.bashrc source ~/.bashrc 1 2 sed -i \u0026#39;s/^export BASH_IT_THEME=.*/export BASH_IT_THEME=\u0026#34;atomic\u0026#34;/g\u0026#39; ~/.bashrc source ~/.bashrc 1 2 sed -i \u0026#39;s/^export BASH_IT_THEME=.*/export BASH_IT_THEME=\u0026#34;demula\u0026#34;/g\u0026#39; ~/.bashrc source ~/.bashrc 别名 bash-it 配置了很多别名，但是需要手动启用\n别名配置文件在\n1 ~/.bash_it/aliases/available 启用别名的方式为\n1 bash-it enable alias 更多 关于更多的信息可以查看 Github或者 Bash-it官网\n","date":"2023-10-02T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310002/","title":"增强的bash命令行工具：bash-it"},{"content":"archlinux自动挂载windows的不同盘符（驱动器）\n1. 前言 1.1. 需求 双系统windows和archlinux，有时候在windows下编写的代码，在切换成archlinux后，这时需要编辑windows下的代码，但是使用之前，需要在文件管理器中输入密码，会自动挂载到 /run/media/用户名目录下，挂载的名字是windows驱动器的命名。一般来说，编辑器默认选择打开的目录就是用户家目录。由于挂载的目录不太常用，在打开目录的时候需要手动选择，不太方便。\n1.2. 解决思路 可以挂载到用户家目录下。在用户家目录创建一个以windows为名的目录，接着在windows 目录下创建驱动器的目录，将不同的驱动器挂载到相应的目录，如c盘驱动器的名字是base，d盘驱动器的名字是soft，d盘驱动器的名字是data，在windows目录下分别创建 base、soft、data三个目录。并分别挂载到它们。\n2. 解决过程 2.1. 创建目录 首先在家目录下创建挂载的目录点\n1 mkdir -p ~/windows/base \u0026amp;\u0026amp; mkdir -p ~/windows/soft \u0026amp;\u0026amp; mkdir -p ~/windows/data 挂载点分别为\n1 2 3 4 5 /home/koko/windows/base /home/koko/windows/soft /home/koko/windows/data # 以上目录分别对应着c盘，d盘，e盘 2.2. 安装ntfs-3g 为了解决挂载需要输入密码的问题，需要额外安装一个工具，名字叫做 ntfs-3g\n1 sudo pacman -S ntfs-3g 安装完成之后，编写开机自启的服务文件，放入 /etc/systemd/system/ ，文件名为 windows-mount.service\n1 2 3 4 5 6 7 8 9 10 11 12 [Unit] Description=Mount Windows Partition After=network-online.target Wants=network-online.target [Service] ExecStart=/usr/bin/mount -a Type=oneshot RemainAfterExit=yes [Install] WantedBy=default.target 保存退出后，启动并开启自启\n1 2 sudo systemctl enable windows-mount.service sudo systemctl start windows-mount.service 2.3. 编辑/etc/fstable文件 自动挂载目录可以编辑/etc/fsable文件，里面包含了挂载的信息，我的文件内容如下\n/etc/fstable\n1 2 3 4 5 6 7 8 9 10 11 12 [root@myarch ~]# cat /etc/fstab # /dev/nvme0n1p6 LABEL=myArch UUID=cea4c38b-f7eb-4690-a35b-d4b6e8506d4d / btrfs rw,relatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=256,subvol=/@ 0 0 # /dev/nvme0n1p1 UUID=5F77-1EE1 /boot/efi vfat rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro 0 2 # /dev/nvme0n1p6 LABEL=myArch UUID=cea4c38b-f7eb-4690-a35b-d4b6e8506d4d /home btrfs rw,relatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=257,subvol=/@home 0 0 # /dev/nvme0n1p5 UUID=0ca07983-0116-4006-aa45-04a2abb129e6 none swap defaults 0 0 关于/etc/fatable 文件各列的简单解释\n第一列是挂载的设备（可以填写设备label或者uuid） 第二列是挂载点。（必须是已经存在的目录） 第三列是分区的格式。（如ntfs、btrfs、ext2、ext3、nfs、vfat） 第四列是mount的挂载参数，一般情况下，直接写defaults即可。 第五列的数字表示是否被dump备份，是的话为1，不是为0。 第六列是开机时是否自检磁盘。1，2都表示检测，0表示不检测。但1，2表示不同的优先级，1更高。所以/ 分区必须设为1，而且整个fstab只允许出现一个1，若有多个分区需要检测，那么都设为2。 我们需要的就是在文件的后面继续添加挂载windows的配置\n挂载设备的label或者uuid可以通过blkid查看\n1 2 3 4 5 6 7 [root@myarch ~]# blkid /dev/nvme0n1p5: UUID=\u0026#34;0ca07983-0116-4006-aa45-04a2abb129e6\u0026#34; TYPE=\u0026#34;swap\u0026#34; PARTUUID=\u0026#34;b05fdaf2-9db0-424a-a133-b1874795e894\u0026#34; /dev/nvme0n1p3: LABEL=\u0026#34;soft\u0026#34; BLOCK_SIZE=\u0026#34;512\u0026#34; UUID=\u0026#34;64443273443247D6\u0026#34; TYPE=\u0026#34;ntfs\u0026#34; PARTLABEL=\u0026#34;Basic data partition\u0026#34; PARTUUID=\u0026#34;71911f30-8521-4624-a8e3-1cbac1090f45\u0026#34; /dev/nvme0n1p1: UUID=\u0026#34;5F77-1EE1\u0026#34; BLOCK_SIZE=\u0026#34;512\u0026#34; TYPE=\u0026#34;vfat\u0026#34; PARTLABEL=\u0026#34;EFI system partition\u0026#34; PARTUUID=\u0026#34;3589701f-9bee-4c72-b2e6-79e486eecff0\u0026#34; /dev/nvme0n1p6: LABEL=\u0026#34;myArch\u0026#34; UUID=\u0026#34;cea4c38b-f7eb-4690-a35b-d4b6e8506d4d\u0026#34; UUID_SUB=\u0026#34;06d834ba-5c70-4c39-b750-245fd8b3a4a0\u0026#34; BLOCK_SIZE=\u0026#34;4096\u0026#34; TYPE=\u0026#34;btrfs\u0026#34; PTTYPE=\u0026#34;PMBR\u0026#34; PARTUUID=\u0026#34;cd79b562-bd9c-e04e-b539-e2eedee44d44\u0026#34; /dev/nvme0n1p4: LABEL=\u0026#34;data\u0026#34; BLOCK_SIZE=\u0026#34;512\u0026#34; UUID=\u0026#34;F23E39943E395339\u0026#34; TYPE=\u0026#34;ntfs\u0026#34; PARTLABEL=\u0026#34;Basic data partition\u0026#34; PARTUUID=\u0026#34;8ee13aea-ebaa-4b0f-bf71-d30653055be3\u0026#34; /dev/nvme0n1p2: LABEL=\u0026#34;base\u0026#34; BLOCK_SIZE=\u0026#34;512\u0026#34; UUID=\u0026#34;3E2A25472A24FE11\u0026#34; TYPE=\u0026#34;ntfs\u0026#34; PARTLABEL=\u0026#34;Basic data partition\u0026#34; PARTUUID=\u0026#34;54d043d7-3703-4fb8-88d1-c288bedba407\u0026#34; 根据以上信息，追加的fstable文件内容为\n1 2 3 4 5 6 7 # windows # base UUID=3E2A25472A24FE11 /home/koko/windows/base ntfs-3g defaults,noauto,x-systemd.automount 0 0 # base UUID=64443273443247D6 /home/koko/windows/soft ntfs-3g defaults,noauto,x-systemd.automount 0 0 # base UUID=F23E39943E395339 /home/koko/windows/d ntfs-3g defaults,noauto,x-systemd.automount 0 0 至此，自动挂载不需要输入密码就完成了！\n","date":"2023-10-01T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2310001/","title":"archlinux自动挂载windows的不同盘符（驱动器）"},{"content":" https://myip4.ipip.net https://ddns.oray.com/checkip https://ip.3322.net https://4.ipw.cn ","date":"2023-09-17T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309016/","title":"获取当前公网ip的接口"},{"content":"已经安装的应用 应用名称 安装方式 简介 是否启用 官方地址 是否开源 docker-flare docker-compose 导航页 是 https://github.com/soulteary/docker-flare 是 halo docker-compose 优秀的博客系统 是 https://halo.run/ 是 nginx proxy manager docker-compose nginx的web管理工具 是 https://github.com/NginxProxyManager/nginx-proxy-manager 是 alist docker-compose 网盘聚合工具 是 https://github.com/alist-org/alist 是 cloudreve 程序安装 开源网盘 是 https://github.com/cloudreve/Cloudreve 是 MrDoc docker-compose 在线文档系统 否 https://github.com/zmister2016/MrDoc 是 Jupyter Lab 程序安装 Jupyter Lab 否 教程 http://t.csdn.cn/rocxW / YesPlayMusic docker 高颜值的第三方网易云播放器 是 https://github.com/qier222/YesPlayMusic 是 it-tools docker it人员的工具 是 https://github.com/CorentinTh/it-tools 是 TODO 应用名称 简介 官方地址 koodo-reader 一个跨平台的电子书阅读器 https://github.com/troyeguo/koodo-reader ddns-go 简单好用的DDNS https://github.com/jeessy2/ddns-go ","date":"2023-09-16T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309015/","title":"服务器安装的应用以及TODO"},{"content":"在用git拉取别人的前端项目之后\n通过命令行进入项目的根目录\nnpm install 安装依赖\n然后查看 package.json 文件\n例如：\n1 2 3 4 5 6 7 { \u0026#34;name\u0026#34;: \u0026#34;your-project-name\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;serve\u0026#34;: \u0026#34;vue-cli-service serve\u0026#34; } } 启动vue项目的命令就为 npm run serve\n也就是跟如下代码中有关\n1 2 3 \u0026#34;scripts\u0026#34;: { \u0026#34;serve\u0026#34;: \u0026#34;vue-cli-service serve\u0026#34; } ","date":"2023-09-15T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309014/","title":"对于没有使用过vue的人，如何快速运行其他人的vue项目"},{"content":" 本文编辑于 2023-09-15\n作者：muyiacc\nGithub: https://github.com/muyiacc\nCSDN: https://blog.csdn.net/muyiacc\nBlog: https://www.seektao.cc/\n使用环境：Debian11\n1. 前言 在此之前，笔者使用过 Java 编写的 halo博客，这个博客很热门，但是它内存占用很大，\n关于内存占用的情况：\n配合使用MySQL数据库占用大概800M，一个MySQL 服务内存将近300M。可怕~~~~~~~~。\n配合使用 Porstgresql 数据库占用550M内存左右，数据库占用内存大概有40M\n这里插一句，Porstgresql最近也是如日中天的发展。强~\n尽管如此，这对个人使用来说是不友好的，个人服务器资源宝贵，占用太多就不好安装其他服务了，所以需要替换。关于halo占用内存截图如下：\n![image-20230915082648713](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 08-27-06_image-20230915082648713.png)\n加上最近在学习Golang，这语言感觉确实强，占用内存极低，效率极高。\n所以在GitHub上找到了一个开源，由Golang编写的博客系统 sonic，安装启动后查看只有50M不到的内存占用，顺道学习 Golang。\n地址 https://github.com/go-sonic/sonic\n这个博客系统已经有 1.7K 的star了 ，应该还不错，今天拿来安装使用使用，接下来开始安装过程吧。\n2. 搭建sonic 截止到笔者安装时期，最新版为1.1.1。\n2.1. 下载 1 wget https://github.com/go-sonic/sonic/releases/download/v1.1.1/sonic-linux-amd64.zip 如果网络不通，请自寻解决办法~~\n2.2. 解压 因为是zip格式，所以需要用 unzip解压，笔者一般接触的都是tar.gz格式，这里解压的时候有坑\n这个坑为：unzip解压缩时会将压缩包的文件列表直接输出，不会自动创建以压缩包为名字的目录\n1 2 # 解压命令为 mkdir ~/opt/sonic/ \u0026amp;\u0026amp; unzip -d ~/opt/sonic/ sonic-linux-amd64.zip unzip语法格式:\nunzip [参数] 压缩包名\n参数：\n-d 路径 将压缩包的所有文件列表解压缩到指定路径，不会自动创建以目录\n上述的路径请根据你自己的情况修改。\n解压之后的文件列表为\n1 2 3 4 conf # 配置文件夹 resources # 资源文件夹 sonic # 程序执行入口 systemd # 提供的示例 systemd 服务文件，用于systemctl 启动程序 根据以上的目录，可以看出作者还有很有心的。\n2.3. 启动 以下启动方式可任选其一\n默认启动 如果你不想做任何修改，在解压的目录执行\n1 ./sonic -config conf/config.yaml 接着控制台会打印如下信息\n1 2 Sonic started at http://127.0.0.1:8080 Sonic admin started at http://127.0.0.1:8080/admin 默认端口为 8080，通过浏览器，访问 ip:8080 即可\n后台启动 1 nohup ./sonic -config conf/config.yaml \u0026amp; 到这一步默认就基本完成了。如果你想更加详细的了解sonic，请继续阅读\n3. sonic的详细配置（可选） 3.1. conf conf文件夹是启动的配置文件\n内含两个yaml文件，一个是 config.dev.yaml 一个是 config.yaml\n我们修改 config.yaml 即可。\n查看内容，如图所示：\n![image-20230915105457674](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 10-54-59_image-20230915105457674.png)\n默认端口为8080，我已修改为8090，上述的配置都有中文说明，可根据情况进行修改。\n3.2. resources 存放的前端ui相关的资源\n如果你会前端，可自行编辑\n3.3. sonic.db 数据库文件，sqlite3\n3.4. systemd systemd 服务脚本，可用于systemd 服务\n编写systemd 服务， 目前有问题，建议使用后台启动，以下内容只做参考\n在 systemd 目录下，有提供的sonic.service文件，我们对它稍作修改，\n1 2 3 4 5 6 7 8 9 10 11 12 13 [Unit] Description=Go-Sonic Service Documentation=https://github.com/go-sonic/sonic After=network.target nss-lookup.target [Service] User=nobody # 启动服务的用户名 ExecStart=/your_path/sonic -config /your_path/conf/config.yaml # 启动程序的路径 Restart=on-failure RestartPreventExitStatus=23 [Install] WantedBy=multi-user.target% 笔者的配置\n1 2 3 4 5 6 7 8 9 10 11 12 13 [Unit] Description=Go-Sonic Service Documentation=https://github.com/go-sonic/sonic After=network.target nss-lookup.target [Service] User=ecs-user ExecStart=/home/ecs-user/opt/sonic/sonic -config /home/ecs-user/opt/sonic/conf/config.yaml Restart=on-failure RestartPreventExitStatus=23 [Install] WantedBy=multi-user.target 接着复制到 /usr/lib/systemd/system 路径下\n1 sudo cp sonic.service /usr/lib/systemd/system 启动服务\n1 2 3 4 5 6 7 8 9 # systemctl服务 # 查看状态 systemctl status sonic # 启动服务 sudo systemctl start sonic # 停止服务 sudo systemctl stop sonic # 开机自启 sudo systemctl enable sonic 4. 使用截图 4.1. 主页 ![image-20230915110159610](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 11-02-01_image-20230915110159610.png)\n4.2. 后台 仪表盘 ![image-20230915110318849](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 11-03-20_image-20230915110318849.png)\n文章 ![image-20230915110402695](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 11-04-04_image-20230915110402695.png)\n5. 结语 写到这里，才发现和 halo后台如此相似，去看官网的 issues ，应该是从halo后台移植的，但是占据了Golang的优势，占用内存和使用效率却大大提高了，不得不说，Golang，确实强~~\n分享到此结束。\n","date":"2023-09-14T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309013/","title":"基于Golang编写的开源博客系统sonic，内存占用极低！！替代halo"},{"content":"本次介绍 github上面一个激活 Windows和Office（支持Office365） 的脚本，拥有 stat 41.1k\n支持 Windows 8.1/10/11\n地址 https://github.com/massgravel/Microsoft-Activation-Scripts\n有两种方法激活\n方法一 （推荐） 打开 powershell (win+x再按a)， 执行以下命令\n新命令\n1 irm https://get.activated.win | iex 旧命令\n1 irm https://massgrave.dev/get | iex 激活Office365 Office365需要先去下载，离线版下载地址：\n123：https://www.123pan.com/s/4MOKVv-NnPpd.html提取码:pole 下载安装完成之后在 Powshell 运行\n新命令\n1 irm https://get.activated.win | iex 旧命令\n1 irm https://massgrave.dev/get | iex 按照提示激活\n打开Office365的软件验证，比如Word，打开Word，选择账户，可以看到订阅的产品。\n方法二 下载 激活脚本 ， 并解压\n解压后找到 All-In-One-Version 文件夹\n执行 MAS_AIO.cmd\n","date":"2023-09-13T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309012/","title":"一条命令激活Windows和Office"},{"content":"Windows命令行下对文件做MD5校验\n按【win】+R键来打开运行cmd命令行窗口\n进入cmd命令行界面，使用如下命令做MD5校验：\n1 CertUtil -hashfile C:\\xxx.tar MD5 此命令还可以支持其他的哈希算法，具体如下：\n1 CertUtil -hashfile 文件路径 算法 支持的算法有：MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512\n","date":"2023-09-12T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309011/","title":"Windows命令行下对文件做MD5校验"},{"content":"1. 需求 现在MySQL5.7和8.0版本用的人和需求都有，为了能让电脑上同时安装MySQL5.7 和MySQL8.0版本，也就有了这篇文章，更准确的叫法可以说是笔记，以便日后回顾。\n本次通过下载zip安装包进行安装\n2. 准备 2.1 下载 MySQL可选择版本的下载地址：https://downloads.mysql.com/archives/community/\nPS： 也可通过以下链接直接下载zip安装包\nMySQL5.7 https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.41-winx64.zip\nMySQL8.0 https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.33-winx64.zip\n2.2 卸载（非必须） 安装之前请确保环境的干净，如果需要卸载请网上搜索教程\n3. MySQL5.7 安装（优先看） 3.1 解压安装包 解压下载好的安装包，建议不要使用中文路径\n3.2 新建 my.ini 文件 在解压的目录新建 my.ini 文件，这是MySQL的配置文件，通过zip安装需要手动指定数据存储的路径\nmy.ini 的配置内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [client] port = 3306 [mysqld] #设置3306端口 port = 3306 # 设置mysql的安装目录 tips:这里的目录是你自己的安装目录，这个是我的安装目录 basedir=D:\\\\Development\\\\DB\\\\mysql-5.7.41-winx64 # 设置mysql数据库的数据的存放目录 tips:同上一条 datadir=D:\\\\Development\\\\DB\\\\mysql-5.7.41-winx64\\\\data # 允许最大连接数 max_connections=200 # 服务端使用的字符集默认为8比特编码的latin1字符集 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB #这个需要注意一下，不然报错 #其原因是从 5.6开始，timestamp 的默认行为已经是 deprecated 了。 explicit_defaults_for_timestamp=true [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8mb4 3.3 初始化MySQL 首次使用，初始化MySQL\n如果你使用的文件管理器的方式打开的安装目录，可通过shift+右键 选择 在此处打开 Powershell 窗口，切换到命令行操作\n![图片.png](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 09-31-38_1689838258352-23245c62-73e5-4f38-a3a3-d9db635fc77e.png)\n假使现在你已经切换到了powershell，先切换到bin目录，再执行以下命令进行初始化\n注意：一定要切换到bin目录\n1 .\\mysqld.exe --initialize --user=mysql --console 你会得到类似的结果，如图请记住初始化密码，后续登录MySQL会用到，你可以新建一个记事本复制粘贴过去\n3.4 安装MySQL服务 通过以下命令安装MySQL服务，这个命令需要管理员权限\n你可以通过win+x 选择用管理员权限打开powershell，再切换到MySQL目录\n在原来的powershell窗口下，输入 pwd ，控制台就会输出 当前所在的路径\n如图所示：\n![图片.png](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 09-31-38_1689838967633-e9401e62-75c0-42d0-99cc-467287300878.png)\n然后在管理员权限下的powershell切换过去，使用 cd 路径\n例如：cd D:\\Development\\DB\\mysql-5.7.41-winx64\\bin\n如图：\n![图片.png](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 09-31-38_1689839057201-6a7a0027-d378-4b55-9925-63f9ba2c1529.png)\n接着执行以下命令\n1 .\\mysqld.exe --install MySQL57 --defaults-file=\u0026#34;D:\\\\Development\\\\DB\\\\mysql-5.7.41-winx64\\\\my.ini\u0026#34; 执行成功，你会得到类似的结果：\n解释说明：\n.\\mysqld.exe mysqld命令\n\u0026ndash;install MySQL57 安装服务，服务名可以自定义，为了区别MySQL8.0 ，所以采用MySQL57 见名知意\n\u0026ndash;defaults-file=\u0026ldquo;D:\\Development\\DB\\mysql-5.7.41-winx64\\my.ini\u0026rdquo; 指定MySQL服务所使用的配置文件\n注意：你需要修改为你自己的路径，除非和我一样。\n3.5 修改密码 在保证前面步骤没有出错的情况下，启动MySQL服务，登录MySQL，修改密码，然后就大功告成\n1） 启动MySQL服务（需要管理员权限）\n1 net start MYSQL57 2）登录MySQL\n1 2 3 .\\mysql.exe -u root -p 回车输入密码，密码是前面生成的随机密码，已经提醒过保存下来 3）修改密码\n1 2 3 4 set password=\u0026#39;新密码\u0026#39; 如 set password=\u0026#39;root\u0026#39; 3.6 配置环境变量（非必须） 1）复制安装路径，windows+R 打开运行，输入 sysdm.cpl 回车，选择 高级\n![image.png](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 09-31-38_1611160475021-7136cdf9-9675-4d92-a7aa-c2d0712c9701.png)\n打开 环境变量 ，在系统环境变量中新建：\n选中 系统变量-Path，点击 编辑，再点击 新建，输入：**%MYSQL_HOME%\\bin **，再点击 **确定 **保存（注意返回上一级也要保存，否则可能保存不成功）\n至此结束。。\n使用管理员权限打开 cmd 命令行运行工具，进行 初始化： 1 mysqld --initialize --console ![image.png](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 09-31-38_1611197580728-72cc64e5-ccea-4aa7-b279-2660487c42d8.png)\n记住初始化密码，稍后重置密码会用到\n安装服务 20201018 更\n注：安装服务 此部分为后期更新，与前后文的路径可能不同，请根据实际路径进行更改\n命令为：\nmysqld命令所在的位置 install 服务名 \u0026ndash;defaults-file=my.ini所在的位置\n例如：\nD:\\Development_Tools\\mysql-5.7.40-winx64\\bin\\mysqld install MySQL57 \u0026ndash;defaults-file=\u0026ldquo;D:\\Development_Tools\\mysql-5.7.40-winx64\\my.ini\u0026rdquo;\n1 D:\\Development_Tools\\mysql-5.7.40-winx64\\bin\\mysqld install MySQL57 --defaults-file=\u0026#34;D:\\Development_Tools\\mysql-5.7.40-winx64\\my.ini\u0026#34; 启动mysql: 1 net start mysql57 登录mysql，修改密码: 1 2 3 #登录本机的 MySQL 数据库，只需要输入以下命令即可： mysql -u root -p #注意：在输入密码密码时，手动输入 或者 鼠标右键粘贴 ![image.png](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 09-31-38_1611199716700-88c13baf-f1f5-4417-8b5c-30c9e2240aaf.png)\n5)修改密码：\n1 2 3 4 5 6 #使用下述命令可以为’root’@’localhost‘修改连接MySQL服务的密码: ALTER USER \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;新密码\u0026#39;; #退出mysql： quit； #关闭服务： net stop mysql57 4. MySQL8.0 安装（类同MySQL5.7） 因为安装步骤类似MySQL5.7 ，所有有些部分不再解释说明\n4.1 解压安装包 解压下载好的安装包，建议不要使用中文路径\n4.2 新建 my.ini 文件 在解压的目录新建 my.ini 文件，这是MySQL的配置文件，通过zip安装需要手动指定数据存储的路径\nmy.ini 的配置内容：\n注意：端口号和路径不一样\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [client] port = 3307 [mysqld] #设置3306端口 port = 3307 # 设置mysql的安装目录 tips:这里的目录是你自己的安装目录，这个是我的安装目录，你不能用的哦 basedir=D:\\\\Development\\\\DB\\\\mysql-8.0.33-winx64 # 设置mysql数据库的数据的存放目录 tips:同上一条 datadir=D:\\\\Development\\\\DB\\\\mysql-8.0.33-winx64\\\\data # 允许最大连接数 max_connections=200 # 服务端使用的字符集默认为8比特编码的latin1字符集 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB #这个需要注意一下，不然报错 #其原因是从 5.6开始，timestamp 的默认行为已经是 deprecated 了。 explicit_defaults_for_timestamp=true [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8mb4 4.3 初始化MySQL 首次使用，初始化MySQL\n如果你使用的文件管理器的方式打开的安装目录，可通过shift+右键 选择 在此处打开 Powershell 窗口，切换到命令行操作\n假使现在你已经切换到了powershell，先切换到bin目录，再执行以下命令进行初始化\n注意：一定要切换到bin目录\n1 .\\mysqld.exe --initialize --user=mysql --console 请记住初始化密码，后续登录MySQL会用到，你可以新建一个记事本复制粘贴过去\n4.4 安装MySQL服务 管理员打开powershell，进入安装路径的bin目录，执行\n1 .\\mysqld.exe --install MySQL80 --defaults-file=\u0026#34;D:\\\\Development\\\\DB\\\\mysql-8.0.33-winx64\\\\my.ini\u0026#34; 4.5 修改密码 在保证前面步骤没有出错的情况下，启动MySQL服务，登录MySQL，修改密码，然后就大功告成\n1） 启动MySQL服务（需要管理员权限）\n1 net start MYSQL80 2）登录MySQL\n1 2 3 .\\mysql.exe -u root -p 回车输入密码，密码是前面生成的随机密码，已经提醒过保存下来 3）修改密码\n1 2 3 4 set password=\u0026#39;新密码\u0026#39; 如 set password=\u0026#39;root\u0026#39; 4.6 配置环境变量（非必须） 1）复制安装路径，windows+R 打开运行，输入 sysdm.cpl 回车，选择 高级\n打开 环境变量 ，在系统环境变量中，选择 PATH ，新建\n把MySQL8.0 的安装路径带bin目录输入进去即可\n如图：\n![图片.png](https://gitee.com/muyiacc/typora-img/raw/master/2023/2023-09-15 09-31-38_1689840952462-ea695e16-e76c-4566-a552-7b49b04e58e2.png)\n完结撒花。。。。。\n","date":"2023-09-11T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309010/","title":"Windows10安装多版本MySQL"},{"content":"概述 V2rayA是一个跨平台的 V2Ray 客户端，关于v2ray的内容不再过多介绍，下面介绍安装过程。\n官网：https://v2raya.org/\n安装 Debian/Ubuntu 方法一：通过软件源安装 添加公钥\n1 wget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/keyrings/v2raya.asc 添加 V2RayA 软件源\n1 2 echo \u0026#34;deb [signed-by=/etc/apt/keyrings/v2raya.asc] https://apt.v2raya.org/ v2raya main\u0026#34; | sudo tee /etc/apt/sources.list.d/v2raya.list sudo apt update 安装 V2RayA\n1 sudo apt install v2raya v2ray ## 也可以使用 xray 包 安装完成之后请看 启动v2raya\n方法二：手动安装 deb 包 下载地址：\nv2raya: https://github.com/v2rayA/v2raya-apt/tree/master/pool/main/v/v2ray\nv2ray: https://github.com/v2rayA/v2raya-apt/tree/master/pool/main/v/v2raya\n使用国内网盘： 123: https://www.123pan.com/s/4MOKVv-52Ppd.html提取码:7F4p\n下载之后可以使用 Gdebi、QApt 等图形化工具来安装，也可以使用命令行：\n1 sudo apt install ****.deb ### 自行替换 deb 包所在的实际路径 安装完成之后请看 启动v2raya\n启动v2raya 从 1.5 版开始将不再默认为用户启动 v2rayA 及设置开机自动。\n启动 v2rayA\n1 sudo systemctl start v2raya.service v2ray.service 设置开机自动启动\n1 sudo systemctl enable v2raya.service v2ray.service web访问\n1 localhost:2017 Docker 提示\n此部分取自官网，未曾用这种方式安装使用过\nDocker 镜像内集成了 V2Ray 内核，因此内核无需额外被安装。\ndocker 1）拉取镜像\n1 docker pull mzz2017/v2raya 2）启动容器\n1 2 3 4 5 6 7 8 9 10 11 # run v2raya docker run -d \\ --restart=always \\ --privileged \\ --network=host \\ --name v2raya \\ -e V2RAYA_LOG_FILE=/tmp/v2raya.log \\ -v /lib/modules:/lib/modules:ro \\ -v /etc/resolv.conf:/etc/resolv.conf \\ -v /etc/v2raya:/etc/v2raya \\ mzz2017/v2raya 如果你使用 MacOSX 或其他不支持 host 模式的环境，在该情况下无法使用全局透明代理，或者你不希望使用全局透明代理，docker 命令会略有不同：\n1 2 3 4 5 6 7 8 9 # run v2raya docker run -d \\ -p 2017:2017 \\ -p 20170-20172:20170-20172 \\ --restart=always \\ --name v2raya \\ -e V2RAYA_LOG_FILE=/tmp/v2raya.log \\ -v /etc/v2raya:/etc/v2raya \\ mzz2017/v2raya docker-compose 1）新建目录\n1 2 mkdir -p ~/opt/v2raya cd ~/opt/v2raya 2）在新建的目录下继续新建 docker-compose.yml文件，粘贴以下内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 version: \u0026#39;3.9\u0026#39; services: v2raya: image: mzz2017/v2raya volumes: - \u0026#39;/etc/v2raya:/etc/v2raya\u0026#39; - \u0026#39;/etc/resolv.conf:/etc/resolv.conf\u0026#39; - \u0026#39;/lib/modules:/lib/modules:ro\u0026#39; environment: - V2RAYA_LOG_FILE=/tmp/v2raya.log container_name: v2raya networks: host: {} privileged: true restart: always networks: host: {} 保存退出 :wq\n启动 容器（在docker-compose.yml所在的目录运行）\n1 2 3 4 sudo docker compose up # 后台启动 sudo docker compose up -d 停止容器\n1 sudo docker up v2raya 查看 容器\n1 sudo docker stats -a web访问\nlocalhost:2017\nWindows 目前在 Windows 上仅支持一键配置系统代理而非透明代理\n通过 WinGet 自动安装 WinGet 是微软推出的软件包管理器，适用于 Windows 10 以及更新版本的操作系统。\n1 winget install --id v2rayA.v2rayA 手动运行安装包 从 GitHub Releases 下载适用于 Windows 的安装包，例如\ninstaller_windows_inno_x64_2.0.1.exe，按照指示安装完毕即可。\n使用方式 通过安装包安装 v2rayA 后，v2rayA 将以服务的形式运行，默认情况下将开机自启，你也可以在任务管理器中的“服务”选项卡管理 v2rayA 的启动与停止。\n通过运行桌面快捷方式或直接访问 http://127.0.0.1:2017 打开管理页面。\n免费节点 警告\n订阅节点仅作学习交流使用，用于查找资料，学习知识，不做任何违法行为。所有资源均来自互联网，仅供大家交流学习使用，出现违法问题概不负责。\n订阅地址\n1 https://mirror.ghproxy.com/https://raw.githubusercontent.com/Barabama/FreeNodes/master/nodes/yudou66.txt 1 https://mirror.ghproxy.com/https://raw.githubusercontent.com/Barabama/FreeNodes/master/nodes/blues.txt 1 https://mirror.ghproxy.com/https://raw.githubusercontent.com/Barabama/FreeNodes/master/nodes/zyfxs.txt 合集\n1 https://mirror.ghproxy.com/https://raw.githubusercontent.com/Barabama/FreeNodes/master/nodes/merged.txt ","date":"2023-09-10T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309009/","title":"web端的v2ray工具v2raya"},{"content":"网络上收集的一些tracker列表\nGitHub开源仓库：\nhttps://github.com/ngosang/trackerslist\n站点\nhttps://trackerslist.com/#/zh\nhttps://cf.trackerslist.com\n中国可用的 BT Tracker 服务器列表，每24小时自动更新\nhttps://www.yaozuopan.top/index.php/archives/1014/\ntracker 列表\nhttps://trackerslist.com/all.txt\nhttps://gitee.com/harvey520/www.yaozuopan.top/raw/master/blacklist.txt\nhttps://cf.trackerslist.com/best.txt\n","date":"2023-09-09T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309008/","title":"tracker列表"},{"content":"1. Shell概述 作为一个开发人员，使用Linux实在是太频繁了，无论是观看别人程序的脚本，还是自己编写脚本，都离不开Shell，所以这篇文章总结一下Shell中常见的语法\n2. 解释器 Linux中，解析脚本的是命令解释器，也就是终端解释器，如 Bash、Zsh。\n在脚本中常见的头部声明如 #! /bin/bash 或者 #! /bin/zsh，前者如CentOS , 后者如 Debian（得比安）。\n3. 入门 3.1. 脚本的格式 以 #! 解释器 开头，如 #! /bin/bash 或者 #! /bin/zsh\n一般来说默认解释器是 bash， 笔者自己所运行的解释器是 zsh，大多数情况下兼容 bash\n临时进入 bash 解释器的方法为 exec /bin/bash\n如需查看自己的解释器，请在终端执行echo #SHELL，\n按照习惯，bash对应的脚本文件的后缀一般是 .sh 结尾，而 zsh对应的脚本文件以 .zsh 结尾，当然，这不是必须的。\n以下为一个简单的示：\n在家目录新建目录 bin, 继续在 bin目录新建一个文件 test1.sh\nvim test1.sh\n1 2 3 #! /bin/sh echo \u0026#34;我的解释器为 $SHELL\u0026#34; 3.2 脚本执行 在新建 test1.sh 之后，如何执行呢？\n方式1 语法 解释器 + 脚本的路径\n路径可使用相对路径也可以使用绝对路径\n例如，在 ~/bin/ 下执行\n1 2 3 4 # 相对路径 sh test1.sh # 绝对路径 sh ~/bin/test1.sh 执行结果\n1 我的解释器为 /bin/zsh 方式2 增加 可执行权限\n1 chmod +x test1.sh 在文件所在的目录下，执行\n1 ./test1.sh 执行结果\n1 我的解释器为 /bin/zsh ","date":"2023-09-08T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309006/","title":"Shell的基本语法-1-概述-解释器-入门"},{"content":"1. 变量 Shell也可以设置变量，如系统默认的变量 SHELL（当前用户的解释器）、USER（当前用户）、HOME（当前用户的加目录）等\n查看这些变量的值只需要 echo $变量名即可\n例如：\n1 2 3 4 5 echo $SHELL echo $USER echo $HOME 上述输出结果根据笔者所在的环境分别为\n1 2 3 4 5 /bin/zsh ecs-user /home/ecs-user 下面开始更加详细的说明\n1.1. 系统变量 系统变量，顾名思义，就是系统自带的变量\n除了已经介绍过的SHELL、USER、HOME等外，还有如\n1 2 3 4 5 6 7 8 9 10 11 PATH：环境变量，包含了可执行文件的搜索路径。 BASH_VERSION：Bash shell的版本信息。 PWD：当前工作目录的绝对路径。 LANG：系统的语言和字符集设置。 TERM：终端类型。 LOGNAME：当前登录的用户名。 HISTSIZE：命令历史记录的数量。 LINES：终端的行数。 USER：非root用户的用户名。 UID：用户ID（root用户为0）。 GID：组ID（root用户为0）。 额外的：\n使用env命令查看当前系统定义的所有环境变量 使用set命令显示所有本地定义的Shell变量 1.2. 自定义变量 除了系统自带的系统变量以外，用户还可以自定义属于自己的变量\n1） 基本语法\n定义变量 变量名=变量值 等号两边不能有空格 撤销变量 unset 变量名 静态变量 readonly 变量名 静态变量不可撤销 全局变量 export 变量名 2）变量命名规则\n变量名必须以字母（a-z、A-Z）或下划线（_）开头 变量名区分大小写，环境变量命名建议大写 变量名不能是bash的内置命令或关键字 变量名长度不能超过99个字符 变量名不能包含空格或其他特殊字符 3）变量使用技巧\n变量默认类型都是字符串类型，无法直接进行数值运算 变量的值如果有空格，需要使用双引号或单引号括起来 1.3. 特殊变量 1.3.1 $n 数字从 0-n，\n$0 表示的是当前命令行的第一个参数，注意是命令行的第一个参数，而非指代脚本本身，\n","date":"2023-09-08T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309007/","title":"Shell的基本语法-2-变量-运算符-条件判断"},{"content":"pandora-潘多拉魔盒，一个提供免翻的方式访问openai提供的gpt\n官方地址：https://github.com/pengzhile/pandora\n本次介绍如何如何使用docker的方式部署pandora\n1 2 3 4 # 拉取镜像 docker pull pengzhile/pandora # 创建容器 docker run -e PANDORA_CLOUD=cloud -e PANDORA_SERVER=0.0.0.0:8811 -p 8811:8811 -d --name pandora pengzhile/pandora 上面的端口可自定替换\n部署成功之后，请开放服务器上的安全组\n接着就可以通过 ip:port 的方式访问\n总结：这个项目我觉得最大的用处就是不用通过技术手段访问openai\n最后：附上我已经搭建好的地址：https://gpt.seektao.cc\nps: 访问需要自己的open账号\n","date":"2023-09-07T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309005/","title":"pandora-免翻访问gpt"},{"content":"HOME：用户的主目录，通常是/home/用户名。 USER：当前登录的用户名。 PATH：环境变量，包含了可执行文件的搜索路径。 BASH_VERSION：Bash shell的版本信息。 PWD：当前工作目录的绝对路径。 SHELL：当前使用的shell类型（如bash、zsh等）。 LANG：系统的语言和字符集设置。 TERM：终端类型。 LOGNAME：当前登录的用户名。 MAIL：用户的邮件地址。 HISTSIZE：命令历史记录的数量。 EDITOR：默认的文本编辑器。 PS1：命令提示符的格式。 LD_LIBRARY_PATH：动态链接库的搜索路径。 LD_PRELOAD：动态链接库的预加载设置。 HOSTNAME：主机名。 IP_ADDRESS：本地IP地址。 IPV6_ADDRESS：IPv6地址。 IFS：内部字段分隔符。 COLUMNS：终端的列数。 LINES：终端的行数。 USER：非root用户的用户名。 UID：用户ID（root用户为0）。 GID：组ID（root用户为0）。 OPIE：是否启用OpenPGP加密支持。 RUNLEVEL：运行级别。 PS1、PS2、PS3：自定义命令提示符的前缀、后缀和中间部分。 EDITOR、VISUAL：自定义文本编辑器和可视化编辑器。 MANPATH：手册页的搜索路径。 MYTMPDIR：临时文件目录。 TMPDIR：临时目录。 TMUX_PANE：当前活动的tmux面板。 TMUX_WINDOW：当前活动的tmux窗口。 TMUX_STATUS：当前活动的tmux状态。 TMUX_PID：当前活动的tmux进程ID。 TMUX_SERVER：当前活动的tmux服务器。 TMUX_PORT：当前活动的tmux端口。 TMUX_LISTEN_ADDRESS：当前活动的tmux监听地址。 TMUX_UNIX_SOCKET：当前活动的tmux Unix套接字。 TMUX_WINDOWS_SOCKET：当前活动的tmux Windows套接字。 TMUX_PID：当前活动的tmux进程ID。 TMUX_SERVER：当前活动的tmux服务器。 TMUX_PORT：当前活动的tmux端口。 TMUX_LISTEN_ADDRESS：当前活动的tmux监听地址。 TMUX_UNIX_SOCKET：当前活动的tmux Unix套接字。 TMUX_WINDOWS_SOCKET：当前活动的tmux Windows套接字。 TMUX_VERSION：当前活动的tmux版本。 TMUX_CONFIG_FILE：当前活动的tmux配置文件路径。 TMUX_DEFAULT_COMMAND：当前活动的tmux默认命令。 TMUX_CURRENT_COMMAND：当前活动的tmux当前命令。 ","date":"2023-09-05T14:07:10+08:00","permalink":"https://blog.seektao.cc/p/2309003/","title":"Linux系统的系统变量合集"},{"content":"1. 概述 unzip为linux上 解压 zip的命令\n小提示：使用unzip解压时，先提前创建好解压的路径，再通过 -d 解压路径 指定\n2. 用法 语法格式： 1 unzip [参数] 压缩包名 常用参数 参数 说明 -d 路径 将压缩包的所有文件列表解压缩到指定路径，不会自动创建以目录 -v 显示执行过程的详细信息 -l 显示压缩包内的文件列表 -t 测试压缩包是否损坏 一定注意：unzip和tar不同的是，unzip解压缩时会将压缩包的文件列表直接输出，不会自动创建以压缩包为名字的目录，这也就会导致如果你指定的目录非空的话，会将压缩包的所有文件列表输出到指定的目录\n例如：\nunzip -d ~/opt/ test.zip\n这条命令会将 test.zip 的文件列表输出到 ~/opt/ 目录下，导致文件和其他目录混合。\n3. 示例 1）解压到指定的目录（提前创建好文件目录）\n1 mkdir ~/opt/sonic/ \u0026amp;\u0026amp; unzip -d ~/opt/sonic/ sonic-linux-amd64.zip 解压时会显示执行过程。\n","date":"2023-09-04T14:07:09+08:00","permalink":"https://blog.seektao.cc/p/2309002/","title":"Linux下的解压命令unzip使用指南"},{"content":"debian物理机安装提示缺少网卡固件，ath10k/cal-pci-0000:01:00.0.bin，ath10k/pre-cal-pci-0000:01:00.0.bin解决办法\n使用离线dvd镜像安装，先跳过安装固件这个步骤。\n正常安装完系统后，再使用wifi联网，因为缺乏这个固件的问题，会导致wifi连接后，过一会就上不了网，所以在连上wifi后，及时安装固件\n在终端执行\n1 sudo apt install firmware-atheros 重启系统。\n","date":"2023-09-03T14:12:15+08:00","permalink":"https://blog.seektao.cc/p/2309001/","title":"debian物理机安装提示缺少网卡固件解决办法"}]