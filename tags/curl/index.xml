<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Curl on 寻道之旅博客</title>
        <link>https://hublog.netlify.app/tags/curl/</link>
        <description>Recent content in Curl on 寻道之旅博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>寻道之旅博客</copyright>
        <lastBuildDate>Mon, 19 Aug 2024 11:08:08 +0800</lastBuildDate><atom:link href="https://hublog.netlify.app/tags/curl/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>curl，命令行或脚本中与URL进行交互的工具</title>
        <link>https://hublog.netlify.app/p/240819110878/</link>
        <pubDate>Mon, 19 Aug 2024 11:08:08 +0800</pubDate>
        
        <guid>https://hublog.netlify.app/p/240819110878/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;curl&lt;/code&gt; 是一个用于从命令行或脚本中与 URL 进行交互的工具。它支持多种协议，包括 HTTP、HTTPS、FTP、SFTP 等，广泛用于数据传输和网络请求。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装
&lt;/h2&gt;&lt;p&gt;在大多数 Linux 发行版中，&lt;code&gt;curl&lt;/code&gt; 通常预装。你可以通过以下命令检查是否已安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果未安装，可以使用包管理器进行安装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Debian/Ubuntu&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install curl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CentOS/RHEL&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum install curl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install curl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本用法&#34;&gt;基本用法
&lt;/h2&gt;&lt;p&gt;最简单的用法是直接跟上 URL，&lt;code&gt;curl&lt;/code&gt; 会默认使用 GET 方法请求该 URL，并将其响应内容（通常是 HTML 或 JSON）打印到标准输出（你的终端屏幕上）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 请求一个网页并显示其 HTML 内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl https://www.example.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;常见参数按功能分类&#34;&gt;常见参数（按功能分类）
&lt;/h2&gt;&lt;h3 id=&#34;输出控制-output-control&#34;&gt;输出控制 (Output Control)
&lt;/h3&gt;&lt;p&gt;默认情况下，&lt;code&gt;curl&lt;/code&gt; 将所有内容输出到屏幕。以下参数可以控制输出行为。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-o, --output &amp;lt;file&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：将输出保存到指定的文件，而不是屏幕。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -o page.html https://www.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-O, --remote-name&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：将输出保存到文件，并以 URL 中指定的文件名来命名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -O https://curl.se/download/curl-7.85.0.tar.gz&lt;/code&gt; (会保存为 &lt;code&gt;curl-7.85.0.tar.gz&lt;/code&gt; 文件)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s, --silent&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：静默模式。不显示进度表或错误信息。非常适合在脚本中使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;cron_job_result=$(curl -s https://api.example.com/status)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i, --include&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：在输出中包含 HTTP 响应头（Response Headers）。这对于调试非常有用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -i https://www.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v, --verbose&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：显示详细的通信过程，包括请求头、响应头和连接信息。是终极调试利器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -v https://api.example.com/data&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http-请求方法-http-method&#34;&gt;HTTP 请求方法 (HTTP Method)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-X, --request &amp;lt;METHOD&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：指定要使用的 HTTP 请求方法，如 &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt; 等。默认是 &lt;code&gt;GET&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl -X POST https://api.example.com/users&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -X DELETE https://api.example.com/users/123&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;发送数据-sending-data&#34;&gt;发送数据 (Sending Data)
&lt;/h3&gt;&lt;p&gt;常用于 &lt;code&gt;POST&lt;/code&gt; 或 &lt;code&gt;PUT&lt;/code&gt; 请求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d, --data &amp;lt;data&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：发送 HTTP POST 请求的数据。&lt;code&gt;Content-Type&lt;/code&gt; 默认为 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例 (发送表单数据)&lt;/strong&gt;：&lt;code&gt;curl -X POST -d &amp;quot;name=John&amp;amp;age=30&amp;quot; https://api.example.com/register&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例 (发送 JSON 数据)&lt;/strong&gt;：需要配合 &lt;code&gt;-H&lt;/code&gt; 指定 &lt;code&gt;Content-Type&lt;/code&gt;。 &lt;code&gt;curl -X POST -d &#39;{&amp;quot;name&amp;quot;:&amp;quot;John&amp;quot;, &amp;quot;age&amp;quot;:30}&#39; -H &amp;quot;Content-Type: application/json&amp;quot; https://api.example.com/users&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从文件读取数据&lt;/strong&gt;：&lt;code&gt;curl -d @data.json -H &amp;quot;Content-Type: application/json&amp;quot; https://api.example.com/users&lt;/code&gt; (注意 &lt;code&gt;@&lt;/code&gt; 符号)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F, --form &amp;lt;name=content&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：发送 &lt;code&gt;multipart/form-data&lt;/code&gt; 类型的数据，常用于文件上传。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例 (上传文件)&lt;/strong&gt;：&lt;code&gt;curl -X POST -F &amp;quot;file=@/path/to/your/image.jpg&amp;quot; -F &amp;quot;username=dave&amp;quot; https://api.example.com/upload&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;自定义请求头-custom-headers&#34;&gt;自定义请求头 (Custom Headers)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-H, --header &amp;lt;header&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：添加自定义的 HTTP 请求头。可以多次使用以添加多个头。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设置内容类型&lt;/strong&gt;：&lt;code&gt;curl -H &amp;quot;Content-Type: application/json&amp;quot; ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置认证 Token&lt;/strong&gt;：&lt;code&gt;curl -H &amp;quot;Authorization: Bearer your_jwt_token&amp;quot; https://api.example.com/secure-data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模拟浏览器&lt;/strong&gt;：&lt;code&gt;curl -H &amp;quot;User-Agent: Mozilla/5.0&amp;quot; https://www.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安全与认证-security--authentication&#34;&gt;安全与认证 (Security &amp;amp; Authentication)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u, --user &amp;lt;user:password&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：设置 HTTP Basic Authentication 的用户名和密码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -u admin:123456 https://api.example.com/admin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k, --insecure&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：允许 &lt;code&gt;curl&lt;/code&gt; 连接到没有有效 SSL/TLS 证书的 HTTPS 站点（例如，使用自签名证书的开发环境）。&lt;strong&gt;警告：请勿在生产环境中使用此选项！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -k https://localhost:8443&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L, --location&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：自动跟踪 HTTP 重定向（响应状态码为 3xx）。很多网站会使用重定向，所以这是一个非常实用的参数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -L http://google.com&lt;/code&gt; (http 会重定向到 https)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;连接控制-connection-control&#34;&gt;连接控制 (Connection Control)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--connect-timeout &amp;lt;seconds&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：设置建立连接的最大等待时间（秒）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl --connect-timeout 5 https://api.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m, --max-time &amp;lt;seconds&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：设置整个操作（连接、数据传输等）允许花费的最长时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -m 10 https://api.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x, --proxy &amp;lt;[protocol://]host[:port]&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：通过指定的代理服务器发送请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;curl -x http://proxyserver:8080 https://www.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数速查表&#34;&gt;&lt;em&gt;常用参数速查表&lt;/em&gt;
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;短参数&lt;/th&gt;
&lt;th&gt;长参数&lt;/th&gt;
&lt;th&gt;功能说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--request&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定 HTTP 请求方法 (GET, POST, PUT, DELETE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--header&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添加自定义请求头 (例如 &lt;code&gt;Content-Type&lt;/code&gt;, &lt;code&gt;Authorization&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--data&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 格式的数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-F&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送 &lt;code&gt;multipart/form-data&lt;/code&gt; 数据，常用于文件上传&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--include&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在输出中包含响应头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示详细的通信过程，用于调试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--output&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将输出保存到指定文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--remote-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以远程文件名保存输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--silent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;静默模式，不显示进度和错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自动跟随 HTTP 重定向&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--user&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置 HTTP 基本认证的用户名和密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-k&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--insecure&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;忽略 SSL 证书验证 (&lt;strong&gt;慎用！&lt;/strong&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        
    </channel>
</rss>
