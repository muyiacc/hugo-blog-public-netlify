<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Rsync on 寻道之旅</title>
        <link>https://hublog.netlify.app/tags/rsync/</link>
        <description>Recent content in Rsync on 寻道之旅</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>寻道之旅</copyright>
        <lastBuildDate>Sat, 10 May 2025 11:01:45 +0800</lastBuildDate><atom:link href="https://hublog.netlify.app/tags/rsync/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>rsync，快速且极其通用的文件复制工具</title>
        <link>https://hublog.netlify.app/p/250510110145/</link>
        <pubDate>Sat, 10 May 2025 11:01:45 +0800</pubDate>
        
        <guid>https://hublog.netlify.app/p/250510110145/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介
&lt;/h2&gt;&lt;p&gt;rsync (remote sync) 是一个快速且极其通用的文件复制工具。它可以在本地计算机之间、本地计算机和远程计算机之间以及远程计算机之间同步文件和目录。 rsync 的关键特性是它只传输源文件和目标文件之间 &lt;strong&gt;差异的部分&lt;/strong&gt;，从而大大减少了网络传输量，使其成为备份、镜像和数据迁移的理想选择。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要特点和优势：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;增量传输：&lt;/strong&gt; 这是 rsync 最重要的特性。 它只传输源文件和目标文件之间更改的部分，而不是整个文件。 这显著提高了同步速度，尤其是在处理大型文件或通过慢速网络连接传输数据时。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;压缩：&lt;/strong&gt; rsync 可以压缩数据以减少传输量，进一步提高速度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性：&lt;/strong&gt; rsync 可以通过 SSH (Secure Shell) 等安全协议进行传输，确保数据在传输过程中的机密性和完整性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活性：&lt;/strong&gt; rsync 提供了大量的选项，允许用户精确控制同步过程，例如：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;排除特定文件或目录：&lt;/strong&gt; 可以通过指定模式来排除不需要同步的文件或目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保留文件属性：&lt;/strong&gt; 可以保留文件权限、所有者、时间戳等属性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除目标文件：&lt;/strong&gt; 可以删除目标目录中源目录中不存在的文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模拟运行：&lt;/strong&gt; 可以进行模拟运行，查看同步过程，而不实际修改文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持多种传输协议：&lt;/strong&gt; rsync 可以使用 rsh、ssh 或直接 TCP 连接进行传输。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;镜像网站：&lt;/strong&gt; rsync 非常适合镜像网站，因为它能够快速有效地同步网站内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;备份：&lt;/strong&gt; rsync 经常被用于创建备份，因为它只传输更改的部分，从而节省时间和存储空间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;免费开源：&lt;/strong&gt; rsync 是一个免费且开源的工具，可以自由使用和修改。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;基本用法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;rsync 命令的基本语法如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rsync [OPTIONS] SOURCE DESTINATION&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OPTIONS:&lt;/strong&gt; 各种选项，用于控制 rsync 的行为。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SOURCE:&lt;/strong&gt; 源文件或目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DESTINATION:&lt;/strong&gt; 目标文件或目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;一些常见的 rsync 选项：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: verbose，显示详细的同步过程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: archive，归档模式，保留文件属性（权限、所有者、时间戳等），并递归复制目录。 这是最常用的选项，通常用于备份和同步。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt;: compress，压缩数据以减少传输量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: recursive，递归复制目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: update，只更新目标文件中比源文件旧的文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: dry-run，模拟运行，不实际修改文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--delete&lt;/code&gt;: 删除目标目录中源目录中不存在的文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--exclude=PATTERN&lt;/code&gt;: 排除匹配 PATTERN 的文件或目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--include=PATTERN&lt;/code&gt;: 包含匹配 PATTERN 的文件或目录，即使它被其他排除规则排除。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;: 指定使用的远程 shell，例如 &lt;code&gt;-e ssh&lt;/code&gt; 使用 SSH 进行传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;将本地目录 &lt;code&gt;source_dir&lt;/code&gt; 同步到远程服务器 &lt;code&gt;user@remote_host:/path/to/destination_dir&lt;/code&gt;，使用 SSH 进行传输，并保留文件属性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rsync -avz -e ssh source_dir user@remote_host:/path/to/destination_dir&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;将远程服务器 &lt;code&gt;user@remote_host:/path/to/source_dir&lt;/code&gt; 同步到本地目录 &lt;code&gt;destination_dir&lt;/code&gt;，使用 SSH 进行传输，并删除目标目录中源目录中不存在的文件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rsync -avz -e ssh --delete user@remote_host:/path/to/source_dir destination_dir&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;将本地目录 &lt;code&gt;source_dir&lt;/code&gt; 同步到本地目录 &lt;code&gt;destination_dir&lt;/code&gt;，排除所有 &lt;code&gt;.log&lt;/code&gt; 文件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rsync -avz --exclude=&#39;*.log&#39; source_dir destination_dir&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;工作原理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;rsync 的增量传输算法的核心是 &lt;strong&gt;差分算法 (delta transfer algorithm)&lt;/strong&gt;。 它大致的工作流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;计算校验和：&lt;/strong&gt; rsync 首先计算源文件和目标文件的校验和 (checksum)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;比较校验和：&lt;/strong&gt; 它比较源文件和目标文件的校验和，以确定哪些部分相同，哪些部分不同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输差异：&lt;/strong&gt; 对于不同的部分，rsync 只传输差异的数据块，而不是整个文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重建文件：&lt;/strong&gt; 目标端接收到差异的数据块后，根据已有的目标文件和接收到的差异数据块，重建完整的目标文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;rsync 是一个强大而灵活的文件同步工具，适用于各种场景，包括备份、镜像、数据迁移和文件共享。 它的增量传输特性使其在处理大型文件和通过慢速网络连接传输数据时非常高效。 掌握 rsync 的基本用法和常用选项，可以极大地提高您的工作效率。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
